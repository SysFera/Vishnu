<?xml version="1.0" encoding="UTF-8"?>
<book
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" label="UMS.apim#MAN(admin);UMS.apim#CPP(admin);UMS.apim#PYTHON(admin);IMS.apim#MAN(admin);IMS.apim#CPP(admin);IMS.apim#PYTHON(admin)">
  <info>
    <author>
      <personname>
        <firstname>Benjamin</firstname>
        <surname>Isnard</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Daouda</firstname>
        <surname>Traoré</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Eugène</firstname>
        <surname>Pamba Capo-Chichi</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Kevin</firstname>
        <surname>Coulomb</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Ibrahima</firstname>
        <surname>Cissé</surname>
      </personname>
    </author>
    <title>VISHNU - The guide of the administrator</title>
    <revhistory>
      <revision>
        <revnumber>1</revnumber>
        <date>08/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          
        <para>Initial version of the document, only for the UMS module</para></revdescription>
      </revision>
      <revision>
        <revnumber>2</revnumber>
        <date>18/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          
        <para>Add a paragraph to launch manually using the forwarders and config files</para></revdescription>
      </revision>
      <revision>
        <revnumber>3</revnumber>
        <date>22/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          
        <para>Add the web services</para></revdescription>
      </revision>
      <revision>
        <revnumber>4</revnumber>
        <date>11/05/2011</date>
        <authorinitials>K. COULOMB, B.ISNARD</authorinitials>
        <revdescription>
          
          
          
        <para>Rewrite how to deploy with the config files.</para><para>Add a paragraph for the sendmail function.</para><para>Add the TMS data.</para></revdescription>
      </revision>
      <revision>
        <revnumber>5</revnumber>
        <date>18/05/2011</date>
        <authorinitials>B.ISNARD</authorinitials>
        <revdescription>
          
        <para>Add the configuration parameter dbConnectionsNb.</para></revdescription>
      </revision>
      <revision>
        <revnumber>6</revnumber>
        <date>10/06/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
          
        <para>Documentation for IMS.</para></revdescription>
      </revision>
      <revision>
        <revnumber>7</revnumber>
        <date>15/06/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>
          
        <para>Documentation for FMS.</para></revdescription>
      </revision>
      <revision>
        <revnumber>8</revnumber>
        <date>22/06/2011</date>
        <authorinitials>B.ISNARD</authorinitials>
        <revdescription>
          
        <para>Add the option ENABLE_SWIG.</para></revdescription>
      </revision>
      <revision>
        <revnumber>9</revnumber>
        <date>24/06/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>
          
        <para>Add the option vishnuMachineId in the UMS, IMS and FMS 
            configuration files.</para></revdescription>
      </revision>
      <revision>
        <revnumber>10</revnumber>
        <date>13/07/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
          
        <para>Update document after the first feedbacks .</para></revdescription>
      </revision>
      <revision>
        <revnumber>11</revnumber>
        <date>11/08/2011</date>
        <authorinitials>D.TRAORE</authorinitials>
        <revdescription>
          <para>Take SLURM into account</para></revdescription>
      </revision>
      <revision>
        <revnumber>12</revnumber>
        <date>23/08/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
          <para>Add link on ow to install postgre/mysql databases. Delete the update database part (the creation script contains everything). Add a reference to 'VISHNU_API'</para></revdescription>
      </revision>
      <revision>
        <revnumber>13</revnumber>
        <date>14/12/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
          <para>
            Update for the new dietForwarder
        </para></revdescription>
      </revision>
      <revision>
        <revnumber>14</revnumber>
        <date>15/12/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>
          <para>
            Update the section concerning the configuration of the SSH keys for FMS.
        </para></revdescription>
      </revision>
      <revision>
        <revnumber>15</revnumber>
        <date>16/12/2011</date>
        <authorinitials>D.TRAORE</authorinitials>
        <revdescription>
          <para>
            Add the section to configure the SSH keys in TMS.
        </para></revdescription>
      </revision>
      <revision>
        <revnumber>16</revnumber>
        <date>30/01/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          <para>
            Update the DIET version dependency.
        </para></revdescription>
      </revision>
      <revision>
        <revnumber>17</revnumber>
        <date>27/02/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          <para>
            Add the list of the boost libraries necessaries.
        </para></revdescription>
      </revision>
      <revision>
        <revnumber>18</revnumber>
        <date>02/03/2012</date>
        <authorinitials>D.TRAORE</authorinitials>
        <revdescription>
          <para>Add the LSF batch</para></revdescription>
      </revision>
      <revision>
        <revnumber>19</revnumber>
        <date>22/03/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          <para>Add the LDAP support</para></revdescription>
      </revision>
      <revision>
        <revnumber>20</revnumber>
        <date>11/04/2012</date>
        <authorinitials>E. PAMBA CAPO-CHICHI</authorinitials>
        <revdescription>
          <para>Add the Grid Engine batch handling</para></revdescription>
      </revision>
      <revision>
        <revnumber>21</revnumber>
        <date>30/05/2012</date>
        <authorinitials>E. PAMBA CAPO-CHICHI</authorinitials>
        <revdescription>
        <para> Add version of LoadLeveler, GLIBC for libcrypt and ssh</para></revdescription>
      </revision>
      <revision>
        <revnumber>22</revnumber>
        <date>27/08/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
        <para> Add new TMS compilation documentation</para></revdescription>
      </revision>
      <revision>
        <revnumber>23</revnumber>
        <date>01/10/2012</date>
        <authorinitials>K. Chakode</authorinitials>
        <revdescription>
        <para> Adding a prerequisites section and refining of the installation process</para></revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter>
    <title>Presentation of the document</title>
    <section>
      <title>Aim</title>
      <para>
		This document presents the installation, the configuration and the management of the components of the VISHNU toolkit.
      </para>
    </section>
    <section>
      <title>Prerequisites</title>
      <para>
		To ensure a good comfort during the reading of the document, the reader should have at least a basic experience 
		in system administration on GNU/Linux environments. In particular and according to the operating system, a good knowledge 
        of a package manager, such as <emphasis>apt-get</emphasis>, <emphasis>dpkg</emphasis>, <emphasis>rpm</emphasis>, 
		<emphasis>yum</emphasis> or <emphasis>zypper</emphasis>, would be very helpful to ease the searching and the installation 
        of VISHNU's dependencies.
      </para>
      <para>Furthermore, we assume that you have read and understood the technical architecture of VISHNU. If not, refer to the document [ARCH], and especially in the chapter 4.</para>
    </section>
    <section>
      <title>Structure of the document</title>
      <para>This document contains the following parts:
      </para>
      <para>
	<itemizedlist>
          <listitem>
            <para>Definitions</para>
          </listitem>
          <listitem>
            <para>Installation</para>
          </listitem>
          <listitem>
            <para>Installation of the web services</para>
          </listitem>
          <listitem>
            <para>How to deploy</para>
          </listitem>
          <listitem>
            <para>Administration</para>
          </listitem>
          <listitem>
            <para>Reference of the commands</para>
          </listitem>
          <listitem>
            <para>Reference of the C++ API </para>
          </listitem>
          <listitem>
            <para>Reference of the Python API</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter>
    <title>Definitions</title>
    <section>
      <title>Acronyms</title>
      <itemizedlist>
        <listitem>
          <para>DB: Database, a centralized point providing mechanisms to store and retrieve application data in a effective way</para>
        </listitem>
        <listitem>
          <para>FMS: File Management Service.</para>
        </listitem>
        <listitem>
          <para>IMS: Information Management Service.</para>
        </listitem>
        <listitem>
          <para>LDAP: Lightweight Directory Access Protocol, is a protocol enabling to manage distributed directory services.</para>
        </listitem>
        <listitem>
          <para> MA: &quot;Master Agent&quot;: Is a element of DIET allowing to distribute the requests between the clients and the servers.</para>
        </listitem>
        <listitem>
          <para>SQL: Language of request on the databases.</para>
        </listitem>
        <listitem>
          <para>TMS: Task Management Service.</para>
        </listitem>
        <listitem>
          <para>UMS: User Management Service</para>
        </listitem>
        <listitem>
          <para>WS: Web Services.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>References</title>
      <itemizedlist>
        <listitem>
          <para>[ARCH] D1.1g-VISHNU Technical Architecture: description of the architecture of the VISHNU application. </para>
        </listitem>
        <listitem>
          <para>[DIET_USERGUIDE] DIET User Guide: DIET is an open source tool used by VISHNU.</para>
        </listitem>
        <listitem>
          <para>[VISHNU_USERMANUAL] VISHNU User Manual.</para>
        </listitem>
        <listitem>
          <para>[VISHNU_API] VISHNU API: API VISHNU containing the signatures and the definition of the objects used by VISHNU.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Glossary</title>
      <para>
	<itemizedlist>
          <listitem>
            <para>FMS Client: It represents the programs allowing one to access the services of the FMS SeD. </para>
          </listitem>
          <listitem>
            <para>IMS Client: It represents the programs allowing one to access the services of the IMS SeD. </para>
          </listitem>
          <listitem>
            <para>TMS Client: It represents the programs allowing one to access the services of the TMS SeD. </para>
          </listitem>
          <listitem>
            <para>UMS Client: It represents the programs allowing one to access the services of the UMS SeD. </para>
          </listitem>
          <listitem>
            <para>gateway: It represents a machine sets before the gateway of the clusters. </para>
          </listitem>
          <listitem>
            <para>FMS SeD: It represents the program containing and executing the services of the FMS module. </para>
          </listitem>
          <listitem>
            <para>IMS SeD: It represents the program containing and executing the services of the IMS module. </para>
          </listitem>
          <listitem>
            <para>TMS SeD: It represents the program containing and executing the services of the TMS module. </para>
          </listitem>
          <listitem>
            <para>UMS SeD: It represents the program containing and executing the services of the UMS module. </para>
          </listitem>
          <listitem>
            <para>SysFera-DS: Is an open source middleware developed by SysFera. It is comprised of set of software that includes, among others, DIET and LOGSERVICE.</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter>
    <title>Installing from the sources</title>
    <section>
      <title>Objectives</title>
      <para> This chapter presents how to install VISHNU from the sources. It explains
        how to install both clients and servers (the installation of a server implies the 
        installation of the associated client). The UMS module is necessary for all; any other module 
        can be installed independantly from each other. It does not prevent using the services even thought servers
        are on another machine. Nevertheless, to enable IMS to load shed a machine, the corresponding
        modules (TMS and/or FMS) must be installed with IMS and running on the machine.</para>
    </section>
    <section>
      <title>Prerequisite</title>
      <para>According to the modules to install, you may need the following software dependencies:</para>
      <itemizedlist>
        <listitem>
          <para>Dependency for all the modules VISHNU:</para>
          <itemizedlist>
            <listitem>
              <para>GCC: Version 4.4.3 or higher.</para>
            </listitem>
            <listitem>
              <para>CMAKE: Version 2.8 or higher.</para>
            </listitem>
            <listitem>
              <para>GNU Make or Ninja: Executable generators. Alternatively to Make, Ninja generator is more faster and 
				is helpful for reducing the compilation duration. Especially when you need to compile several modules 
				of VISHNU on the same machine.</para>
            </listitem>
            <listitem>
              <para>BOOST: Version 1.46.1 or higher. At least the following modules <emphasis>program_options, 
              date_time, thread, filesystem, system, unit_test_framework, serialization, random</emphasis> and 
              <emphasis>regex</emphasis> should be installed.</para>
            </listitem>
            <listitem>
              <para>OMNIORB: Version or 4.1.4 or higher.</para>
            </listitem>
            <listitem>
              <para>GLIBC: Version 2.7 or higher.</para>
            </listitem>
            <listitem>
              <para>OpenSSH: Version 4.2 or higher.</para>
            </listitem>
            <listitem>
              <para>DIET: Version 2.8 with LOG SERVICE enabled.</para>
            </listitem>
            <listitem>
              <para>Library to access the database:</para>
              <para>VISHNU requires a database; MySQL and PostGreSQL databases are supported. 
              According to the type of the database engine, you need to install the appropriate API while taking care about the supported versions:</para>
              <itemizedlist>
                <listitem>
                  <para>API PostGreSQL (PGSQL-API): Version 8.0 or higher.</para>
                </listitem>
                <listitem>
                  <para>API MySQL: Version 5.1 or higher.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Optional dependencies for UMS:</para>
          <itemizedlist>
            <listitem>
              <para>OpenLDAP: Version 2.4 or higher.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>According to the underlying TMS Bacth Scheduler, you may need to install one of the following API:</para>
          <itemizedlist>
            <listitem>
              <para>Torque API: Tested with the version 2.3.6.</para>
            </listitem>
            <listitem>
              <para>IBM LoadLeveler API: Tested with the version 3.5.1.14</para>
            </listitem>
            <listitem>
              <para>SLURM API: Tested with the versions v2.2.x, 2.3.x and 2.4.x.</para>
            </listitem>
            <listitem>
              <para>LSF API: Tested with the version v7.0.6.134609.</para>
            </listitem>
            <listitem>
              <para>Grid Engine API: Tested with the version 2011.11.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Optional dependency:</para>
          <itemizedlist>
            <listitem>
              <para>SWIG: 1.3.40. WARNING: The version 2 is not supported.</para>
            </listitem>
            <listitem>
              <para>JAVA SDK: Version 1.6</para>
            </listitem>
            <listitem>
              <para>Python: Version 2.x, x >= 5.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title> Compilation of the sources </title>
      <para>VISHNU uses the CMake compilation system and follows the actual uses.
	The main options are:
	<itemizedlist>
          <listitem>
            <para>
	      BUILD_TESTING, compile the tests (OFF by default).
	    </para>
          </listitem>
          <listitem>
            <para>
	      CLIENT_ONLY, do not compile the servers (OFF by defaut). Otherwize, both clients and servers are compiled.
	    </para>
          </listitem>
          <listitem>
            <para>
	      CMAKE_INSTALL_PREFIX, directory to install (/usr/local by default on the *nix plateform)
	    </para>
          </listitem>
          <listitem>
            <para>
	      COMPILE_TMS, compile the TMS module (OFF by default). If ON, COMPILE_UMS must be activated and
              the following options VISHNU_BATCH and VISHNU_BATCH_VERSION must be filled.
	    </para>
          </listitem>
          <listitem>
            <para>
	      COMPILE_IMS, compile the IMS module (OFF by default). If ON, COMPILE_UMS must be activated.
	    </para>
          </listitem>
          <listitem>
            <para>
	      COMPILE_FMS, compile the FMS module (OFF by default). If ON, COMPILE_UMS must be activated.
	    </para>
          </listitem>
          <listitem>
            <para>
	      COMPILE_UMS, compile the UMS module (ON by default).
	    </para>
          </listitem>
          <listitem>
            <para>
	      ENABLE_PYTHON, to compile the python API (OFF by default).
	    </para>
          </listitem>
          <listitem>
            <para>
	      ENABLE_JAVA, to compile the java for the WS API (OFF par default).
	    </para>
          </listitem>
          <listitem>
            <para>
	      ENABLE_LDAP, to activate the LDAP support to authenticate (OFF by default).
	    </para>
          </listitem>
          <listitem>
            <para>
              ENABLE_SWIG, to generate the code for the python and java modules (otherwise use a precompiled version if the flags are activated) (OFF by default). This option must be activated if some VISHNU modules are not compiled. It requires the swig package to compile (see dependencies).
            </para>
          </listitem>
          <listitem>
            <para>
	      VISHNU_BATCH, compile the TMS SeD for the corresponding batch (TORQUE by default). The (BATCHNAME)_INCLUDE_DIR and (BATCHNAME)_LIB variables must be filled.</para>
            <itemizedlist>
              <listitem>
                <para>
                  LOADLEVELER_INCLUDE_DIR indicate the absolute path to the llapi.h file
                </para>
              </listitem>
              <listitem>
                <para>
                  LOADLEVELER_LIB indicate the absolute path to the llapi.so library
                </para>
              </listitem>
              <listitem>
                <para>
                  TORQUE_INCLUDE_DIR indicate the absolute path to the pbs_ifl.h file.
                </para>
              </listitem>
              <listitem>
                <para>
                  TORQUE_LIB indicates the absolute path to the libtorque.so library.
                </para>
              </listitem>
              <listitem>
                <para>
                  SLURM_INCLUDE_DIR indicate the absolute path to the file slurm/slurm.h
                </para>
              </listitem>
              <listitem>
                <para>
                  SLURM_LIB indicate the absolute path to the libslurm.so library.
                </para>
              </listitem>
              <listitem>
                <para>
                  LSF_INCLUDE_DIR indicate the absolute path to the lsf/lsbatch.h file
                </para>
              </listitem>
              <listitem>
                <para>
                  LSBATCH_LIB indicate the absolute path to the libbat.so library.
                </para>
              </listitem>
              <listitem>
                <para>
                  LSF_LIB indicate the absolute path to the liblsf.so  library
                </para>
              </listitem>
              <listitem>
                <para>
                  SGE_ROOT indicate the absolute path to the directory where Grid Engine is installed
                </para>
              </listitem>
              <listitem>
                <para>
                  SGE_INCLUDE_DIR indicate the absolute path to the drmaa.h file
                </para>
              </listitem>
              <listitem>
                <para>
                  SGE_BIN_DIR indique the absolute path to the  Grid Engine binaries
                </para>
              </listitem>
              <listitem>
                <para>
                  SGE_LIB indicate the absolute path to the libdrmaa.so library
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para>
              VISHNU_BATCH_VERSION indique la version du batch scheduler utilisée
            </para>
          </listitem>
        </itemizedlist>
        </para>
      <para>
        For instance, the following steps allow to compile and install the client and the server sides of UMS and TMS in /opt/vishnu. There, we use TORQUE as backend to TMS while enabling the Python API.
      </para>
      <itemizedlist>
        <listitem>
          <para>1. Create a build repository at the root of the vishnu project and go in</para>
          <para>$ <emphasis>mkdir build</emphasis></para>
          <para>$ <emphasis>cd build</emphasis></para>
        </listitem>
        <listitem>
          <para>2. Generate the Makefile</para>
          <itemizedlist>
            <listitem>
              <para>Using Make</para>
              <para>$ <emphasis>cmake -DCMAKE_INSTALL_PREFIX=/opt/vishnu  \</emphasis></para>
              <para><emphasis>  -DENABLE_SWIG=ON  \</emphasis></para>
              <para><emphasis>  -DENABLE_PYTHON=ON  \</emphasis></para>
              <para><emphasis>  -DCOMPILE_UMS=ON  \</emphasis></para>
              <para><emphasis>  -DCOMPILE_TMS=ON  \</emphasis></para>
              <para><emphasis>  -DVISHNU_BATCH=TORQUE  \</emphasis></para>
              <para><emphasis>  -DVISHNU_BATCH_VERSION=2.3  \</emphasis></para>
              <para><emphasis>  -DTORQUE_DIR=/opt/torque</emphasis></para>
            </listitem>
            <listitem>
              <para>Using Ninja: requires to set the generator to Ninja. See the flag CMAKE_GENERATOR.</para>
              <para>$ <emphasis>cmake -DCMAKE_INSTALL_PREFIX=/opt/vishnu  \</emphasis></para>
              <para><emphasis>  -DENABLE_SWIG=ON  \</emphasis></para>
              <para><emphasis>  -DENABLE_PYTHON=ON \</emphasis></para>
              <para><emphasis>  -DCOMPILE_UMS=ON  \</emphasis></para>
              <para><emphasis>  -DCOMPILE_TMS=ON  \</emphasis></para>
              <para><emphasis>  -DVISHNU_BATCH=TORQUE  \</emphasis></para>
              <para><emphasis>  -DVISHNU_BATCH_VERSION=2.3  \</emphasis></para>
              <para><emphasis>  -DTORQUE_DIR=/opt/torque \</emphasis></para>
              <para><emphasis role="bold">  -DCMAKE_GENERATOR=Ninja</emphasis></para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>3. Launch the compilation</para>
          <itemizedlist>
            <listitem>
              <para>Using Make</para>
              <para>$ <emphasis>make -j 2</emphasis></para>
              <para>The option -j 2 allows to run the compilation with two processes.</para>
            </listitem>
            <listitem>
              <para>Using Ninja</para>
              <para>$ <emphasis>ninja -j 2</emphasis></para>
              <para>The option -j 2 allows to run the compilation with two processes.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>4. Installing the binaries</para>
          <para>$ <emphasis>make install</emphasis></para>
          <para>This step may require root privileges.</para>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Note</emphasis>: Do not forget to add the install 
        directory/bin to PATH.</para>
    </section>
  </chapter>
  <chapter>
    <title>Configuration of the database</title>
    <para>The files to configure the DB are available in the core/database repository of the sources of VISHNU. Only postgresql and mysql are currently supported. 
Only one database is necessary for all the components of a VISHNU infrastructure (UMS, IMS, FMS and TMS).</para>
    <section>
      <title>Use a MySQL Database</title>
      <para>This section assumes that you already have a MySQL installation ready to use. Otherwise refer to the MySQL documentation to learn how to install it.</para>
      <para>You also need to have a root access on your MySQL installation.</para>
      <para>The setup of the Vishnu database requires the scripts <emphasis>mysql_create.sql</emphasis> and <emphasis>database_init.sql</emphasis> located in <emphasis>./core/database</emphasis> from the source tree. The first script (mysql_create.sql) allows to create the database schema while the second one allows to carry out the first data initialization.</para>
      <para>To create and initialize the database, perform the following steps:
    	<itemizedlist>
          <listitem>
            <para>Connect to the MySQL server as root:</para>
            <para>$ <emphasis>mysql -h mysql@server -u root -p </emphasis>    #replace mysql@server with the address of your MySql server</para>
          </listitem>
          <listitem>
            <para>Create the Vishnu's database</para>
            <para>$ <emphasis>create database vishnu ; </emphasis></para>
          </listitem>
          <listitem>
            <para>Connect to the database</para>
            <para>$ <emphasis>use vishnu ; </emphasis></para>
          </listitem>
          <listitem>
            <para>Create the database schema</para>
            <para>$ <emphasis>source /path/to/mysql_create.sql </emphasis></para>
          </listitem>
          <listitem>
            <para>Initialize the database</para>
            <para>$ <emphasis>source /path/to/database_init.sql</emphasis></para>
          </listitem>
        </itemizedlist>
    </para>
    </section>
    <section>
      <title>Use a PostGreSQL Database</title>
      <para>In this section, we assume that you have a PostGreSQL installation ready to use. Otherwise refer to the PostGreSQL documentation to learn how to install it.</para>
      <para>You also need to have a root access on your PostGreSQL installation.</para>
      <para>The setup of the Vishnu database requires the scripts <emphasis>postgre_create.sql</emphasis> and <emphasis>database_init.sql</emphasis> located in <emphasis>./core/database</emphasis> from the source tree. The first script (<emphasis>postgre_create.sql</emphasis>) allows to create the database schema while the second one allows to carry out the first data initialization.</para>
      <para>To create and initialize the database, perform the following steps from the PostGreSQL server:
    	<itemizedlist>
          <listitem>
            <para>Log as 'postgres' user (root):</para>
            <para>$ <emphasis>su postgres</emphasis></para>
          </listitem>
          <listitem>
            <para>Create the Vishnu's database</para>
            <para>$ <emphasis>createdb vishnu ; </emphasis></para>
          </listitem>
          <listitem>
            <para>Connect to the database</para>
            <para>$ <emphasis>psql vishnu ; </emphasis></para>
          </listitem>
          <listitem>
            <para>Create the database schema</para>
            <para>$ <emphasis>\i /path/to/mysql_create.sql </emphasis></para>
          </listitem>
          <listitem>
            <para>Initialize the database</para>
            <para>$ <emphasis>\i /path/to/database_init.sql</emphasis></para>
          </listitem>
        </itemizedlist>
    </para>
    </section>
    <section>
      <title>Use LDAP</title>
      <para>We also assume here that you have a LDAP installation ready to use. Otherwise refer to the LDAP documentation to learn how to install it. On some GNU/Linux distribution, you may also install that from your package manager. On Debian systems, you need to install the following packages: <emphasis>slapd, libldap-2.4-2, libldap2-dev</emphasis> and <emphasis>ldap-utils</emphasis>.</para>
      <para>To install with LDAP authentication support, the flag ENABLE_LDAP must be enabled at the compilation time. Once the installation is completed, you need to set the parameter 'authenticationType' from the UMS configuration file accordingly. Possible values of this parameter are:
        <itemizedlist>
          <listitem>
            <para>
              UMS: Authenticate using only the database
            </para>
          </listitem>
          <listitem>
            <para>
              LDAPUMS: For each couple (username, password), try to authenticate using LDAP first then the UMS database
            </para>
          </listitem>
          <listitem>
            <para>
              UMSLDAP: For each couple (username, password), try to authenticate using the UMS database first then LDAP
            </para>
          </listitem>
          <listitem>
            <para>
              LDAP: Authenticate using only LDAP
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter>
    <title>Installation of the web services</title>
    <section>
      <title>Prerequisite</title>
      <itemizedlist>
        <listitem>
          <para>Install <emphasis role="bold">Java 1.6</emphasis> (command 'sudo apt-get install openjdk-6-jdk' or 'sudo apt-get install sun-java6-jdk' under Linux Debian) and check the value of the JAVA_HOME (set it if necessary).</para>
        </listitem>
        <listitem>
          <para>Install the desired modules (advice all with the flag CLIENT_ONLY)and the java options -DENABLE_JAVA=ON and -DENABLE_SWIG (<emphasis
                role="bold">Note</emphasis>:
            This prerequisite is optionnal because the jars are already available in the distribution.</para>
        </listitem>
        <listitem>
          <para>Install <emphasis role="bold">Maven 2</emphasis> to compile the jars (<emphasis
                role="bold">Note</emphasis>:
            This prerequisite is optional because the jars are already available in the distribution. Moreover Maven needs an internet connexion</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Installation of JBoss</title>
      <itemizedlist>
        <listitem>
          <para>Download the package JBOSSAS: (the binary version is available) at http://www.jboss.org/jbossas/downloads => version 5.1.0.GA</para>
        </listitem>
        <listitem>
          <para>Download the package JBOSSWS: (the binary version is available) at http://www.jboss.org/jbossws/downloads/ => version 3.3.1.GA</para>
        </listitem>
        <listitem>
          <para>Unzip the archive of the package JBOSSAS 5.1.0</para>
        </listitem>
        <listitem>
          <para> Define the environment variable JBOSS_HOME on the unzipped repository. For instance in the .bashrc file:</para>
          <para>'export JBOSS_HOME=/home/toto/jboss-5.1.0.GA'</para>
        </listitem>
        <listitem>
          <para>Unzip the archive of the package JBOSSWS 3.3.1 and go in the created repository</para>
        </listitem>
        <listitem>
          <para> Copy the file 'ant.properties.example' in 'ant.properties'</para>
        </listitem>
        <listitem>
          <para> Edit the newly created 'ant.properties' file. Set the value of the jboss510.home variable to the value JBOSS_HOME value. Note, if a version a jboss different to 5.1.0 is used, it is the corresponding variable that must be set.</para>
        </listitem>
        <listitem>
          <para> Launch the command 'ant deploy-jboss510'. Note, if a version a jboss different to 5.1.0 is used, it is the corresponding version that must be used in the command.</para>
        </listitem>
        <listitem>
          <para> The server can be launched running the script in JBOSS_HOME/bin/run.sh. To make the server available from an other machine, the '-b adressIP' option must be used. With adressIP representing the IP of the machien where the jboss server runs. Do not forget to check if the firewall enables the 8080 port.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Verification of the installation:</emphasis>
            To check that the jboss server is running and that the WS is avaible, you can go to the URL 'http://localhost:8080/jbossws' (or 'http://adresseIP:8080/jbossws') and check that the page display the right version of jboss (jbossws-cxf-3.3.1.GA).</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Installation of the WS modules with JBoss</title>
      <section>
        <title>Files to install</title>
        <itemizedlist>
          <listitem>
            <para>VISHNULib-1.0-SNAPSHOT.jar
              <itemizedlist>
                <listitem>
                  <para>Contains the internal classes linking the JAVA (JNI) and the C++.</para>
                </listitem>
                <listitem>
                  <para>Copy it in <emphasis role="bold">JBOSS_HOME/server/default/lib</emphasis>.</para>
                </listitem>
                <listitem>
                  <para>Changing the jar implies restarting the jboss server.</para>
                </listitem>
                <listitem>
                  <para>Compilation (if necessary)
                    <itemizedlist>
                      <listitem>
                        <para>Go to the VISHNULib directory</para>
                      </listitem>
                      <listitem>
                        <para>Make 'mvn install' (may last long the first time)</para>
                      </listitem>
                      <listitem>
                        <para>The .jar file created is in the target directory</para>
                      </listitem>
                    </itemizedlist>
                </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>WSAPI.jar
              <itemizedlist>
                <listitem>
                  <para>Contain the classes from the WSDL and the implementation of the WS.</para>
                </listitem>
                <listitem>
                  <para>Copy in <emphasis role="bold">JBOSS_HOME/server/default/deploy</emphasis>.</para>
                </listitem>
                <listitem>
                  <para>Can be updated without restarting the JBOSS server.</para>
                </listitem>
                <listitem>
                  <para>Compilation (if necessary)
                    <itemizedlist>
                      <listitem>
                        <para>Go in the WSAPI directoy after having a valid VISHNULib-1.0-SNAPSHOT.jar jar</para>
                      </listitem>
                      <listitem>
                        <para>Make 'mvn install' (may last long the first time) </para>
                      </listitem>
                      <listitem>
                        <para>The .jar file created is in the target directory.</para>
                      </listitem>
                      <listitem>
                        <para>Rename it to WSAP.jar and set it in JBOSS (necessary)</para>
                      </listitem>
                    </itemizedlist>
                </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>libVISHNU.so
              <itemizedlist>
                <listitem>
                  <para> Necessary to use the WS in VISHNU. This library is obtained when compiling with the ENABLE_JAVA option.</para>
                </listitem>
                <listitem>
                  <para>It is installed in the lib directory with the other libs.</para>
                </listitem>
                <listitem>
                  <para>If there is a problem when deploying the JBOSS server, make sure it is located in the LD_LIBRARY_PATH.</para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Environment variable to be defined</title>
        <itemizedlist>
          <listitem>
            <para>VISHNU_CONFIG_FILE: contains the full path to the client configuration file. Si the user guide [VISHNU_USER_GUIDE] for its content.
              If the execution fails with a message linked to the initialisation of the library, check this variable.
            </para>
          </listitem>
          <listitem>
            <para>LD_LIBRARY_PATH: contains the paths of the directories containing the VISHNU libraries, like libVISHNU.so.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Starting the JBoss server with the WS</title>
        <itemizedlist>
          <listitem>
            <para> After installing as presented previously, the JBoss server must be started.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Verification of the installation:</emphasis> To check that the JBoss server is correctly running and that the UMS web service is activated, go to the URL at 'http://localhost:8080/jbossws/services' (ou 'http://adresseIP:8080/jbossws/services') and check that the
              &quot;service endPoint&quot;: <emphasis role="bold">VISHNUUMSPortImpl</emphasis> is active.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
  </chapter>
  <chapter>
    <title>Deploying VISHNU </title>
    <section>
      <title>On a single network</title>
      <para>Modules can be deployed manually. Deployment will be described using the 4.1 figure of the [ARCH] document as an example. To simplify, we suppose the elements on the same area  &quot;dedicated to VISHNU&quot;  will be deployed on the same machine called <emphasis
            role="bold">gateway</emphasis>.</para>
      <para><emphasis role="bold">IMPORTANT NOTES:</emphasis> 
		<itemizedlist>
          <listitem>
            <para> It is advised to avoid launching the same SeD on a machine more than once.</para>
          </listitem>
          <listitem>
            <para> There is a known bug under debian with boost file system, used by VISHNU. 
				The report can be found there: https://svn.boost.org/trac/boost/ticket/4688. 
				If when launching a SeD the following error message appears: std::runtime_error: 
				locale::facet::_S_create_c_locale name not valid, making &quot;export LANG=C&quot; should fix it.
			</para>
          </listitem>
          <listitem>
            <para> The VISHNU user 'root' must have a local account on each machine where there is an IMS server. 
				The associated unix account will be used to relaunch the SeD.
			</para>
          </listitem>
        </itemizedlist>
    </para>
      <para>Now that these points are clear, we can launch the environment. 
	For starting your VISHNU environment successfully, you need to perform the following steps careful:</para>
      <orderedlist>
        <listitem>
          <para> Check you have a database created and initialized.</para>
        </listitem>
        <listitem>
          <para> Start the CORBA naming service on the gateway. The command is <emphasis
                role="bold">omniNames -start</emphasis> if starting for the first time, <emphasis
                role="bold">omniNames</emphasis> is enough otherwise. Warning, in the omniNames configuration file, use the address of the host and not 'localhost' or '127.0.0.1'. </para>
        </listitem>
        <listitem>
          <para> Start the log service of DIET on the gateway. The command is <emphasis
                role="bold">LogCentral --config config.cfg</emphasis> with config.cfg a configuration file for the log central. An example of configuration is provided at the section 6.10.</para>
        </listitem>
        <listitem>
          <para> Start the MA with its configuration file on the gateway: <emphasis
                role="bold">dietAgent config.cfg</emphasis>. See the paragraph 6.3 to have an example of configuration file. This configuration file can contain the 3 following lines:
            <itemizedlist>
              <listitem>
                <para> 'traceLevel = 0': The level of verbosity of the agent, can be between 0 and 100. (100 is fully verbose, with corba details). </para>
              </listitem>
              <listitem>
                <para> 'agentType = DIET_MASTER_AGENT': The type of the agent, the other value possible is DIET_LOCAL_AGENT, but in our case it must be DIET_MASTER_AGENT.</para>
              </listitem>
              <listitem>
                <para> 'name = MA0': The name of the agent, for instance MA0 here.</para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>Launch the UMS SeD on the gateway with the command <emphasis role="bold">umssed ~/ums_sed.cfg</emphasis>. The parameter is a VISHNU configuration file. See the paragraph 6.5 to see an example of configuration file. The parameters correspond to:
            <itemizedlist>
              <listitem>
                <para>
                  'configFileFile=/usr/local/etc/SeD.cfg': the path until the DIET configuration file. See the paragraph 6.4 for an example. The file can contains the two following lines:
                  <itemizedlist>
                    <listitem>
                      <para>'traceLevel = 0':  The level of verbosity of the agent, can be between 0 and 100. (100 is fully verbose, with corba details).</para>
                    </listitem>
                    <listitem>
                      <para> 'parentName = MA0': The name of the master agent to be linked to. It must be the exact same name as the one in the 'name' field in the corresponding MA. In this example, it is MA0.</para>
                    </listitem>
                    <listitem>
                      <para> 'useLogService = 1': To use the log service of DIET.</para>
                    </listitem>
                  </itemizedlist>
		</para>
              </listitem>
              <listitem>
                <para> 'vishnuId=1': The id of the VISHNU deployment to use in te DB (1 by default).</para>
              </listitem>
              <listitem>
                <para> 'databaseType=postgresql': To use a postgresql database. To use a MySQL database, one must set the value to 'mysql'.</para>
              </listitem>
              <listitem>
                <para>
                  'databaseHost=localhost': The DNS name of the DB server, or 'localhost' if the DB is local.
		</para>
              </listitem>
              <listitem>
                <para>'databaseName=vishnu': The DB name.</para>
              </listitem>
              <listitem>
                <para> 'databaseUserName=vishnu_user': The username to connect to the DB.</para>
              </listitem>
              <listitem>
                <para> 'databaseUserPassword=vishnu_user': The password to connect to the DB.</para>
              </listitem>
              <listitem>
                <para> 'databaseConnectionsNb=5': The number of DB connexions that can be opened on the DB. By default it is 10.</para>
              </listitem>
              <listitem>
                <para> 'sendmailScriptPath=/usr/local/vishnu/sbin/sendmail.py': The script used to send mails. It is installed with the UMS module 
		in the sbin directory.</para>
              </listitem>
              <listitem>
                <para>'authenticationType=LDAP': Use only LDAP to authentify the users (see LDAP for the 4 values available).</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_1' : Optionnal, this parameter specifies the identifier of the machine related to the SeD.</para>
                <para><emphasis role="bold">IMPORTANT: </emphasis>During the first initialialization, i.e. when there is not yet a machine 
                registered into the system, this parameter must be leave empty. Indeed, when set, its value should correspond to a VISHNU 
                machine, otherwise the SeD will fail.</para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>
	    On a torque machine, launch the torque server (pbs_serv), the torque scheduler (pbs_sched) and the torque scheduler (pbs_mom) of Torque.
	  </para>
        </listitem>
        <listitem>
          <para>Start the TMS SeD on the Torque host machine. The command is: <emphasis
                role="bold">tmssed ~/tms_sed.cfg</emphasis>. The parameter is a VISHNU configuration file. See the paragraph 6.6 to have an example. The parameters are the same as the ones of UMS plus:
	    <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1': The frequency (in second) when the database is updated with the jobs states.</para>
              </listitem>
              <listitem>
                <para>'batchSchedulerType=TORQUE': The type of batch scheduler used.</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_1': The VISHNU machine identifier where the TMS SeD is launched (the same as given by vishnu_list_machines).</para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>
            On the SLURM machine, launch the servers
            <emphasis>slurmd, slurmctld</emphasis> and <emphasis>slurmdbd</emphasis>.
          </para>
        </listitem>
        <listitem>
          <para>Start the TMS SeD on the Torque host machine. The command is: <emphasis
                role="bold">tmssed ~/tms_sed.cfg</emphasis>. The parameter is a VISHNU configuration file. See the paragraph 6.6 to have an example. The parameters are the same as the ones of UMS plus:
            <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1': The frequency (in second) when the database is updated with the jobs states.</para>
              </listitem>
              <listitem>
                <para>'batchSchedulerType=SLURM': The type of batch scheduler used.</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_1': The VISHNU machine identifier where the TMS SeD is launched (the same as given by vishnu_list_machines).</para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>
            On the LSF machine, launch the executables <emphasis>hostsetup</emphasis> <emphasis>lsfstartup</emphasis>.
          </para>
        </listitem>
        <listitem>
          <para>Start the TMS SeD on the Torque host machine. The command is: <emphasis
                role="bold">tmssed ~/tms_sed.cfg</emphasis>. The parameter is a VISHNU configuration file. See the paragraph 6.6 to have an example. The parameters are the same as the ones of UMS plus:
            <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1': The frequency (in second) when the database is updated with the jobs states.</para>
              </listitem>
              <listitem>
                <para>'batchSchedulerType=LSF': The type of batch scheduler used.</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_1': The VISHNU machine identifier where the TMS SeD is launched (the same as given by vishnu_list_machines).</para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>
            On the Grid Engine machine, launch the executables <emphasis>sge_qmaster </emphasis>and <emphasis>sge_execd</emphasis>.
      </para>
        </listitem>
        <listitem>
          <para>Start the TMS SeD on the Torque host machine. The command is: <emphasis
                role="bold">tmssed ~/tms_sed.cfg</emphasis>. The parameter is a VISHNU configuration file. See the paragraph 6.6 to have an example. The parameters are the same as the ones of UMS plus:
            <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1': The frequency (in second) when the database is updated with the jobs states.</para>
              </listitem>
              <listitem>
                <para>'batchSchedulerType=SGE': The type of batch scheduler used.</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_1': The VISHNU machine identifier where the TMS SeD is launched (the same as given by vishnu_list_machines).</para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>Start the IMS SeD on all the desired machines. The command is: <emphasis
                role="bold">imssed ~/ims_sed.cfg</emphasis>. The parameter is a VISHNU configuration file. See the paragraph 6.5 to have an example. The parameters are the same as the ones of UMS. Please note that an IMS SeD must be launched on each machine to monitor.
          </para>
        </listitem>
        <listitem>
          <para>Start the FMS SeD on a machine. The command is: <emphasis role="bold">fmssed ~/fms_sed.cfg</emphasis>. The parameter is a VISHNU configuration file. See the paragraph 6.7 to have an example. The parameters are the same as the ones of UMS plus:
	    <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1': The frequency (in second) when the database is updated with the file transfers.</para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>
            VISHNU modules are ready to be used. To do so, a client must connect and submit requests to VISHNU using the API of the modules (see the user guide for more information).
          </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Deployment on various networks <emphasis role="bold">with DIET version >= 2.8</emphasis></title>
      <para>VISHNU modules can be deployed manually. The example of deployment will be based on figure 4.2 of the [ARCH] document, supposing to simplify that on a network, all the processes run on the same machine and that &quot;network C&quot; and &quot;network D&quot; are the same (no need of forwarder between them).
      </para>
      <orderedlist>
        <listitem>
          <para> Check you have a database created and initialized.</para>
        </listitem>
        <listitem>
          <para> Start the CORBA naming service on the gateway. The command is <emphasis
                role="bold">omniNames -start</emphasis> if starting for the first time, <emphasis
                role="bold">omniNames</emphasis> is enought otherwise. Warning, in the omninames configuration file, use the adress of the host and not 'localhost' or '127.0.0.1'. </para>
        </listitem>
        <listitem>
          <para> Start a daemon forwarder on the network B:  </para>
          <para><emphasis role="bold">dietForwarder --name forwarder2</emphasis>
	    <itemizedlist>
              <listitem>
                <para>
	          forwarder2: Name that identifies the forwarder
	      </para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para> Start a daemon forwarder on the network C: </para>
          <para><emphasis role="bold">dietForwarder --peer-name forwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name forwarder
	      --remote-host localhost
	      --ssh-login login</emphasis>
          </para>
          <para>
	    <itemizedlist>
              <listitem>
                <para>
	          --peer-name: The name of the peer forwarder, here forwarder2.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --ssh-host: The DNS name of the distant machine to connect the SSH tunnel.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --remote-port: optionnal, the port to use, here 50005.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --name: The name of the forwarder.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --remote-host: The loopback adresse, here 'localhost'.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --ssh-login: The login on the distant machine.
	  </para>
              </listitem>
            </itemizedlist>
      </para>
        </listitem>
        <listitem>
          <para> If the SSH key is accessible and that the key is protected by a
        passphrase, it is asked and the SSH connexion is established.
      </para>
        </listitem>
        <listitem>
          <para>  Start a daemon forwarder on the network B: </para>
          <para><emphasis role="bold">logForwarder --name logforwarder2</emphasis>
	<itemizedlist>
              <listitem>
                <para>
	      logforwarder2: Name that identifies the forwarder
	  </para>
              </listitem>
            </itemizedlist>
      </para>
        </listitem>
        <listitem>
          <para> Start a daemon forwarder on the network C: </para>
          <para><emphasis role="bold">logForwarder --peer-name logforwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name logforwarder
	  --remote-host localhost
	  --ssh-login login</emphasis>
      </para>
          <para>
	<itemizedlist>
              <listitem>
                <para>
	      --peer-name: The name of the peer forwarder, here forwarder2.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --ssh-host: The DNS name of the distant machine to connect the SSH tunnel.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --remote-port: optionnal, the port to use, here 50005.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --name: The name of the forwarder.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --remote-host: The loopback adresse, here 'localhost'.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --ssh-login: The login on the distant machine.
	  </para>
              </listitem>
            </itemizedlist>
      </para>
        </listitem>
        <listitem>
          <para>
        If the SSH key is accessible and that the key is protected by a
        passphrase, it is asked and the SSH connexion is established.</para>
        </listitem>
        <listitem>
          <para>  Start the log service of DIET on the gateway. The command is <emphasis
                role="bold">LogCentral --config config.cfg</emphasis> with config.cfg a configuration file for the log central. See the paragraph 6.10 to have an example of configuration file.</para>
        </listitem>
        <listitem>
          <para> Start the MA with its configuration file on the gateway: <emphasis
                role="bold">dietAgent config.cfg</emphasis>. See the paragraph 6.3 to have an example of configuration file. This configuration file can contain the 3 following lines:
	<itemizedlist>
              <listitem>
                <para> 'traceLevel = 0': The level of verbosity of the agent, can be between 0 and 100. (100 is fully verbose, with corba details). </para>
              </listitem>
              <listitem>
                <para> 'agentType = DIET_MASTER_AGENT': The type of the agent, the other value possible is DIET_LOCAL_AGENT, but in our case it must be DIET_MASTER_AGENT.</para>
              </listitem>
              <listitem>
                <para> 'name = MA0': The name of the agent, for instance MA0 here.</para>
              </listitem>
            </itemizedlist>
      </para>
        </listitem>
        <listitem>
          <para>Launch the UMS SeD on the network C with the command <emphasis role="bold">umssed ~/ums_sed.cfg</emphasis>. The parameter is a VISHNU configuration file. See the paragraph 6.5 to see an example of configuration file. The parameters are the same as for deploying on a single network.
      </para>
        </listitem>
        <listitem>
          <para>
        The UMS module is ready to be used. To do so, a client must connect et submit requests. If the client is on another network, other forwarders may be needed.
      </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Deployment on various networks <emphasis role="bold">with DIET version 2.7</emphasis></title>
      <para>VISHNU modules can be deployed manually. The example of deployment will be based on figure 4.2 of the [ARCH] document, supposing to simplify that on a network, all the processes run on the same machine and that &quot;network C&quot; and &quot;network D&quot; are the same (no need of forwarder between them).</para>
      <orderedlist>
        <listitem>
          <para>Having a database created and initialized.</para>
        </listitem>
        <listitem>
          <para> Start the CORBA naming service on the gateway. The command is <emphasis
                role="bold">omniNames -start</emphasis> if starting for the first time, <emphasis
                role="bold">omniNames</emphasis> is enought otherwise. Warning, in the omninames configuration file, use the adress of the host and not 'localhost' or '127.0.0.1'. </para>
        </listitem>
        <listitem>
          <para> Start a daemon forwarder on the network B: </para>
          <para><emphasis role="bold">dietForwarder --name forwarder2 --net-config forwarder2.cfg</emphasis>
	<itemizedlist>
              <listitem>
                <para>
	      forwarder2: Name that identifies the forwarder
	  </para>
              </listitem>
              <listitem>
                <para>
              forwarder2.cfg: Configuration file (see the paragraph 6.8) containing the rules applied to the connexions between the networks. There are 2 rules: 'accept:' or 'reject:'. In the example of the paragraph 6.8, 
              rules are:
              <itemizedlist>
                    <listitem>
                      <para> a rule 'accept' corresponding to filters on the source of the accepted connexion. '.*' means all the connexions from all IP.</para>
                    </listitem>
                    <listitem>
                      <para> 2 rules to reject 2 addresses. It contains the local IP of the server.</para>
                    </listitem>
                  </itemizedlist>
            </para>
              </listitem>
            </itemizedlist>
      </para>
        </listitem>
        <listitem>
          <para> Start a daemon forwarder on the network C: </para>
          <para><emphasis role="bold">dietForwarder -C --peer-name forwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name forwarder
	  --remote-host localhost --net-config forwarder1.cfg
	  --ssh-login login</emphasis>
      </para>
          <para>
	<itemizedlist>
              <listitem>
                <para>
              -C: indicate it is the client.
          </para>
              </listitem>
              <listitem>
                <para>
	      --net-config: the configuration file. Contains rules similar to forwarder2.cfg
          </para>
              </listitem>
              <listitem>
                <para>
	      --peer-name: The name of the peer forwarder, here forwarder2.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --ssh-host: The DNS name of the distant machine to connect the SSH tunnel.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --remote-port: optionnal, the port to use.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --name: The name of the forwarder.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --remote-host: The loopback adresse, here 'localhost'.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --ssh-login: The login on the distant machine.
	  </para>
              </listitem>
            </itemizedlist>
      </para>
        </listitem>
        <listitem>
          <para>If the SSH key is accessible and that the key is protected by a
        passphrase, it is asked and the SSH connexion is established.</para>
        </listitem>
        <listitem>
          <para> Start a daemon forwarder on the network B: </para>
          <para><emphasis role="bold">logForwarder --name logforwarder2 --net-config logforwarder2</emphasis>
	<itemizedlist>
              <listitem>
                <para>
	      logforwarder2: Name that identifies the forwarder
	  </para>
              </listitem>
              <listitem>
                <para>
              logforwarder2.cfg: Configuration file (see the paragraph 6.8) containing the rules applied to the connexions between the networks. There are 2 rules: 'accept:' or 'reject:'. In the example of the paragraph 6.8, 
              rules are:
              <itemizedlist>
                    <listitem>
                      <para> a rule 'accept' corresponding to filters on the source of the accepted connexion. '.*' means all the connexions from all IP.</para>
                    </listitem>
                    <listitem>
                      <para>  2 rules to reject 2 addresses. It contains the local IP of the server.</para>
                    </listitem>
                  </itemizedlist>
            </para>
              </listitem>
            </itemizedlist>
      </para>
        </listitem>
        <listitem>
          <para> Start a daemon log forwarder on the network C:  </para>
          <para><emphasis role="bold">logForwarder -C --peer-name logforwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name logforwarder
	  --remote-host localhost --net-config logforwarder1.cfg
	  --ssh-login login</emphasis>
      </para>
          <para>
	<itemizedlist>
              <listitem>
                <para>
              -C: indicate it is the client.
          </para>
              </listitem>
              <listitem>
                <para>
	      --peer-name: The name of the peer forwarder, here forwarder2.
	  </para>
              </listitem>
              <listitem>
                <para>
              --net-config: the configuration file. Contains rules similar to forwarder2.cfg
          </para>
              </listitem>
              <listitem>
                <para>
	      --ssh-host: The DNS name of the distant machine to connect the SSH tunnel.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --remote-port: optionnal, the port to use.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --name: The name of the forwarder.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --remote-host: The loopback adresse, here 'localhost'.
	  </para>
              </listitem>
              <listitem>
                <para>
	      --ssh-login: The login on the distant machine.
	  </para>
              </listitem>
            </itemizedlist>
      </para>
        </listitem>
        <listitem>
          <para>If the SSH key is accessible and that the key is protected by a
        passphrase, it is asked and the SSH connexion is established.</para>
        </listitem>
        <listitem>
          <para> Start the log service of DIET on the gateway. The command is <emphasis
                role="bold">LogCentral --config config.cfg</emphasis> with config.cfg a configuration file for the log central. </para>
        </listitem>
        <listitem>
          <para>  Start the MA with its configuration file on the gateway: <emphasis
                role="bold">dietAgent config.cfg</emphasis>. See the paragraph 6.3 to have an example of configuration file. This configuration file can contain the 3 following lines:
	<itemizedlist>
              <listitem>
                <para> 'traceLevel = 0': The level of verbosity of the agent, can be between 0 and 100. (100 is fully verbose, with corba details). </para>
              </listitem>
              <listitem>
                <para> 'agentType = DIET_MASTER_AGENT': The type of the agent, the other value possible is DIET_LOCAL_AGENT, but in our case it must be DIET_MASTER_AGENT.</para>
              </listitem>
              <listitem>
                <para> 'name = MA0': The name of the agent, for instance MA0 here.</para>
              </listitem>
            </itemizedlist>
      </para>
        </listitem>
        <listitem>
          <para>Launch the UMS SeD on the network C with the command <emphasis role="bold">umssed ~/ums_sed.cfg</emphasis>. The parameter is a VISHNU configuration file. See the paragraph 6.5 to see an example of configuration file. The parameters correspond to:
      </para>
        </listitem>
        <listitem>
          <para>
        The UMS module is ready to be used. To do so, a client must connect et submit requests. If the client is on another network, other forwarders may be needed.
      </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Example of a MA configuration file</title>
      <programlisting>
    traceLevel = 0
    name = MA0
    agentType = DIET_MASTER_AGENT
  </programlisting>
    </section>
    <section>
      <title>Example of a DIET SeD configuration file</title>
      <programlisting>
    traceLevel = 0
    parentName = MA0
    useLogService = 1
  </programlisting>
    </section>
    <section>
      <title>Example of a UMS configuration file</title>
      <programlisting>
    # Configuration of the VISHNU UMS SeD
    configFileFile=/usr/local/etc/SeD.cfg
    vishnuId=1
    databaseType=postgresql
    databaseHost=localhost
    databaseName=vishnu
    databaseUserName=vishnu_user
    databaseUserPassword=vishnu_user
    databaseConnectionsNb=5
    sendmailScriptPath=/usr/local/sbin/sendmail.py
    vishnuMachineId=machine_1
    authenticationType=LDAP
  </programlisting>
    </section>
    <section>
      <title>Example of a TMS SeD configuration file </title>
      <programlisting>
    # Configuration of the VISHNU TMS SeD
    configFileFile=/usr/local/etc/SeD.cfg
    vishnuId=1
    databaseType=postgresql
    databaseHost=localhost
    databaseName=vishnu
    databaseUserName=vishnu_user
    databaseUserPassword=vishnu_user
    databaseConnectionsNb=5
    sendmailScriptPath=/usr/local/sbin/sendmail.py
    vishnuMachineId=machine_1
    # TMS Configuration 
    # batchSchedulerType=SLURM if the batchScheduler is SLURM
    # batchSchedulerType=LSF if the batchScheduler is LSF
    # batchSchedulerType=SGE if the batchScheduler is SGE
    # batchSchedulerType=LOADLEVELER if the batchScheduler is LL
    batchSchedulerType=TORQUE
    intervalMonitor = 1
  </programlisting>
    </section>
    <section>
      <title>Example of a FMS SeD configuration file </title>
      <programlisting>
    # Configuration of the VISHNU FMS SeD
    configFileFile=/usr/local/etc/SeD.cfg
    vishnuId=1
    databaseType=postgresql
    databaseHost=localhost
    databaseName=vishnu
    databaseUserName=vishnu_user
    databaseUserPassword=vishnu_user
    databaseConnectionsNb=5
    vishnuMachineId=machine_1
    # FMS Configuration 
    intervalMonitor = 1
  </programlisting>
    </section>
    <section>
      <title>Example of a forwarder configuration file </title>
      <programlisting>
    # accept everything from everyone
    accept:.*
    
    # reject its own ip
    reject:192\.168\.1\.6
  </programlisting>
    </section>
    <section>
      <title>Example of a LogCentral configuration file </title>
      <programlisting>
    # an empty configuration file for LogService
    [General]
    
    [DynamicTagList]
    [StaticTagList]
    [UniqueTagList]
    [VolatileTagList]
  </programlisting>
    </section>
    <section>
      <title>Configuration to send mails in VISHNU</title>
      <para>The UMS SeD process uses the 'sendmail.py' file (in the sbin/ directory)
    to send mails to the users during some operations. This file can be updated by the administrator to configure it. By default, the configuration connects
    to the SMTP of 'localhost' using the port 25, without authentication.</para>
      <para>The following parameters can be configured sendmail.py:</para>
      <informaltable>
        <tgroup cols="2">
          <colspec colwidth="2cm"/>
          <colspec colwidth="15cm"/>
          <thead>
            <row>
              <entry>Option</entry>
              <entry>Line of the sendmail.py script to modify</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><para>login</para></entry>
              <entry><programlisting>parser.add_option(&quot;--login&quot;, dest=&quot;login&quot;, help=&quot;&quot;, default=&quot;[login_utilisateur]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>password</para></entry>
              <entry><programlisting>parser.add_option(&quot;--password&quot;, dest=&quot;password&quot;, help=&quot;smtp password&quot;, default=&quot;[password_utilisateur]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>hostname</para></entry>
              <entry><programlisting>parser.add_option(&quot;--hostname&quot;, dest=&quot;host&quot;, help=&quot;smtp host&quot;, default=&quot;[nom_serveur_SMTP]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>port</para></entry>
              <entry><programlisting>parser.add_option(&quot;--port&quot;, dest=&quot;port&quot;, help=&quot;smtp port [default: 25]&quot;, type=int, default=&quot;[no_port]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>SSL</para></entry>
              <entry><programlisting>parser.add_option(&quot;--ssl&quot;, action=&quot;store_true&quot;, dest=&quot;use_ssl&quot;, help=&quot;enable ssl support [default: %default - default port: 587
	      ]&quot;, default=True)</programlisting></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section>
      <title>Configuration of the private/public ssh keys for FMS</title>
      <para>
    All the FMS commands are launched throught SSH under the user that 
    has submitted the request name. FMS services are of 2 types: the ones using
    one remote machine and the ones using two machines.
    <itemizedlist>
          <listitem>
            <para>
          In the first case, the SeD connects on the distant machine and
          do the service. Consequently, the SeD's public key must be added to the
          user authorized_keys file ($HOME/.ssh/authorized_keys) of the corresponding
          distant machine.
        </para>
          </listitem>
          <listitem>
            <para> 
          In the second case, 2 SSH connexions are necessary. The SeD connects
          to the source machine and starts the transfer (second connexion) to the distant
          machine. Consequently:
          <itemizedlist>
                <listitem>
                  <para> 
                The SeD's public key must be added to the source machine authorized key file to enable the first connexion.
              </para>
                </listitem>
                <listitem>
                  <para> 
                The source machine must be able to connect to the destination
                machine using ssh, using the private key registered in the VISHNU database added when creating
                the user's local account linking the machine to VISHNU. Besides, if the machine
                forward agent is activated between these machines, it is not necessary to use
                another ssh key couple between the source and destination machine.
              </para>
                </listitem>
              </itemizedlist>
        </para>
          </listitem>
        </itemizedlist>
    To sum up, the SeD's SSH public key must be added on all the users' 
    account of the machines used to fulfill the FMS services. All the
    keys, protected by passphrases must be stocked by an SSH agent to
    allow the automatic authentication.
  </para>
    </section>
    <section>
      <title>Configuration of the private/public keys for TMS
  </title>
      <para>
    The commands to submit, cancel and get the results of the jobs are 
    executed throught SSH under the user name. To execute the commands,
    the TMS SeD public key's account must be added to the
    authorized_keys file ($HOME/.ssh/authorized_keys) of the user.
    All passphrase protected keys must be stocked by an SSH agent
    to allow the automatic authentication.
  </para>
    </section>
    <section>
      <title> Test to execute a client command throught the shell API
  </title>
      <orderedlist>
        <listitem>
          <para>
        Once the platform is installed and deployed, go to a client 
        machine with VISHNU client installed. See the VISHNU user guide
        concerning this installation.
      </para>
        </listitem>
        <listitem>
          <para>
        Export the environment variable VISHNU_CONFIG_FILE to a
        client configuration file (see the VISHNU user guide again for more).
      </para>
        </listitem>
        <listitem>
          <para>Open a VISHNU session</para>
          <para>#<emphasis>vishnu_connect -u user</emphasis> </para>
          <para>Replace 'user' by a real user identifier. By default, VISHNU comes with a user named 'root' having 
		all rights on the system (ID: 'root', Password: 'vishnu_user').</para>
        </listitem>
        <listitem>
          <para>
        On the client, there should be a display of a session identifier, proving
        that the connexion was a success. On the MA and the SeD, depending
        on the verbosity level, there may be some information displayed.
        The client display should be similar to:
	<emphasis role="bold">sessionId: root-2011-Jul-11-14:22:14.403491:86690</emphasis>.
      </para>
        </listitem>
        <listitem>
          <para>Close the session</para>
          <para>#<emphasis>vishnu_close</emphasis></para>
          <para>No error should be raised.</para>
        </listitem>
      </orderedlist>
    </section>
  </chapter>
  <chapter>
    <title>Administration</title>
    <section>
      <title>Presentation</title>
      <para>
      The UMS module corresponds to user and machine handling in VISHNU. It
      allows to save a VISHNU configuration and restore it if needed.
      In this chapter, we will suppose that the user is connected as a VISHNU
      administrator.
      The commands presented are the shell one's, but all is the same
      throught the other API (python, WS, C++).
    </para>
      <para>The whole API is available in the [VISHNU_API] document</para>
    </section>
    <section>
      <title>User handling (UMS)</title>
      <orderedlist>
        <listitem>
          <para>
          Adding a user is made with vishnu_add_user. It takes as a parameter
          the user name, it's familly name, it's accreditation level in VISHNU
          (user or admin) and its mail address. All these are mandatory. An 
          accreditation level of 1 means admin, 0 means simple user. The 
          userid is generated and returned.
	</para>
        </listitem>
        <listitem>
          <para>
          Updating a user must be done by an admin. It is made throught the
          'vishnu_update_user' command and enables to update a user first and
          last name, its status (can be locked), its mail address.
          The generated userid must be used to indicate the user to update.
	</para>
          <para>Note: Setting a user status to 'INACTIVE' corresponds to 
          locking its VISHNU account, he cannot connect anymore.
        </para>
        </listitem>
        <listitem>
          <para>
          Deleting a user delete its data from the database and is made with
          the vishnu_delete_user command.
	</para>
        </listitem>
        <listitem>
          <para>
          Listing the users can be made by an admin only. The command is 
          'vishnu_list_users' and can take options like a specific userid.
	</para>
        </listitem>
        <listitem>
          <para>
          Only an admin can reinitialize a user password in VISHNU. The command
          is 'vishnu_reset_password' with the userid of the user to change
          its password.
          At the following connexion, the user will be asked to change it's password (using the 'vishnu_change_password' command).
	</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Handling machines (UMS+IMS)</title>
      <orderedlist>
        <listitem>
          <para>
          Adding a machine is made with the 'vishnu_add_machine' command. It
          takes as a parameter the machine name, its location, the language of
          the given machine description and the SSH public key.
          These parameters are mandatory. Once the machine is added, its
          identifier is returned.
        </para>
        </listitem>
        <listitem>
          <para>
          A machine is updated with the 'vishnu_update_machine'. The machine 
          identifier is needed to update.
	</para>
          <para>
          Note: Changing a machine status to 'INACTIVE' corresponds to
          blocking it, the machine is unavailable to VISHNU users', but
          the admin can still see it.
        </para>
        </listitem>
        <listitem>
          <para>
          Deleting a machine is made with the 'vishnu_delete_machine', with 
          the machine identifier returned at the machine creation. It
          deletes from the database with all the asociated data.
          Warning it is not reversible.
	</para>
        </listitem>
        <listitem>
          <para>
          Users can list machines, but the admin have another option, a userid,
          to list the machines where the given user as a VISHNU account.
	</para>
        </listitem>
        <listitem>
          <para>
          Updating a machine technical description is made with the 
          'vishnu_set_system_info' command. The machine identifier is
          required.
	</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Handling the plateform (UMS)</title>
      <orderedlist>
        <listitem>
          <para>
          The admin can save at a given time VISHNU state's. It saves the users,
          machines, users' account, authentication systems. The function
          is 'vishnu_save_configuration' and does not need parameters and
          generates a save file.
	</para>
        </listitem>
        <listitem>
          <para>
          An admin can load a saved configuration of VISHNU using the 
          'vishnu_restore_configuration' command that takes the saved file.
          To start this command, all the VISHNU user's must de disconnected.
	</para>
        </listitem>
        <listitem>
          <para>
          An admin can define user's option default values for all the users
          (these options are the default time before the session is 
          automatically closed, how the session closes: timeout or wait for an
          explicit close call, default copy tool: scp or rsync).
          The function is 'vishnu_configure_default_option' with the option
          name and its new default value.
	</para>
        </listitem>
        <listitem>
          <para>
          An admin can add or uptade the authentication systems. For instance,
          it can add various LDAP to authenticate its users. Currently, for
          the same LDAP, if the users are in different branches, we need to 
          add twice the LDAP with different names, but it allows the user 
          to only give its LDAP login and not its branch. It is the admin,
          when he creates the authentication system, that defines the branch
          to use in the DAP tree. When the admin fills the path in the LDAP 
          tree, he must replace the username by the \$USERNAME string, this
          string will be replaced by the actual user name.
          associated functions: vishnu_add_auth_system, vishnu_update_auth_system, vishnu_delete_auth_system
	</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Admin options in user functions(UMS+FMS)</title>
      <orderedlist>
        <listitem>
          <para> In 'vishnu_connect', an admin can give a VISHNU user identifier to connect as this user in VISHNU.</para>
        </listitem>
        <listitem>
          <para>
	  In 'vishnu_list_history_cmd', an admin can list all the commands
          of all the users or the commands of a particular user giving
          its identifier.
	</para>
        </listitem>
        <listitem>
          <para>
	  In 'vishnu_list_local_accounts', an admin can list all the accounts
          of all the users or the accounts of a particular user.
	</para>
        </listitem>
        <listitem>
          <para>
	  In 'vishnu_list_options', an admin can list all the options of all
          the users or the options of a particular user.
	</para>
        </listitem>
        <listitem>
          <para>
	  In 'vishnu_list_sessions', an admin can list all the sessions of
          all the users or the sessions of a user, filtering by a machine.
	</para>
        </listitem>
        <listitem>
          <para>
	  In 'vishnu_list_file_transfers', an admin can list all the file
          transfers of all the users, or the transfers of a particular user,
          or the transfers on a machine (may be source or destination)
	</para>
        </listitem>
        <listitem>
          <para>
	  In 'vishnu_stop_file_transfers', an admin can stop the file transfers
          of all the users, or a particular user, or on a machine
	</para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Handling processes in VISHNU and load shedding(IMS)</title>
      <itemizedlist>
        <listitem>
          <para>An admin can list all the running VISHNU processes, on all the platform or on a particular machine.
          associated function: vishnu_get_processes.</para>
        </listitem>
        <listitem>
          <para>An admin can stop a VISHNU process, it will not be automatically restarted.
          Warning, the admin must have a local account on the machine.
	  associated function: vishnu_stop </para>
        </listitem>
        <listitem>
          <para>An admin can restart a VISHNU process on a machine, this process must have already runned and he must have an account on the machine.
          associated function: vishnu_restart </para>
        </listitem>
        <listitem>
          <para>An admin can load shed a machine using two modes. In the HARD
          one, all the VISHNU processes are stopped on the machine, in the
          SOFT, FMS and TMS have their jobs and file transfers cancelled.
          associated function: vishnu_load_shed </para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Monitoring the machines (IMS)</title>
      <itemizedlist>
        <listitem>
          <para> An admin can fix the frequency the machine state is recorded.
          associated function: vishnu_set_update_frequency</para>
        </listitem>
        <listitem>
          <para> An admin can get the frequenc the machine state is saved.
          associated function: vishnu_get_update_frequency</para>
        </listitem>
        <listitem>
          <para>An admin can fix a threshold on a machine. It can be
          the CPU use, the free remaining ram and the free remaining diskspace.
          When recording a machine state, if a threshold is reached, a mail
          is automatically sent to an admin responsible for the threshold on
          the machine.
          associated function: vishnu_set_threshold</para>
        </listitem>
        <listitem>
          <para>An admin can get the defined thresholds.
          associated function: vishnu_get_threshold</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Defining the format of the identifiers (IMS)</title>
      <itemizedlist>
        <listitem>
          <para>
          An admin can fix the format of the identifiers automatically 
          generated for the users, machines, jobs, file transfers and 
          authentication systems. These identifiers can contain various
          variables:
	  <itemizedlist>
              <listitem>
                <para>
		'$DAY': Variable replaced by the day (1-31)
	      </para>
              </listitem>
              <listitem>
                <para>
		'$MONTH': Variable replaced by the month (1-12)
	      </para>
              </listitem>
              <listitem>
                <para>
		'$YEAR':  Variable replaced by the year (0-99)
	      </para>
              </listitem>
              <listitem>
                <para>
		'$CPT': Variable replaced by a counter value, to guarantee the unicity
	      </para>
              </listitem>
              <listitem>
                <para>
		'$SITE': For users and machines, replaced by the place
	      </para>
              </listitem>
              <listitem>
                <para>
		'$UNAME': For users, replaced by their first name
	      </para>
              </listitem>
              <listitem>
                <para>
		'$MANAME': For machines, replace by their name
	      </para>
              </listitem>
            </itemizedlist>
          Warning, the counter variable is mandatory to avoid generating twice the same identifier.
	  associated function: define_file_format, define_machine_format, define_task_format, define_user_format, define_auth_format.
	</para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>
  <reference>
    <title>UMS Command reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_add_user</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_add_user</refname>
        <refpurpose>adds a new VISHNU user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_add_user</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>firstname</replaceable></arg><arg choice="plain"><replaceable>lastname</replaceable></arg><arg
              choice="plain"><replaceable>privilege</replaceable></arg><arg choice="plain"><replaceable>email</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user in VISHNU. 
Several user information are necessary such as: lastname, firtsname and email address. 
The admin also gives a VISHNU privilege to the new user and a new userId 
and password are sent to the user by email.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId already exists in the database&quot; [22]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine is locked&quot; [34]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To add the user Jean DUPONT as a simple user and with the mail dupont@gmail.com:</para>
        <para>vishnu_add_user Jean DUPONT 0 dupont@gmail.com</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_update_user</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_update_user</refname>
        <refpurpose>updates the user information except the userId and the password</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_update_user</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-f <replaceable>firstname</replaceable></option></arg><arg
              choice="opt"><option>-l <replaceable>lastname</replaceable></option></arg><arg
              choice="opt"><option>-p <replaceable>privilege</replaceable></option></arg><arg
              choice="opt"><option>-m <replaceable>email</replaceable></option></arg><arg
              choice="opt"><option>-s <replaceable>status</replaceable></option></arg><arg
              choice="plain"><replaceable>userId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a VISHNU user information or to lock a user.  When a user is locked, she/he can not uses VISHNU. However, it is not possible to change the privilege of another admin.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-f <replaceable>firstname</replaceable></option></term>
            <listitem>
              <para>represents the updated firstname of the user.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-l <replaceable>lastname</replaceable></option></term>
            <listitem>
              <para>represents the updated lastname of the user.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-p <replaceable>privilege</replaceable></option></term>
            <listitem>
              <para>represents the updated privilege of the user.
The value must be an integer. Predefined values are: 0 (USER), 1 (ADMIN).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>email</replaceable></option></term>
            <listitem>
              <para>represents the updated email address of the user.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>status</replaceable></option></term>
            <listitem>
              <para>represents the status of the user (LOCKED or ACTIVE).
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (INACTIVE), 1 (ACTIVE).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Trying to lock a user account that is already locked&quot; [24]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To update the mail address of a user user_1 to jdupont@gmail.com:</para>
        <para>vishnu_update_user -m jdupont@gmail.com user_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_delete_user</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_delete_user</refname>
        <refpurpose>removes a user from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_delete_user</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>userId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a user from VISHNU. When a user is deleted from VISHNU all of her/his information are deleted from VISHNU. However, it is not possible to delete the VISHNU root user.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>Tu delete the user user_1:</para>
        <para>vishnu_delete_user user_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_reset_password</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_reset_password</refname>
        <refpurpose>resets the password of a user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_reset_password</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>userId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to reset the password of the user. The password generated is temporary and must be changed for using VISHNU.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To reset the password of the user user_1:</para>
        <para>vishnu_reset_password user_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_save_configuration</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_save_configuration</refname>
        <refpurpose>saves the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_save_configuration</command><arg choice="opt"><option>-h</option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This commands allows an admin to save the VISHNU configuration. This configuration contains the list of users, the lists of machines and the list of local user configurations. It is saved on a xml format on a file registered on the directory $HOME/.vishnu/configurationSaved/.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration saving &quot; [39]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To save the current configuration:</para>
        <para>vishnu_save_configuration</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_restore_configuration</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_restore_configuration</refname>
        <refpurpose>restores the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_restore_configuration</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>filePath</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function must be used carefully as it replaces all the content of the VISHNU central database
with the information stored in the provided file. This file contains the list of users, the lists of machines 
and the list of local user configurations. It can be created using the 
vishnu_save_configuration command.
The &quot;root&quot; VISHNU user is the only user authorized to call this function, and this action must be done
without any other user connected to VISHNU.
After restoring, the vishnu database is re-initialized.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration restoring&quot; [40]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To restore the configuration in /tmp/toto.cfg:</para>
        <para>vishnu_restore_configuration /tmp/toto.cfg</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_add_machine</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_add_machine</refname>
        <refpurpose>adds a new machine in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_add_machine</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>name</replaceable></arg><arg choice="plain"><replaceable>site</replaceable></arg><arg
              choice="plain"><replaceable>language</replaceable></arg><arg choice="plain"><replaceable>sshPublicKeyFile</replaceable></arg><arg
              choice="plain"><replaceable>machineDescription</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new machine in VISHNU.
Several machine information are mandatory such as: name, site, language
and the public ssh key of the VISHNU system account on the machine. This
public key will be provided automatically to all new VISHNU users who will
have to add it to the authorized keys of their own account on the machine.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machineId already exists in the database&quot; [33]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To add the machine perceval in paris with the description in french &quot;ceci est une description&quot;  with the public key in /tmp/key.pub:</para>
        <para>vishnu_add_machine perceval paris fr /tmp/key.pub &quot;ceci est une description&quot;</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_update_machine</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_update_machine</refname>
        <refpurpose>updates machine description</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_update_machine</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="opt"><option>-s <replaceable>site</replaceable></option></arg><arg
              choice="opt"><option>-d <replaceable>machineDescription</replaceable></option></arg><arg
              choice="opt"><option>-l <replaceable>language</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>status</replaceable></option></arg><arg
              choice="opt"><option>-k <replaceable>sshPublicKeyFile</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a  VISHNU machine or to locked it. A machine locked is not usable.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>represents the name of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>site</replaceable></option></term>
            <listitem>
              <para>represents the location of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-d <replaceable>machineDescription</replaceable></option></term>
            <listitem>
              <para>represents the description of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-l <replaceable>language</replaceable></option></term>
            <listitem>
              <para>represents the language used for the description of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>status</replaceable></option></term>
            <listitem>
              <para>represents the status of the machine.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (INACTIVE), 1 (ACTIVE).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-k <replaceable>sshPublicKeyFile</replaceable></option></term>
            <listitem>
              <para>contains the path to the SSH public key used by VISHNU to access local user accounts.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To change the name of the machine whose id is machine_1 to provencal:</para>
        <para>vishnu_update_machine machine_1 -n provencal</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_delete_machine</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_delete_machine</refname>
        <refpurpose>removes a machine from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_delete_machine</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a machine from VISHNU. When a machine is deleted all of its information are deleted from VISHNU.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To delete the machine machine_1:</para>
        <para>vishnu_delete_machine machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_list_users</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_list_users</refname>
        <refpurpose>lists VISHNU users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_list_users</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-u <replaceable>userId</replaceable></option></arg><arg
              choice="opt"><option>-i <replaceable>authSystemId</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to display all users information except the passwords.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-u <replaceable>userId</replaceable></option></term>
            <listitem>
              <para>allows an admin to get information about a specific user identified by his/her userId.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-i <replaceable>authSystemId</replaceable></option></term>
            <listitem>
              <para>is an option to list users who have local user-authentication configurations on a specific user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To list all the users:</para>
        <para>vishnu_list_users</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_configure_default_option</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_configure_default_option</refname>
        <refpurpose>configures a default option value</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_configure_default_option</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>optionName</replaceable></arg><arg choice="plain"><replaceable>value</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Options in VISHNU corresponds to parameters of some VISHNU commands 
(e.g. the close policy for vishnu_connect)
that can be preset in the user configuration stored by the VISHNU system.
This command allows an administrator to configure the default value of an option;
this is the value that will be applied when the user has no configuration defined for
that option using the vishnu_configure_option command.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The name of the user option is unknown&quot; [41]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the timeout is incorrect&quot; [43]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the transfer command is incorrect&quot; [44]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To configure the option VISHNU_TIMEOUT with the value 42:</para>
        <para>vishnu_configure_default_option VISHNU_TIMEOUT 42</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_add_auth_system</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_add_auth_system</refname>
        <refpurpose>adds a new user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_add_auth_system</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-b <replaceable>ldapBase</replaceable></option></arg><arg
              choice="plain"><replaceable>name</replaceable></arg><arg choice="plain"><replaceable>URI</replaceable></arg><arg
              choice="plain"><replaceable>authLogin</replaceable></arg><arg choice="plain"><replaceable>authPassword</replaceable></arg><arg
              choice="plain"><replaceable>userPasswordEncryption</replaceable></arg><arg
              choice="plain"><replaceable>type</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user-authentication system in VISHNU.
Several user-authentication system's information are mandatory such as: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-b <replaceable>ldapBase</replaceable></option></term>
            <listitem>
              <para>is an option for user-authentication system based on LDAP which specifies the DN of the root entry .</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The identifier (name or generated identifier) of the user-authentication system already exists&quot; [50]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To add an LDAP's user-authentication system on VISHNU named CLAMART with the parameters which follows: URI ldap://127.0.0.1:389/ , login cn=ldapadmin,dc=sysfera,dc=fr, password secret and DN root entry dc=sysfera,dc=fr: </para>
        <para>vishnu_add_auth_system CLAMART ldap://127.0.0.1:389/ cn=ldapadmin,dc=sysfera,dc=fr secret -b uid=\$USERNAME,ou=users,dc=sysfera,dc=fr </para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_update_auth_system</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_update_auth_system</refname>
        <refpurpose>updates a user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_update_auth_system</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="opt"><option>-i <replaceable>URI</replaceable></option></arg><arg
              choice="opt"><option>-u <replaceable>authLogin</replaceable></option></arg><arg
              choice="opt"><option>-w <replaceable>authPassword</replaceable></option></arg><arg
              choice="opt"><option>-e <replaceable>userPasswordEncryption</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>type</replaceable></option></arg><arg
              choice="opt"><option>-s <replaceable>status</replaceable></option></arg><arg
              choice="opt"><option>-b <replaceable>ldapBase</replaceable></option></arg><arg
              choice="plain"><replaceable>authSystemId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a user-authentication system in VISHNU.
It is possible to change the parameters which follow: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>corresponds to the user-authentication system's name.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-i <replaceable>URI</replaceable></option></term>
            <listitem>
              <para>is the URI of the user-authentication systems (by the form host:port for LDAP).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-u <replaceable>authLogin</replaceable></option></term>
            <listitem>
              <para>is the login used to connect to the user-authentication system.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-w <replaceable>authPassword</replaceable></option></term>
            <listitem>
              <para>is the password used to connect to the user-authentication system.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-e <replaceable>userPasswordEncryption</replaceable></option></term>
            <listitem>
              <para>represents the encryption method used to encrypt user's password.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (SSHA).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>type</replaceable></option></term>
            <listitem>
              <para>represents the type of the user-authentication system.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (LDAP).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>status</replaceable></option></term>
            <listitem>
              <para>represents the status of the user-authentication system.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (INACTIVE), 1 (ACTIVE).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-b <replaceable>ldapBase</replaceable></option></term>
            <listitem>
              <para>is an option for user-authentication system based on LDAP which specifies the DN of the root entry .</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is already locked&quot; [49]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To change the address of a user-authentication system whose identifier is AUTHENLDAP_1:</para>
        <para>vishnu_update_auth_system -i ldap://192.128.1.1:389/ AUTHENLDAP_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_delete_auth_system</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_delete_auth_system</refname>
        <refpurpose>removes a user-authentication system from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_delete_auth_system</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>authSystemId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to remove a user-authentication system from VISHNU.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To remove a user-authentication system whose identifier is AUTHENLDAP_1:</para>
        <para>vishnu_delete_auth_system AUTHENLDAP_1</para>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>UMS C++ API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>addUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>addUser</refname>
        <refpurpose>adds a new VISHNU user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::addUser</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>User&amp; <parameter>newUser</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user in VISHNU. 
Several user information are necessary such as: lastname, firtsname and email address. 
The admin also gives a VISHNU privilege to the new user and a new userId 
and password are sent to the user by email.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newUser</emphasis></term>
            <listitem>
              <para>Input/Output argument. Object containing the new user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId already exists in the database&quot; [22]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine is locked&quot; [34]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>updateUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>updateUser</refname>
        <refpurpose>updates the user information except the userId and the password</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::updateUser</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const User&amp; <parameter>user</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a VISHNU user information or to lock a user.  When a user is locked, she/he can not uses VISHNU. However, it is not possible to change the privilege of another admin.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>user</emphasis></term>
            <listitem>
              <para>Input argument. Object containing user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Trying to lock a user account that is already locked&quot; [24]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>deleteUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>deleteUser</refname>
        <refpurpose>removes a user from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::deleteUser</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>userId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a user from VISHNU. When a user is deleted from VISHNU all of her/his information are deleted from VISHNU. However, it is not possible to delete the VISHNU root user.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user who will be deleted from VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>resetPassword</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>resetPassword</refname>
        <refpurpose>resets the password of a user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::resetPassword</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>userId</parameter></paramdef><paramdef>string&amp; <parameter>tmpPassword</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to reset the password of the user. The password generated is temporary and must be changed for using VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user whose password will be reset.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>tmpPassword</emphasis></term>
            <listitem>
              <para>Output argument. The temporary password generated by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>saveConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>saveConfiguration</refname>
        <refpurpose>saves the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::saveConfiguration</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>Configuration&amp; <parameter>configuration</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This commands allows an admin to save the VISHNU configuration. This configuration contains the list of users, the lists of machines and the list of local user configurations. It is saved on a xml format on a file registered on the directory $HOME/.vishnu/configurationSaved/.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>configuration</emphasis></term>
            <listitem>
              <para>Output argument. The configuration is an object which encapsulates the configuration description.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration saving &quot; [39]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>restoreConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>restoreConfiguration</refname>
        <refpurpose>restores the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::restoreConfiguration</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>filePath</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function must be used carefully as it replaces all the content of the VISHNU central database
with the information stored in the provided file. This file contains the list of users, the lists of machines 
and the list of local user configurations. It can be created using the 
vishnu_save_configuration command.
The &quot;root&quot; VISHNU user is the only user authorized to call this function, and this action must be done
without any other user connected to VISHNU.
After restoring, the vishnu database is re-initialized.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>filePath</emphasis></term>
            <listitem>
              <para>Input argument. The filePath is the path of the file used to restore VISHNU configuration.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration restoring&quot; [40]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>addMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>addMachine</refname>
        <refpurpose>adds a new machine in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::addMachine</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>Machine&amp; <parameter>newMachine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new machine in VISHNU.
Several machine information are mandatory such as: name, site, language
and the public ssh key of the VISHNU system account on the machine. This
public key will be provided automatically to all new VISHNU users who will
have to add it to the authorized keys of their own account on the machine.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newMachine</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the machine which will be added in VISHNU except the machine id which will be created automatically by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machineId already exists in the database&quot; [33]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>updateMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>updateMachine</refname>
        <refpurpose>updates machine description</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::updateMachine</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const Machine&amp; <parameter>machine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a  VISHNU machine or to locked it. A machine locked is not usable.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machine</emphasis></term>
            <listitem>
              <para>Input argument. Existing machine information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>deleteMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>deleteMachine</refname>
        <refpurpose>removes a machine from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::deleteMachine</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a machine from VISHNU. When a machine is deleted all of its information are deleted from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. MachineId represents the identifier of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>listUsers</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>listUsers</refname>
        <refpurpose>lists VISHNU users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::listUsers</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListUsers&amp; <parameter>listuser</parameter></paramdef><paramdef>const ListUsersOptions&amp; <parameter>options = ListUsersOptions()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to display all users information except the passwords.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>listuser</emphasis></term>
            <listitem>
              <para>Output argument. Listuser is the list of users .</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Allows an admin to get information about a specific user identified by his/her userId or to get information about users authenticated by a specific user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>configureDefaultOption</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>configureDefaultOption</refname>
        <refpurpose>configures a default option value</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::configureDefaultOption</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const OptionValue&amp; <parameter>optionValue</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Options in VISHNU corresponds to parameters of some VISHNU commands 
(e.g. the close policy for vishnu_connect)
that can be preset in the user configuration stored by the VISHNU system.
This command allows an administrator to configure the default value of an option;
this is the value that will be applied when the user has no configuration defined for
that option using the vishnu_configure_option command.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>optionValue</emphasis></term>
            <listitem>
              <para>Input argument. The optionValue is an object which encapsulates the option information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The name of the user option is unknown&quot; [41]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the timeout is incorrect&quot; [43]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the transfer command is incorrect&quot; [44]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>addAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>addAuthSystem</refname>
        <refpurpose>adds a new user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::addAuthSystem</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>AuthSystem&amp; <parameter>newAuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user-authentication system in VISHNU.
Several user-authentication system's information are mandatory such as: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newAuthSys</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The identifier (name or generated identifier) of the user-authentication system already exists&quot; [50]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>updateAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>updateAuthSystem</refname>
        <refpurpose>updates a user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::updateAuthSystem</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const AuthSystem&amp; <parameter>AuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a user-authentication system in VISHNU.
It is possible to change the parameters which follow: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>AuthSys</emphasis></term>
            <listitem>
              <para>Input argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is already locked&quot; [49]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>deleteAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>deleteAuthSystem</refname>
        <refpurpose>removes a user-authentication system from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::deleteAuthSystem</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>authSystemId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to remove a user-authentication system from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>authSystemId</emphasis></term>
            <listitem>
              <para>Input argument. AuthSystemId is the identifier of the user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>UMS Python API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.addUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.addUser</refname>
        <refpurpose>adds a new VISHNU user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.addUser</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>User <parameter>newUser</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user in VISHNU. 
Several user information are necessary such as: lastname, firtsname and email address. 
The admin also gives a VISHNU privilege to the new user and a new userId 
and password are sent to the user by email.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newUser</emphasis></term>
            <listitem>
              <para>Input/Output argument. Object containing the new user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId already exists in the database&quot; [22])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The mail adress is invalid&quot; [27])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machine is locked&quot; [34])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.updateUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.updateUser</refname>
        <refpurpose>updates the user information except the userId and the password</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.updateUser</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>User <parameter>user</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a VISHNU user information or to lock a user.  When a user is locked, she/he can not uses VISHNU. However, it is not possible to change the privilege of another admin.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>user</emphasis></term>
            <listitem>
              <para>Input argument. Object containing user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;Trying to lock a user account that is already locked&quot; [24])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The mail adress is invalid&quot; [27])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.deleteUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.deleteUser</refname>
        <refpurpose>removes a user from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.deleteUser</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>userId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a user from VISHNU. When a user is deleted from VISHNU all of her/his information are deleted from VISHNU. However, it is not possible to delete the VISHNU root user.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user who will be deleted from VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.resetPassword</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.resetPassword</refname>
        <refpurpose>resets the password of a user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, tmpPassword=VISHNU.resetPassword</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>userId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to reset the password of the user. The password generated is temporary and must be changed for using VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user whose password will be reset.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>tmpPassword</emphasis></term>
            <listitem>
              <para>Output argument. The temporary password generated by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>tmpPassword(string)</emphasis></term>
            <listitem>
              <para>The temporary password generated by VISHNU</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.saveConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.saveConfiguration</refname>
        <refpurpose>saves the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.saveConfiguration</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Configuration <parameter>configuration</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This commands allows an admin to save the VISHNU configuration. This configuration contains the list of users, the lists of machines and the list of local user configurations. It is saved on a xml format on a file registered on the directory $HOME/.vishnu/configurationSaved/.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>configuration</emphasis></term>
            <listitem>
              <para>Output argument. The configuration is an object which encapsulates the configuration description.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;A problem occurs during the configuration saving &quot; [39])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.restoreConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.restoreConfiguration</refname>
        <refpurpose>restores the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.restoreConfiguration</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>filePath</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function must be used carefully as it replaces all the content of the VISHNU central database
with the information stored in the provided file. This file contains the list of users, the lists of machines 
and the list of local user configurations. It can be created using the 
vishnu_save_configuration command.
The &quot;root&quot; VISHNU user is the only user authorized to call this function, and this action must be done
without any other user connected to VISHNU.
After restoring, the vishnu database is re-initialized.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>filePath</emphasis></term>
            <listitem>
              <para>Input argument. The filePath is the path of the file used to restore VISHNU configuration.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;A problem occurs during the configuration restoring&quot; [40])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.addMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.addMachine</refname>
        <refpurpose>adds a new machine in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.addMachine</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Machine <parameter>newMachine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new machine in VISHNU.
Several machine information are mandatory such as: name, site, language
and the public ssh key of the VISHNU system account on the machine. This
public key will be provided automatically to all new VISHNU users who will
have to add it to the authorized keys of their own account on the machine.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newMachine</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the machine which will be added in VISHNU except the machine id which will be created automatically by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machineId already exists in the database&quot; [33])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The closure policy is unknown&quot; [42])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.updateMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.updateMachine</refname>
        <refpurpose>updates machine description</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.updateMachine</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Machine <parameter>machine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a  VISHNU machine or to locked it. A machine locked is not usable.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machine</emphasis></term>
            <listitem>
              <para>Input argument. Existing machine information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machine id is unknown&quot; [32])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The closure policy is unknown&quot; [42])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.deleteMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.deleteMachine</refname>
        <refpurpose>removes a machine from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.deleteMachine</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a machine from VISHNU. When a machine is deleted all of its information are deleted from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. MachineId represents the identifier of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machine id is unknown&quot; [32])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.listUsers</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.listUsers</refname>
        <refpurpose>lists VISHNU users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, listuser=VISHNU.listUsers</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ListUsersOptions <parameter>options = ListUsersOptions()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to display all users information except the passwords.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>listuser</emphasis></term>
            <listitem>
              <para>Output argument. Listuser is the list of users .</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Allows an admin to get information about a specific user identified by his/her userId or to get information about users authenticated by a specific user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.configureDefaultOption</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.configureDefaultOption</refname>
        <refpurpose>configures a default option value</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.configureDefaultOption</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>OptionValue <parameter>optionValue</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Options in VISHNU corresponds to parameters of some VISHNU commands 
(e.g. the close policy for vishnu_connect)
that can be preset in the user configuration stored by the VISHNU system.
This command allows an administrator to configure the default value of an option;
this is the value that will be applied when the user has no configuration defined for
that option using the vishnu_configure_option command.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>optionValue</emphasis></term>
            <listitem>
              <para>Input argument. The optionValue is an object which encapsulates the option information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The name of the user option is unknown&quot; [41])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The value of the timeout is incorrect&quot; [43])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The value of the transfer command is incorrect&quot; [44])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.addAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.addAuthSystem</refname>
        <refpurpose>adds a new user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.addAuthSystem</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>AuthSystem <parameter>newAuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user-authentication system in VISHNU.
Several user-authentication system's information are mandatory such as: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newAuthSys</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The identifier (name or generated identifier) of the user-authentication system already exists&quot; [50])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The encryption method is unknown&quot; [53])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.updateAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.updateAuthSystem</refname>
        <refpurpose>updates a user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.updateAuthSystem</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>AuthSystem <parameter>AuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a user-authentication system in VISHNU.
It is possible to change the parameters which follow: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>AuthSys</emphasis></term>
            <listitem>
              <para>Input argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user-authentication system is unknown or locked&quot; [48])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user-authentication system is already locked&quot; [49])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The encryption method is unknown&quot; [53])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.deleteAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.deleteAuthSystem</refname>
        <refpurpose>removes a user-authentication system from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.deleteAuthSystem</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>authSystemId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to remove a user-authentication system from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>authSystemId</emphasis></term>
            <listitem>
              <para>Input argument. AuthSystemId is the identifier of the user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user-authentication system is unknown or locked&quot; [48])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS Command reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_processes</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_processes</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_processes</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-p <replaceable>machineId</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-p <replaceable>machineId</replaceable></option></term>
            <listitem>
              <para>The id of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get the list of the vishnu processes that are running and monitored on machine_1:</para>
        <para>vishnu_get_processes -p machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_system_info</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_system_info</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_system_info</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-m <replaceable>memory</replaceable></option></arg><arg
              choice="opt"><option>-d <replaceable>diskSpace</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>memory</replaceable></option></term>
            <listitem>
              <para>Amount of RAM memory available on the machine (in Bytes).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-d <replaceable>diskSpace</replaceable></option></term>
            <listitem>
              <para>Amount of disk space available on the machine (in Bytes).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set the diskspace size to 300 on machine_1:</para>
        <para>vishnu_set_system_info -d 300 machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_system_threshold</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_system_threshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_system_threshold</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>value</replaceable></arg><arg choice="plain"><replaceable>machineId</replaceable></arg><arg
              choice="plain"><replaceable>type</replaceable></arg><arg choice="plain"><replaceable>handler</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set a threshold of type use of the CPU(value=1) of value 99% on machine_1 and handled by the user admin_1:</para>
        <para>vishnu_set_system_threshold 99 machine_1 1 admin_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_system_threshold</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_system_threshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_system_threshold</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-m <replaceable>machineId</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>metricType</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>machineId</replaceable></option></term>
            <listitem>
              <para>The id of the machine where the metric is defined.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>metricType</replaceable></option></term>
            <listitem>
              <para>The type of the metric.
The value must be an integer. Predefined values are: 0 (UNDEFINED), 1 (CPUUSE), 2 (FREEDISKSPACE), 3 (FREEMEMORY).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get all the thresholds:</para>
        <para>vishnu_get_system_threshold</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_user_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_user_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_user_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to user_$CPT:</para>
        <para>vishnu_define_user_identifier user_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_machine_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_machine_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_machine_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to machine_$CPT:</para>
        <para>vishnu_define_machine_identifier machine_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_job_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_job_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_job_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to job_$CPT:</para>
        <para>vishnu_define_job_identifier job_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_transfer_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_transfer_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_transfer_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to transfer_$CPT:</para>
        <para>vishnu_define_transfer_identifier transfer_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_auth_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_auth_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_auth_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to transfer_$CPT:</para>
        <para>vishnu_define_auth_identifier LDAP_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_load_shed</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_load_shed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_load_shed</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg><arg choice="plain"><replaceable>loadShedType</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a component is unavailable&quot; [301]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To make a hard load shedding on machine_1:</para>
        <para>vishnu_load_shed machine_1 1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_update_frequency</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_update_frequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_update_frequency</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>freq</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set the frequency to 100:</para>
        <para>vishnu_set_update_frequency 100</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_stop</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_stop</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>processName</replaceable></arg><arg choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To stop the UMS process on machine_1:</para>
        <para>vishnu_stop UMS machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_restart</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_restart</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-v <replaceable>vishnuConf</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>sedType</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-v <replaceable>vishnuConf</replaceable></option></term>
            <listitem>
              <para>The path to the vishnu configuration file.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>sedType</replaceable></option></term>
            <listitem>
              <para>The type of the vishnu sed.
The value must be an integer. Predefined values are: 0 (UNDEFINED), 1 (UMS), 2 (TMS), 3 (FMS), 4 (IMS).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To restart using the configuration file ums.cfg an UMS sed on machine_1:</para>
        <para>vishnu_restart -v /tmp/ums.cfg -t 1 machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_work_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_work_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_work_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to W_$CPT:</para>
        <para>vishnu_define_work_identifier W_\$CPT</para>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS C++ API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>getProcesses</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getProcesses</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getProcesses</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListProcesses&amp; <parameter>process</parameter></paramdef><paramdef>const ProcessOp&amp; <parameter>options = ProcessOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Output argument. The list of the Vishnu processes on the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options to search for the processes.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setSystemInfo</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setSystemInfo</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const SystemInfo&amp; <parameter>systemInfo</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>systemInfo</emphasis></term>
            <listitem>
              <para>Input argument. Contains system information to store in Vishnu database.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setSystemThreshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setSystemThreshold</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const Threshold&amp; <parameter>threshold</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>threshold</emphasis></term>
            <listitem>
              <para>Input argument. The threshold to set.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>getSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getSystemThreshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getSystemThreshold</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListThreshold&amp; <parameter>value</parameter></paramdef><paramdef>const ThresholdOp&amp; <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>value</emphasis></term>
            <listitem>
              <para>Output argument. The thresholds value.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the threshold.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineUserIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineUserIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineUserIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineMachineIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineMachineIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineMachineIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineJobIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineJobIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineJobIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineTransferIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineTransferIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineTransferIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineAuthIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineAuthIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineAuthIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>loadShed</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>loadShed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::loadShed</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const LoadShedType&amp; <parameter>loadShedType</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine to stop.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>loadShedType</emphasis></term>
            <listitem>
              <para>Input argument. Selects a load shedding mode (SOFT: stops all services and they can be restarted, HARD: stops all services, they cannot be restarted).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a component is unavailable&quot; [301]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setUpdateFrequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setUpdateFrequency</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const int&amp; <parameter>freq</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Input argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>stop</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::stop</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const Process&amp; <parameter>process</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Input argument. The process to stop and do not try to restart anymore.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>restart</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::restart</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const RestartOp&amp; <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The option for the restart.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineWorkIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineWorkIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineWorkIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS Python API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getProcesses</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getProcesses</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, process=VISHNU.getProcesses</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ProcessOp <parameter>options = ProcessOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Output argument. The list of the Vishnu processes on the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options to search for the processes.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setSystemInfo</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setSystemInfo</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>SystemInfo <parameter>systemInfo</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>systemInfo</emphasis></term>
            <listitem>
              <para>Input argument. Contains system information to store in Vishnu database.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setSystemThreshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setSystemThreshold</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Threshold <parameter>threshold</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>threshold</emphasis></term>
            <listitem>
              <para>Input argument. The threshold to set.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getSystemThreshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, value=VISHNU.getSystemThreshold</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ThresholdOp <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>value</emphasis></term>
            <listitem>
              <para>Output argument. The thresholds value.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the threshold.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineUserIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineUserIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineUserIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineMachineIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineMachineIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineMachineIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineJobIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineJobIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineJobIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineTransferIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineTransferIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineTransferIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineAuthIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineAuthIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineAuthIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.loadShed</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.loadShed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.loadShed</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>LoadShedType <parameter>loadShedType</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine to stop.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>loadShedType</emphasis></term>
            <listitem>
              <para>Input argument. Selects a load shedding mode (SOFT: stops all services and they can be restarted, HARD: stops all services, they cannot be restarted).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>IMSVishnuException(&quot;If a component is unavailable&quot; [301])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setUpdateFrequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setUpdateFrequency</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>int <parameter>freq</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Input argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.stop</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.stop</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Process <parameter>process</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Input argument. The process to stop and do not try to restart anymore.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.restart</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.restart</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>RestartOp <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The option for the restart.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineWorkIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineWorkIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineWorkIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
</book>
