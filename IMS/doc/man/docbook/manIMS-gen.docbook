<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl"
        href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
<book
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" label="IMS.apim#MAN(all)+CPP(all)+PYTHON(all)">
  <info>
    <author>
      <personname>
        <firstname/>
        <surname>SysFera SA</surname>
      </personname>
      <contrib>Developed the first version of these man pages as part of the VISHNU project.</contrib>
      <address>
        <email>info@sysfera.com</email>
      </address>
    </author>
    <title>User Manual</title>
    <date>December 2012</date>
    <copyright>
      <year>2012</year>
      <holder>SysFera SA</holder>
    </copyright>
    <legalnotice>
      <para>These manual pages are provided under the following conditions:</para>
      <para>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</para>
      <orderedlist>
        <listitem>
          <para>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</para>
        </listitem>
        <listitem>
          <para>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</para>
        </listitem>
      </orderedlist>
      <para>This software is governed by the CECILL licence under French law and
abiding by the rules of distribution of free software.  You can  use, 
modify and/ or redistribute the software under the terms of the CeCILL
license as circulated by CEA, CNRS and INRIA at the following URL
&quot;http://www.cecill.info&quot;.</para>
      <para>As a counterpart to the access to the source code and  rights to copy,
modify and redistribute granted by the license, users are provided only
with a limited warranty  and the software's author,  the holder of the
economic rights,  and the successive licensors  have only  limited
liability.</para>
      <para>In this respect, the user's attention is drawn to the risks associated
with loading,  using,  modifying and/or developing or reproducing the
software by the user in light of its specific status of free software,
that may mean  that it is complicated to manipulate,  and  that  also
therefore means  that it is reserved for developers  and  experienced
professionals having in-depth computer knowledge. Users are therefore
encouraged to load and test the software's suitability as regards their
requirements in conditions enabling the security of their systems and/or 
data to be ensured and,  more generally, to use and operate it in the 
same conditions as regards security.</para>
    </legalnotice>
    <productname>VISHNU</productname>
    <releaseinfo>ZMQ_beta</releaseinfo>
  </info>
  <reference>
    <title>IMS Command reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_export_commands</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_export_commands</refname>
        <refpurpose>exports all the commands made by a user during a session</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_export_commands</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-t <replaceable>exportType</replaceable></option></arg><arg
              choice="plain"><replaceable>oldSessionId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Exports all the VISHNU commands submitted during a completed session. This session must be in closed state.
The output of this command is a file containing a shell script. For safety reasons, the commands having a password for parameter are not exported
(for example the vishnu_connect and vishnu_change_password commands). This means the shell script must be run after opening
a session manually or by adding the vishnu_connect command to the script.
The access to other user's sessions is only permitted to administrators.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>exportType</replaceable></option></term>
            <listitem>
              <para>The type to export.
The value must be an integer. Predefined values are: 0 (UNDEFINED), 1 (SHELL).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To export the commands made during the session with id S01 in the file toto:</para>
        <para>vishnu_export_commands S01 /tmp/toto</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_metric_current_value</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_metric_current_value</refname>
        <refpurpose>displays the current values of system metrics</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_metric_current_value</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-t <replaceable>metricType</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Displays the current values of the monitored metrics on the system identified by the machineId argument : cpuload, free diskspace and free memory. 
The units of displayed values are percentages for cpuload and Megabytes (Mb) for diskspace and memory. The provided values are always standard integers (no float values).
Please note that retrieving these values uses some valuable system ressources and should not occur too frequently to avoid an impact on system performance.
</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>metricType</replaceable></option></term>
            <listitem>
              <para>The type of the metric.
The value must be an integer. Predefined values are: 0 (UNDEFINED), 1 (CPUUSE), 2 (FREEDISKSPACE), 3 (FREEMEMORY).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get the current values of the metrics on machine_1:</para>
        <para>vishnu_get_metric_current_value machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_metric_history</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_metric_history</refname>
        <refpurpose>displays the history of values of a system metric</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_metric_history</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-s <replaceable>startTime</replaceable></option></arg><arg
              choice="opt"><option>-e <replaceable>endTime</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>type</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Displays the chronological list of values of the metrics on the system identified by the machineId argument. Using the options it is possible to specify a type of metric and the starting and ending dates of the desired monitoring period. Note that some data will be available only if the required VISHNU agent (IMS server) has been running locally on the machine during the specified period.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>startTime</replaceable></option></term>
            <listitem>
              <para>The start time to get the history.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-e <replaceable>endTime</replaceable></option></term>
            <listitem>
              <para>The end time to get the history.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>type</replaceable></option></term>
            <listitem>
              <para>The type of metric searched.
The value must be an integer. Predefined values are: 0 (UNDEFINED), 1 (CPUUSE), 2 (FREEDISKSPACE), 3 (FREEMEMORY).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get the history of the metrics on machine_1:</para>
        <para>vishnu_get_metric_history machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_processes</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_processes</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_processes</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-p <replaceable>machineId</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-p <replaceable>machineId</replaceable></option></term>
            <listitem>
              <para>The id of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get the list of the vishnu processes that are running and monitored on machine_1:</para>
        <para>vishnu_get_processes -p machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_system_info</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_system_info</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_system_info</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-m <replaceable>memory</replaceable></option></arg><arg
              choice="opt"><option>-d <replaceable>diskSpace</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>memory</replaceable></option></term>
            <listitem>
              <para>Amount of RAM memory available on the machine (in Bytes).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-d <replaceable>diskSpace</replaceable></option></term>
            <listitem>
              <para>Amount of disk space available on the machine (in Bytes).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set the diskspace size to 300 on machine_1:</para>
        <para>vishnu_set_system_info -d 300 machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_system_threshold</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_system_threshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_system_threshold</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>value</replaceable></arg><arg choice="plain"><replaceable>machineId</replaceable></arg><arg
              choice="plain"><replaceable>type</replaceable></arg><arg choice="plain"><replaceable>handler</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set a threshold of type use of the CPU(value=1) of value 99% on machine_1 and handled by the user admin_1:</para>
        <para>vishnu_set_system_threshold 99 machine_1 1 admin_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_system_threshold</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_system_threshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_system_threshold</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-m <replaceable>machineId</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>metricType</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>machineId</replaceable></option></term>
            <listitem>
              <para>The id of the machine where the metric is defined.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>metricType</replaceable></option></term>
            <listitem>
              <para>The type of the metric.
The value must be an integer. Predefined values are: 0 (UNDEFINED), 1 (CPUUSE), 2 (FREEDISKSPACE), 3 (FREEMEMORY).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get all the thresholds:</para>
        <para>vishnu_get_system_threshold</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_user_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_user_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_user_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to user_$CPT:</para>
        <para>vishnu_define_user_identifier user_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_machine_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_machine_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_machine_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to machine_$CPT:</para>
        <para>vishnu_define_machine_identifier machine_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_job_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_job_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_job_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to job_$CPT:</para>
        <para>vishnu_define_job_identifier job_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_transfer_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_transfer_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_transfer_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to transfer_$CPT:</para>
        <para>vishnu_define_transfer_identifier transfer_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_auth_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_auth_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_auth_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to transfer_$CPT:</para>
        <para>vishnu_define_auth_identifier LDAP_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_load_shed</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_load_shed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_load_shed</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-s <replaceable>URI</replaceable></option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg><arg choice="plain"><replaceable>loadShedType</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>URI</replaceable></option></term>
            <listitem>
              <para>The URI of the supervisor to control the processes.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>The path to the supervisord script file on the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a component is unavailable&quot; [301]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To make a hard load shedding on machine_1:</para>
        <para>vishnu_load_shed machine_1 1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_update_frequency</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_update_frequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_update_frequency</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>freq</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set the frequency to 100:</para>
        <para>vishnu_set_update_frequency 100</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_update_frequency</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_update_frequency</refname>
        <refpurpose>gets the update frequency of the IMS database</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_update_frequency</command><arg choice="opt"><option>-h</option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows a user to get the update frequency, to know  how often the state of the machines is automatically polled to get historical data.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get the update frequency:</para>
        <para>vishnu_get_update_frequency</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_stop</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_stop</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-s <replaceable>URI</replaceable></option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>URI</replaceable></option></term>
            <listitem>
              <para>The URI of the supervisor to control the processes.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>The path to the supervisord script file on the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To stop the UMS process on machine_1:</para>
        <para>vishnu_stop UMS machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_system_info</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_system_info</refname>
        <refpurpose>To get the system info on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_system_info</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-m <replaceable>machineId</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows a user to get system information about a machine. A system information describes a machine. The option is  the machine id (if no machine id, the information for all the machines are given)</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>machineId</replaceable></option></term>
            <listitem>
              <para>The machine id.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get all the system info for all the machine:</para>
        <para>vishnu_get_system_info</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_restart</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_restart</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-s <replaceable>URI</replaceable></option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>URI</replaceable></option></term>
            <listitem>
              <para>The URI of the supervisor to control the processes.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>The path to the supervisord script file on the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To restart using the configuration file ums.cfg an UMS sed on machine_1:</para>
        <para>vishnu_restart -v /tmp/ums.cfg -t 1 machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_work_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_work_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_work_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to W_$CPT:</para>
        <para>vishnu_define_work_identifier W_\$CPT</para>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS C++ API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>exportCommands</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>exportCommands</refname>
        <refpurpose>exports all the commands made by a user during a session</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::exportCommands</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>oldSessionId</parameter></paramdef><paramdef>string&amp; <parameter>filename</parameter></paramdef><paramdef>const ExportOp&amp; <parameter>options = ExportOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Exports all the VISHNU commands submitted during a completed session. This session must be in closed state.
The output of this command is a file containing a shell script. For safety reasons, the commands having a password for parameter are not exported
(for example the vishnu_connect and vishnu_change_password commands). This means the shell script must be run after opening
a session manually or by adding the vishnu_connect command to the script.
The access to other user's sessions is only permitted to administrators.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>oldSessionId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the session to export (session has ended).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>filename</emphasis></term>
            <listitem>
              <para>Input/Output argument. The path of the output file containing the Vishnu shell commands.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Options which encapsulate the option for the export.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>getMetricCurrentValue</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getMetricCurrentValue</refname>
        <refpurpose>displays the current values of system metrics</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getMetricCurrentValue</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>ListMetric&amp; <parameter>metricValue</parameter></paramdef><paramdef>const CurMetricOp&amp; <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Displays the current values of the monitored metrics on the system identified by the machineId argument : cpuload, free diskspace and free memory. 
The units of displayed values are percentages for cpuload and Megabytes (Mb) for diskspace and memory. The provided values are always standard integers (no float values).
Please note that retrieving these values uses some valuable system ressources and should not occur too frequently to avoid an impact on system performance.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>metricValue</emphasis></term>
            <listitem>
              <para>Output argument. Value of the metric.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the current metric value.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>getMetricHistory</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getMetricHistory</refname>
        <refpurpose>displays the history of values of a system metric</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getMetricHistory</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>ListMetric&amp; <parameter>metricValues</parameter></paramdef><paramdef>const MetricHistOp&amp; <parameter>options = MetricHistOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Displays the chronological list of values of the metrics on the system identified by the machineId argument. Using the options it is possible to specify a type of metric and the starting and ending dates of the desired monitoring period. Note that some data will be available only if the required VISHNU agent (IMS server) has been running locally on the machine during the specified period.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>metricValues</emphasis></term>
            <listitem>
              <para>Output argument. List of metric values.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The optional fields for the metric history.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>getProcesses</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getProcesses</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getProcesses</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListProcesses&amp; <parameter>process</parameter></paramdef><paramdef>const ProcessOp&amp; <parameter>options = ProcessOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Output argument. The list of the Vishnu processes on the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options to search for the processes.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setSystemInfo</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setSystemInfo</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const SystemInfo&amp; <parameter>systemInfo</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>systemInfo</emphasis></term>
            <listitem>
              <para>Input argument. Contains system information to store in Vishnu database.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setSystemThreshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setSystemThreshold</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const Threshold&amp; <parameter>threshold</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>threshold</emphasis></term>
            <listitem>
              <para>Input argument. The threshold to set.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>getSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getSystemThreshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getSystemThreshold</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListThreshold&amp; <parameter>value</parameter></paramdef><paramdef>const ThresholdOp&amp; <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>value</emphasis></term>
            <listitem>
              <para>Output argument. The thresholds value.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the threshold.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineUserIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineUserIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineUserIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineMachineIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineMachineIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineMachineIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineJobIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineJobIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineJobIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineTransferIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineTransferIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineTransferIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineAuthIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineAuthIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineAuthIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>loadShed</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>loadShed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::loadShed</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const LoadShedType&amp; <parameter>loadShedType</parameter></paramdef><paramdef>const SupervisorOp&amp; <parameter>op = SupervisorOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine to stop.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>loadShedType</emphasis></term>
            <listitem>
              <para>Input argument. Selects a load shedding mode (SOFT: stops all services and they can be restarted, HARD: stops all services, they cannot be restarted).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the supervision.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a component is unavailable&quot; [301]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setUpdateFrequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setUpdateFrequency</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const int&amp; <parameter>freq</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Input argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>getUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getUpdateFrequency</refname>
        <refpurpose>gets the update frequency of the IMS database</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getUpdateFrequency</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>int&amp; <parameter>freq</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows a user to get the update frequency, to know  how often the state of the machines is automatically polled to get historical data.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Output argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>stop</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::stop</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const SupervisorOp&amp; <parameter>op = SupervisorOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the supervision.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>getSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getSystemInfo</refname>
        <refpurpose>To get the system info on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getSystemInfo</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListSysInfo&amp; <parameter>res</parameter></paramdef><paramdef>const SysInfoOp&amp; <parameter>options = SysInfoOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows a user to get system information about a machine. A system information describes a machine. The option is  the machine id (if no machine id, the information for all the machines are given)</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>res</emphasis></term>
            <listitem>
              <para>Output argument. The list of the system information gotten.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Optional field for system information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error code&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized.&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key has expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>restart</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::restart</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const SupervisorOp&amp; <parameter>op</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the restart.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineWorkIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineWorkIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineWorkIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS Python API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.exportCommands</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.exportCommands</refname>
        <refpurpose>exports all the commands made by a user during a session</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.exportCommands</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>oldSessionId</parameter></paramdef><paramdef>string <parameter>filename</parameter></paramdef><paramdef>ExportOp <parameter>options = ExportOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Exports all the VISHNU commands submitted during a completed session. This session must be in closed state.
The output of this command is a file containing a shell script. For safety reasons, the commands having a password for parameter are not exported
(for example the vishnu_connect and vishnu_change_password commands). This means the shell script must be run after opening
a session manually or by adding the vishnu_connect command to the script.
The access to other user's sessions is only permitted to administrators.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>oldSessionId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the session to export (session has ended).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>filename</emphasis></term>
            <listitem>
              <para>Input/Output argument. The path of the output file containing the Vishnu shell commands.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Options which encapsulate the option for the export.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Undefined error code&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized.&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key has expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getMetricCurrentValue</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getMetricCurrentValue</refname>
        <refpurpose>displays the current values of system metrics</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.getMetricCurrentValue</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>ListMetric <parameter>metricValue</parameter></paramdef><paramdef>CurMetricOp <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Displays the current values of the monitored metrics on the system identified by the machineId argument : cpuload, free diskspace and free memory. 
The units of displayed values are percentages for cpuload and Megabytes (Mb) for diskspace and memory. The provided values are always standard integers (no float values).
Please note that retrieving these values uses some valuable system ressources and should not occur too frequently to avoid an impact on system performance.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>metricValue</emphasis></term>
            <listitem>
              <para>Output argument. Value of the metric.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the current metric value.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Undefined error code&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized.&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key has expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getMetricHistory</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getMetricHistory</refname>
        <refpurpose>displays the history of values of a system metric</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.getMetricHistory</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>ListMetric <parameter>metricValues</parameter></paramdef><paramdef>MetricHistOp <parameter>options = MetricHistOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Displays the chronological list of values of the metrics on the system identified by the machineId argument. Using the options it is possible to specify a type of metric and the starting and ending dates of the desired monitoring period. Note that some data will be available only if the required VISHNU agent (IMS server) has been running locally on the machine during the specified period.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>metricValues</emphasis></term>
            <listitem>
              <para>Output argument. List of metric values.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The optional fields for the metric history.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Undefined error code&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized.&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key has expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getProcesses</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getProcesses</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.getProcesses</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ListProcesses <parameter>process</parameter></paramdef><paramdef>ProcessOp <parameter>options = ProcessOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Output argument. The list of the Vishnu processes on the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options to search for the processes.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setSystemInfo</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setSystemInfo</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>SystemInfo <parameter>systemInfo</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>systemInfo</emphasis></term>
            <listitem>
              <para>Input argument. Contains system information to store in Vishnu database.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setSystemThreshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setSystemThreshold</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Threshold <parameter>threshold</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>threshold</emphasis></term>
            <listitem>
              <para>Input argument. The threshold to set.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getSystemThreshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.getSystemThreshold</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ListThreshold <parameter>value</parameter></paramdef><paramdef>ThresholdOp <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>value</emphasis></term>
            <listitem>
              <para>Output argument. The thresholds value.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the threshold.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineUserIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineUserIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineUserIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineMachineIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineMachineIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineMachineIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineJobIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineJobIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineJobIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineTransferIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineTransferIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineTransferIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineAuthIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineAuthIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineAuthIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.loadShed</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.loadShed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.loadShed</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>LoadShedType <parameter>loadShedType</parameter></paramdef><paramdef>SupervisorOp <parameter>op = SupervisorOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine to stop.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>loadShedType</emphasis></term>
            <listitem>
              <para>Input argument. Selects a load shedding mode (SOFT: stops all services and they can be restarted, HARD: stops all services, they cannot be restarted).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the supervision.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>IMSVishnuException(&quot;If a component is unavailable&quot; [301])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setUpdateFrequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setUpdateFrequency</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>int <parameter>freq</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Input argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getUpdateFrequency</refname>
        <refpurpose>gets the update frequency of the IMS database</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, freq=VISHNU.getUpdateFrequency</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows a user to get the update frequency, to know  how often the state of the machines is automatically polled to get historical data.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Output argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq(int)</emphasis></term>
            <listitem>
              <para>Frequency the data are updated, in second</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Undefined error code&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized.&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key has expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.stop</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.stop</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>SupervisorOp <parameter>op = SupervisorOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the supervision.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getSystemInfo</refname>
        <refpurpose>To get the system info on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.getSystemInfo</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ListSysInfo <parameter>res</parameter></paramdef><paramdef>SysInfoOp <parameter>options = SysInfoOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows a user to get system information about a machine. A system information describes a machine. The option is  the machine id (if no machine id, the information for all the machines are given)</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>res</emphasis></term>
            <listitem>
              <para>Output argument. The list of the system information gotten.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Optional field for system information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Undefined error code&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized.&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key has expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.restart</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.restart</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>SupervisorOp <parameter>op</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>op</emphasis></term>
            <listitem>
              <para>Input argument. The option for the restart.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineWorkIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineWorkIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineWorkIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
</book>