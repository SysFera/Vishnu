/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */
#include <Python.h>
#include <stddef.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *self, PyObject *func)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyInstanceMethod_New(func);
#else
  return NULL;
#endif
}

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", name, v);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
#else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
#endif
#if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
#else
    PyString_ConcatAndDel(&repr,nrep);
#endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_print(SwigPyObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char *str;
#ifdef METH_NOARGS
  PyObject *repr = SwigPyObject_repr(v);
#else
  PyObject *repr = SwigPyObject_repr(v, NULL);
#endif
  if (repr) {
    str = SWIG_Python_str_AsChar(repr); 
    fputs(str, fp);
    SWIG_Python_str_DelForPy3(str);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
SwigPyObject_str(SwigPyObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    SWIG_Python_str_FromChar(result) : 0;
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  if( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) )
    res = Py_True;
  else
    res = Py_False;
  Py_INCREF(res);
  return res;  
}


SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	/* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
	PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else    
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
#endif
	(char *)"SwigPyObject",		    /* tp_name */
	sizeof(SwigPyObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)SwigPyObject_dealloc,   /* tp_dealloc */
	(printfunc)SwigPyObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)SwigPyObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
	(cmpfunc)SwigPyObject_compare,	    /* tp_compare */
#endif
	(reprfunc)SwigPyObject_repr,	    /* tp_repr */    
	&SwigPyObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)SwigPyObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	(richcmpfunc)SwigPyObject_richcompare,           /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
	0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    swigpyobject_type = tmp;
    /* for Python 3 we already assigned ob_type in PyVarObject_HEAD_INIT() */
#if PY_VERSION_HEX < 0x03000000
    swigpyobject_type.ob_type = &PyType_Type;
#endif
    type_init = 1;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
    /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
    PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else
	PyObject_HEAD_INIT(NULL)
    0,				    /* ob_size */	
#endif
	(char *)"SwigPyPacked",		    /* tp_name */	
	sizeof(SwigPyPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)SwigPyPacked_dealloc,   /* tp_dealloc */	
	(printfunc)SwigPyPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
#if PY_VERSION_HEX>=0x03000000
    0, /* tp_reserved in 3.0.1 */
#else
    (cmpfunc)SwigPyPacked_compare,	    /* tp_compare */
#endif
	(reprfunc)SwigPyPacked_repr,	    /* tp_repr */
	0,	                            /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)SwigPyPacked_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    swigpypacked_type = tmp;
    /* for Python 3 the ob_type already assigned in PyVarObject_HEAD_INIT() */
#if PY_VERSION_HEX < 0x03000000
    swigpypacked_type.ob_type = &PyType_Type;
#endif
    type_init = 1;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (SwigPyObject_Check(pyobj)) {
    return (SwigPyObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !SwigPyObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 SwigPyObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (SwigPyObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (own)
      *own = 0;
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (SwigPyObject *)sobj->next;
	  } else {
	    if (ptr) {
              int newmemory = 0;
              *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
              if (newmemory == SWIG_CAST_NEW_MEMORY) {
                assert(own);
                if (own)
                  *own = *own | SWIG_CAST_NEW_MEMORY;
              }
            }
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = PyBaseObject_Type.tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    PyObject_SetAttr(inst, SWIG_This(), swig_this);
    Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
#else
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = SwigPyObject_New(ptr, type, own);
    SwigPyClientData *clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ExceptionType swig_types[0]
#define SWIGTYPE_p_FMSVishnuException swig_types[1]
#define SWIGTYPE_p_FMS_Data__CpFileOptions swig_types[2]
#define SWIGTYPE_p_FMS_Data__CreateDirOptions swig_types[3]
#define SWIGTYPE_p_FMS_Data__DirEntry swig_types[4]
#define SWIGTYPE_p_FMS_Data__DirEntryList swig_types[5]
#define SWIGTYPE_p_FMS_Data__FileStat swig_types[6]
#define SWIGTYPE_p_FMS_Data__FileTransfer swig_types[7]
#define SWIGTYPE_p_FMS_Data__FileTransferList swig_types[8]
#define SWIGTYPE_p_FMS_Data__HeadOfFileOptions swig_types[9]
#define SWIGTYPE_p_FMS_Data__LsDirOptions swig_types[10]
#define SWIGTYPE_p_FMS_Data__LsTransferOptions swig_types[11]
#define SWIGTYPE_p_FMS_Data__RmFileOptions swig_types[12]
#define SWIGTYPE_p_FMS_Data__StopTransferOptions swig_types[13]
#define SWIGTYPE_p_FMS_Data__TailOfFileOptions swig_types[14]
#define SWIGTYPE_p_IMSVishnuException swig_types[15]
#define SWIGTYPE_p_IMS_Data__CurMetricOp swig_types[16]
#define SWIGTYPE_p_IMS_Data__ExportOp swig_types[17]
#define SWIGTYPE_p_IMS_Data__ListMetric swig_types[18]
#define SWIGTYPE_p_IMS_Data__ListProcesses swig_types[19]
#define SWIGTYPE_p_IMS_Data__ListSysInfo swig_types[20]
#define SWIGTYPE_p_IMS_Data__ListThreshold swig_types[21]
#define SWIGTYPE_p_IMS_Data__Metric swig_types[22]
#define SWIGTYPE_p_IMS_Data__MetricHistOp swig_types[23]
#define SWIGTYPE_p_IMS_Data__Process swig_types[24]
#define SWIGTYPE_p_IMS_Data__ProcessOp swig_types[25]
#define SWIGTYPE_p_IMS_Data__RestartOp swig_types[26]
#define SWIGTYPE_p_IMS_Data__SysInfoOp swig_types[27]
#define SWIGTYPE_p_IMS_Data__SystemInfo swig_types[28]
#define SWIGTYPE_p_IMS_Data__Threshold swig_types[29]
#define SWIGTYPE_p_IMS_Data__ThresholdOp swig_types[30]
#define SWIGTYPE_p_SystemException swig_types[31]
#define SWIGTYPE_p_TMSVishnuException swig_types[32]
#define SWIGTYPE_p_TMS_Data__AddWorkOptions swig_types[33]
#define SWIGTYPE_p_TMS_Data__Job swig_types[34]
#define SWIGTYPE_p_TMS_Data__JobResult swig_types[35]
#define SWIGTYPE_p_TMS_Data__ListJobResults swig_types[36]
#define SWIGTYPE_p_TMS_Data__ListJobs swig_types[37]
#define SWIGTYPE_p_TMS_Data__ListJobsOptions swig_types[38]
#define SWIGTYPE_p_TMS_Data__ListProgression swig_types[39]
#define SWIGTYPE_p_TMS_Data__ListQueues swig_types[40]
#define SWIGTYPE_p_TMS_Data__LoadCriterion swig_types[41]
#define SWIGTYPE_p_TMS_Data__ProgressOptions swig_types[42]
#define SWIGTYPE_p_TMS_Data__Progression swig_types[43]
#define SWIGTYPE_p_TMS_Data__Queue swig_types[44]
#define SWIGTYPE_p_TMS_Data__SubmitOptions swig_types[45]
#define SWIGTYPE_p_TMS_Data__Work swig_types[46]
#define SWIGTYPE_p_UMSVishnuException swig_types[47]
#define SWIGTYPE_p_UMS_Data__AuthAccount swig_types[48]
#define SWIGTYPE_p_UMS_Data__AuthSystem swig_types[49]
#define SWIGTYPE_p_UMS_Data__Command swig_types[50]
#define SWIGTYPE_p_UMS_Data__Configuration swig_types[51]
#define SWIGTYPE_p_UMS_Data__ConnectOptions swig_types[52]
#define SWIGTYPE_p_UMS_Data__ListAuthAccOptions swig_types[53]
#define SWIGTYPE_p_UMS_Data__ListAuthAccounts swig_types[54]
#define SWIGTYPE_p_UMS_Data__ListAuthSysOptions swig_types[55]
#define SWIGTYPE_p_UMS_Data__ListAuthSystems swig_types[56]
#define SWIGTYPE_p_UMS_Data__ListCmdOptions swig_types[57]
#define SWIGTYPE_p_UMS_Data__ListCommands swig_types[58]
#define SWIGTYPE_p_UMS_Data__ListLocalAccOptions swig_types[59]
#define SWIGTYPE_p_UMS_Data__ListLocalAccounts swig_types[60]
#define SWIGTYPE_p_UMS_Data__ListMachineOptions swig_types[61]
#define SWIGTYPE_p_UMS_Data__ListMachines swig_types[62]
#define SWIGTYPE_p_UMS_Data__ListOptOptions swig_types[63]
#define SWIGTYPE_p_UMS_Data__ListOptionsValues swig_types[64]
#define SWIGTYPE_p_UMS_Data__ListSessionOptions swig_types[65]
#define SWIGTYPE_p_UMS_Data__ListSessions swig_types[66]
#define SWIGTYPE_p_UMS_Data__ListUsers swig_types[67]
#define SWIGTYPE_p_UMS_Data__ListUsersOptions swig_types[68]
#define SWIGTYPE_p_UMS_Data__LocalAccount swig_types[69]
#define SWIGTYPE_p_UMS_Data__Machine swig_types[70]
#define SWIGTYPE_p_UMS_Data__OptionValue swig_types[71]
#define SWIGTYPE_p_UMS_Data__Session swig_types[72]
#define SWIGTYPE_p_UMS_Data__User swig_types[73]
#define SWIGTYPE_p_UserException swig_types[74]
#define SWIGTYPE_p_VishnuException swig_types[75]
#define SWIGTYPE_p___ecorecpp__mapping__any swig_types[76]
#define SWIGTYPE_p_bool swig_types[77]
#define SWIGTYPE_p_char swig_types[78]
#define SWIGTYPE_p_double swig_types[79]
#define SWIGTYPE_p_ecore__EClass swig_types[80]
#define SWIGTYPE_p_ecore__EObject swig_types[81]
#define SWIGTYPE_p_ecore__EOperation swig_types[82]
#define SWIGTYPE_p_ecore__EReference swig_types[83]
#define SWIGTYPE_p_ecore__EStructuralFeature swig_types[84]
#define SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__AuthAccount_t swig_types[85]
#define SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__AuthSystem_t swig_types[86]
#define SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__LocalAccount_t swig_types[87]
#define SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__Machine_t swig_types[88]
#define SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__User_t swig_types[89]
#define SWIGTYPE_p_float swig_types[90]
#define SWIGTYPE_p_int swig_types[91]
#define SWIGTYPE_p_long_double swig_types[92]
#define SWIGTYPE_p_long_long swig_types[93]
#define SWIGTYPE_p_p_char swig_types[94]
#define SWIGTYPE_p_short swig_types[95]
#define SWIGTYPE_p_std__exception swig_types[96]
#define SWIGTYPE_p_std__listT___ecorecpp__mapping__any_t swig_types[97]
#define SWIGTYPE_p_std__listT_ecore__EObject_p_t swig_types[98]
#define SWIGTYPE_p_std__string swig_types[99]
#define SWIGTYPE_p_std__stringstream swig_types[100]
#define SWIGTYPE_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t swig_types[101]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[102]
#define SWIGTYPE_p_time_t swig_types[103]
#define SWIGTYPE_p_unsigned_char swig_types[104]
#define SWIGTYPE_p_unsigned_int swig_types[105]
static swig_type_info *swig_types[107];
static swig_module_info swig_module = {swig_types, 106, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _VISHNU.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__VISHNU

#else
#  define SWIG_init    init_VISHNU

#endif
#define SWIG_name    "_VISHNU"

#define SWIGVERSION 0x010340 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <cstddef>


#include <string>


#include <stdexcept>


#include <iostream>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>
#include <stdexcept>

  
namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <stdexcept>


#include <algorithm>


#include <vector>


#define PyMapIterator_T SwigPyMapIterator_T
#define PyMapKeyIterator_T SwigPyMapKeyIterator_T
#define PyMapValueIterator_T SwigPyMapValueITerator_T
#define PyObject_ptr SwigPtr_PyObject
#define PyObject_var SwigVar_PyObject
#define PyOper SwigPyOper
#define PySeq SwigPySeq
#define PySequence_ArrowProxy SwigPySequence_ArrowProxy
#define PySequence_Cont SwigPySequence_Cont
#define PySequence_InputIterator SwigPySequence_InputIterator
#define PySequence_Ref SwigPySequence_Ref
#define PySwigClientData SwigPyClientData
#define PySwigClientData_Del SwigPyClientData_Del
#define PySwigClientData_New SwigPyClientData_New
#define PySwigIterator SwigPyIterator
#define PySwigIteratorClosed_T SwigPyIteratorClosed_T
#define PySwigIteratorOpen_T SwigPyIteratorOpen_T
#define PySwigIterator_T SwigPyIterator_T
#define PySwigObject SwigPyObject
#define PySwigObject_Check SwigPyObject_Check
#define PySwigObject_GetDesc SwigPyObject_GetDesc
#define PySwigObject_New SwigPyObject_New
#define PySwigObject_acquire SwigPyObject_acquire
#define PySwigObject_append SwigPyObject_append
#define PySwigObject_as_number SwigPyObject_as_number
#define PySwigObject_compare SwigPyObject_compare
#define PySwigObject_dealloc SwigPyObject_dealloc
#define PySwigObject_disown SwigPyObject_disown
#define PySwigObject_format SwigPyObject_format
#define PySwigObject_getattr SwigPyObject_getattr
#define PySwigObject_hex SwigPyObject_hex
#define PySwigObject_long SwigPyObject_long
#define PySwigObject_next SwigPyObject_next
#define PySwigObject_oct SwigPyObject_oct
#define PySwigObject_own SwigPyObject_own
#define PySwigObject_print SwigPyObject_print
#define PySwigObject_repr SwigPyObject_repr
#define PySwigObject_richcompare SwigPyObject_richcompare
#define PySwigObject_str SwigPyObject_str
#define PySwigObject_type SwigPyObject_type
#define PySwigPacked SwigPyPacked
#define PySwigPacked_Check SwigPyPacked_Check
#define PySwigPacked_New SwigPyPacked_New
#define PySwigPacked_UnpackData SwigPyPacked_UnpackData
#define PySwigPacked_compare SwigPyPacked_compare
#define PySwigPacked_dealloc SwigPyPacked_dealloc
#define PySwigPacked_print SwigPyPacked_print
#define PySwigPacked_repr SwigPyPacked_repr
#define PySwigPacked_str SwigPyPacked_str
#define PySwigPacked_type SwigPyPacked_type
#define pyseq swigpyseq
#define pyswigobject_type swigpyobject_type
#define pyswigpacked_type swigpypacked_type


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_NewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  if (s.size()) {
    return SWIG_FromCharPtrAndSize(s.data(), s.size());
  } else {
    return SWIG_FromCharPtrAndSize(s.c_str(), 0);
  }
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}


#define SWIG_FILE_WITH_INIT
#include "UMS_Data.hpp"
#include "TMS_Data.hpp"
#include "IMS_Data.hpp"
#include "FMS_Data.hpp"
#include "VishnuException.hpp"
#include "UserException.hpp"
#include "SystemException.hpp"
#include "UMSVishnuException.hpp"
#include "TMSVishnuException.hpp"
#include "IMSVishnuException.hpp"
#include "FMSVishnuException.hpp"
#ifdef COMPILE_UMS
#include "api_ums.hpp"
#endif
#ifdef COMPILE_TMS
#include "api_tms.hpp"
#endif
#ifdef COMPILE_IMS
#include "api_ims.hpp"
#endif
#ifdef COMPILE_FMS
#include "api_fms.hpp"
#endif





SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SwigPyIterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 = (size_t) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:SwigPyIterator_incr",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_size_t(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
  }
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 = (size_t) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:SwigPyIterator_decr",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_size_t(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
  }
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "x", NULL 
  };
  ptrdiff_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator_distance",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "x", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator_equal",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator___next__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_previous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator_advance",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "x", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___eq__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "x", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___ne__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___iadd__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___isub__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___add__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_EObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_EObject")) SWIG_fail;
  result = (ecore::EObject *)new ecore::EObject();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EObject, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_EObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_EObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_EObject" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject__initialize" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject_eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eClass" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eIsProxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject_eIsProxy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eIsProxy" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (::ecore::EBoolean)(arg1)->eIsProxy();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eResource(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EResource result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject_eResource",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eResource" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (::ecore::EResource)(arg1)->eResource();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eContainer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EObject_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject_eContainer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eContainer" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (::ecore::EObject_ptr)(arg1)->eContainer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EObject, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eContainingFeature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EStructuralFeature_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject_eContainingFeature",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eContainingFeature" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (::ecore::EStructuralFeature_ptr)(arg1)->eContainingFeature();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EStructuralFeature, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eContainmentFeature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EReference_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject_eContainmentFeature",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eContainmentFeature" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (::ecore::EReference_ptr)(arg1)->eContainmentFeature();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EReference, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eContents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::list< ecore::EObject * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject_eContents",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eContents" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (arg1)->eContents();
  resultobj = SWIG_NewPointerObj((new std::list< ::ecore::EObject_ptr >(static_cast< const std::list< ::ecore::EObject_ptr >& >(result))), SWIGTYPE_p_std__listT_ecore__EObject_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eAllContents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject_eAllContents",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eAllContents" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (int)(arg1)->eAllContents();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eCrossReferences(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::list< ecore::EObject * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject_eCrossReferences",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eCrossReferences" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (arg1)->eCrossReferences();
  resultobj = SWIG_NewPointerObj((new std::list< ::ecore::EObject_ptr >(static_cast< const std::list< ::ecore::EObject_ptr >& >(result))), SWIGTYPE_p_std__listT_ecore__EObject_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eGet__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EStructuralFeature_ptr arg2 = (::ecore::EStructuralFeature_ptr) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EObject_eGet",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eGet" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ecore__EStructuralFeature, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EObject_eGet" "', argument " "2"" of type '" "::ecore::EStructuralFeature_ptr""'"); 
  }
  arg2 = reinterpret_cast< ::ecore::EStructuralFeature_ptr >(argp2);
  result = (arg1)->eGet(arg2);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eGet__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EStructuralFeature_ptr arg2 = (::ecore::EStructuralFeature_ptr) 0 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EObject_eGet",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eGet" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ecore__EStructuralFeature, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EObject_eGet" "', argument " "2"" of type '" "::ecore::EStructuralFeature_ptr""'"); 
  }
  arg2 = reinterpret_cast< ::ecore::EStructuralFeature_ptr >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "EObject_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eSet__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EStructuralFeature_ptr arg2 = (::ecore::EStructuralFeature_ptr) 0 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EObject_eSet",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eSet" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ecore__EStructuralFeature, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EObject_eSet" "', argument " "2"" of type '" "::ecore::EStructuralFeature_ptr""'"); 
  }
  arg2 = reinterpret_cast< ::ecore::EStructuralFeature_ptr >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EObject_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EObject_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eIsSet__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EStructuralFeature_ptr arg2 = (::ecore::EStructuralFeature_ptr) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EObject_eIsSet",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eIsSet" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ecore__EStructuralFeature, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EObject_eIsSet" "', argument " "2"" of type '" "::ecore::EStructuralFeature_ptr""'"); 
  }
  arg2 = reinterpret_cast< ::ecore::EStructuralFeature_ptr >(argp2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eUnset__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EStructuralFeature_ptr arg2 = (::ecore::EStructuralFeature_ptr) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EObject_eUnset",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eUnset" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ecore__EStructuralFeature, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EObject_eUnset" "', argument " "2"" of type '" "::ecore::EStructuralFeature_ptr""'"); 
  }
  arg2 = reinterpret_cast< ::ecore::EStructuralFeature_ptr >(argp2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eInvoke(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EOperation_ptr arg2 = (::ecore::EOperation_ptr) 0 ;
  std::list< ::ecorecpp::mapping::any > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_operation",(char *) "_arguments", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:EObject_eInvoke",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eInvoke" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ecore__EOperation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EObject_eInvoke" "', argument " "2"" of type '" "::ecore::EOperation_ptr""'"); 
  }
  arg2 = reinterpret_cast< ::ecore::EOperation_ptr >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__listT___ecorecpp__mapping__any_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EObject_eInvoke" "', argument " "3"" of type '" "std::list< ::ecorecpp::mapping::any > const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EObject_eInvoke" "', argument " "3"" of type '" "std::list< ::ecorecpp::mapping::any > const &""'"); 
  }
  arg3 = reinterpret_cast< std::list< ::ecorecpp::mapping::any > * >(argp3);
  result = (arg1)->eInvoke(arg2,(std::list< ::ecorecpp::mapping::any > const &)*arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eGet__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EObject_eGet",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eGet" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "EObject_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "EObject_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eGet(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ecore__EObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ecore__EStructuralFeature, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_EObject_eGet__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ecore__EObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ecore__EStructuralFeature, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_EObject_eGet__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ecore__EObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_EObject_eGet__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'EObject_eGet'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    eGet(ecore::EObject *,::ecore::EStructuralFeature_ptr)\n"
    "    eGet(ecore::EObject *,::ecore::EStructuralFeature_ptr,::ecore::EBoolean)\n"
    "    eGet(ecore::EObject *,::ecore::EInt,::ecore::EBoolean)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eSet__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EObject_eSet",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eSet" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "EObject_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EObject_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EObject_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eSet(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ecore__EObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ecore__EStructuralFeature, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p___ecorecpp__mapping__any, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_EObject_eSet__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ecore__EObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p___ecorecpp__mapping__any, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_EObject_eSet__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'EObject_eSet'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    eSet(ecore::EObject *,::ecore::EStructuralFeature_ptr,ecore::EJavaObject const &)\n"
    "    eSet(ecore::EObject *,::ecore::EInt,ecore::EJavaObject const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eIsSet__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EObject_eIsSet",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eIsSet" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "EObject_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eIsSet(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ecore__EObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ecore__EStructuralFeature, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_EObject_eIsSet__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ecore__EObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_EObject_eIsSet__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'EObject_eIsSet'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    eIsSet(ecore::EObject *,::ecore::EStructuralFeature_ptr)\n"
    "    eIsSet(ecore::EObject *,::ecore::EInt)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eUnset__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EObject_eUnset",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject_eUnset" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "EObject_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject_eUnset(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ecore__EObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ecore__EStructuralFeature, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_EObject_eUnset__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ecore__EObject, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_EObject_eUnset__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'EObject_eUnset'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    eUnset(ecore::EObject *,::ecore::EStructuralFeature_ptr)\n"
    "    eUnset(ecore::EObject *,::ecore::EInt)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EObject__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject__eClass" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EObject__setEContainer(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  ecore::EObject *arg1 = (ecore::EObject *) 0 ;
  ::ecore::EObject_ptr arg2 = (::ecore::EObject_ptr) 0 ;
  ::ecore::EStructuralFeature_ptr arg3 = (::ecore::EStructuralFeature_ptr) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_eContainer",(char *) "_eContainingFeature", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:EObject__setEContainer",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EObject__setEContainer" "', argument " "1"" of type '" "ecore::EObject *""'"); 
  }
  arg1 = reinterpret_cast< ecore::EObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ecore__EObject, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EObject__setEContainer" "', argument " "2"" of type '" "::ecore::EObject_ptr""'"); 
  }
  arg2 = reinterpret_cast< ::ecore::EObject_ptr >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ecore__EStructuralFeature, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EObject__setEContainer" "', argument " "3"" of type '" "::ecore::EStructuralFeature_ptr""'"); 
  }
  arg3 = reinterpret_cast< ::ecore::EStructuralFeature_ptr >(argp3);
  (arg1)->_setEContainer(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *EObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ecore__EObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ConnectOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ConnectOptions")) SWIG_fail;
  result = (UMS_Data::ConnectOptions *)new UMS_Data::ConnectOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__ConnectOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ConnectOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ConnectOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ConnectOptions" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConnectOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions__initialize" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_getClosePolicy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::SessionCloseType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConnectOptions_getClosePolicy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_getClosePolicy" "', argument " "1"" of type '" "UMS_Data::ConnectOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  result = (::UMS_Data::SessionCloseType)((UMS_Data::ConnectOptions const *)arg1)->getClosePolicy();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_setClosePolicy(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  ::UMS_Data::SessionCloseType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_closePolicy", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ConnectOptions_setClosePolicy",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_setClosePolicy" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConnectOptions_setClosePolicy" "', argument " "2"" of type '" "::UMS_Data::SessionCloseType""'");
  } 
  arg2 = static_cast< ::UMS_Data::SessionCloseType >(val2);
  (arg1)->setClosePolicy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_getSessionInactivityDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConnectOptions_getSessionInactivityDelay",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_getSessionInactivityDelay" "', argument " "1"" of type '" "UMS_Data::ConnectOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  result = (::ecore::EInt)((UMS_Data::ConnectOptions const *)arg1)->getSessionInactivityDelay();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_setSessionInactivityDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionInactivityDelay", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ConnectOptions_setSessionInactivityDelay",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_setSessionInactivityDelay" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConnectOptions_setSessionInactivityDelay" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setSessionInactivityDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_getSubstituteUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConnectOptions_getSubstituteUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_getSubstituteUserId" "', argument " "1"" of type '" "UMS_Data::ConnectOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ConnectOptions const *)arg1)->getSubstituteUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_setSubstituteUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_substituteUserId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ConnectOptions_setSubstituteUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_setSubstituteUserId" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConnectOptions_setSubstituteUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConnectOptions_setSubstituteUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSubstituteUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ConnectOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_eGet" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConnectOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConnectOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ConnectOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_eSet" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConnectOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ConnectOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConnectOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ConnectOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_eIsSet" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConnectOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ConnectOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions_eUnset" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConnectOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConnectOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ConnectOptions *arg1 = (UMS_Data::ConnectOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConnectOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ConnectOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConnectOptions__eClass" "', argument " "1"" of type '" "UMS_Data::ConnectOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ConnectOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__ConnectOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Session(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Session")) SWIG_fail;
  result = (UMS_Data::Session *)new UMS_Data::Session();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__Session, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Session(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Session",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Session" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session__initialize" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getSessionId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getSessionId" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Session const *)arg1)->getSessionId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setSessionId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setSessionId" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Session_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Session_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSessionId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getUserId" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Session const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setUserId" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Session_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Session_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getSessionKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getSessionKey",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getSessionKey" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Session const *)arg1)->getSessionKey();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setSessionKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionKey", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setSessionKey",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setSessionKey" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Session_setSessionKey" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Session_setSessionKey" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSessionKey((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getDateLastConnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getDateLastConnect",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getDateLastConnect" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (::ecore::ELong)((UMS_Data::Session const *)arg1)->getDateLastConnect();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setDateLastConnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_dateLastConnect", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setDateLastConnect",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setDateLastConnect" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_setDateLastConnect" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setDateLastConnect(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getDateCreation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getDateCreation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getDateCreation" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (::ecore::ELong)((UMS_Data::Session const *)arg1)->getDateCreation();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setDateCreation(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_dateCreation", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setDateCreation",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setDateCreation" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_setDateCreation" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setDateCreation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getDateClosure(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getDateClosure",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getDateClosure" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (::ecore::ELong)((UMS_Data::Session const *)arg1)->getDateClosure();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setDateClosure(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_dateClosure", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setDateClosure",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setDateClosure" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_setDateClosure" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setDateClosure(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::StatusType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getStatus" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (::UMS_Data::StatusType)((UMS_Data::Session const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::UMS_Data::StatusType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setStatus" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_setStatus" "', argument " "2"" of type '" "::UMS_Data::StatusType""'");
  } 
  arg2 = static_cast< ::UMS_Data::StatusType >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getClosePolicy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::SessionCloseType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getClosePolicy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getClosePolicy" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (::UMS_Data::SessionCloseType)((UMS_Data::Session const *)arg1)->getClosePolicy();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setClosePolicy(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::UMS_Data::SessionCloseType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_closePolicy", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setClosePolicy",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setClosePolicy" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_setClosePolicy" "', argument " "2"" of type '" "::UMS_Data::SessionCloseType""'");
  } 
  arg2 = static_cast< ::UMS_Data::SessionCloseType >(val2);
  (arg1)->setClosePolicy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getTimeout",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getTimeout" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (::ecore::ELong)((UMS_Data::Session const *)arg1)->getTimeout();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setTimeout(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_timeout", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setTimeout",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setTimeout" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_setTimeout" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setTimeout(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_getAuthenId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session_getAuthenId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_getAuthenId" "', argument " "1"" of type '" "UMS_Data::Session const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Session const *)arg1)->getAuthenId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_setAuthenId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_authenId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_setAuthenId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_setAuthenId" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Session_setAuthenId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Session_setAuthenId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAuthenId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Session_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_eGet" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Session_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Session_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_eSet" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Session_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Session_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_eIsSet" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Session_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session_eUnset" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Session_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Session__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Session *arg1 = (UMS_Data::Session *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Session__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Session, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Session__eClass" "', argument " "1"" of type '" "UMS_Data::Session *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Session * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Session_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__Session, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ListUsersOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ListUsersOptions")) SWIG_fail;
  result = (UMS_Data::ListUsersOptions *)new UMS_Data::ListUsersOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__ListUsersOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListUsersOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListUsersOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListUsersOptions" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListUsersOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions__initialize" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListUsersOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions_getUserId" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListUsersOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListUsersOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions_setUserId" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListUsersOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListUsersOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions_getAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListUsersOptions_getAuthSystemId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions_getAuthSystemId" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListUsersOptions const *)arg1)->getAuthSystemId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions_setAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_authSystemId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListUsersOptions_setAuthSystemId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions_setAuthSystemId" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListUsersOptions_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListUsersOptions_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAuthSystemId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListUsersOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions_eGet" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListUsersOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ListUsersOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListUsersOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions_eSet" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListUsersOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ListUsersOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListUsersOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListUsersOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions_eIsSet" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListUsersOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListUsersOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions_eUnset" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListUsersOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListUsersOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsersOptions *arg1 = (UMS_Data::ListUsersOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListUsersOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListUsersOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListUsersOptions__eClass" "', argument " "1"" of type '" "UMS_Data::ListUsersOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListUsersOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__ListUsersOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ListSessionOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ListSessionOptions")) SWIG_fail;
  result = (UMS_Data::ListSessionOptions *)new UMS_Data::ListSessionOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__ListSessionOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListSessionOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListSessionOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListSessionOptions" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions__initialize" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::StatusType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_getStatus" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (::UMS_Data::StatusType)((UMS_Data::ListSessionOptions const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::UMS_Data::StatusType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_setStatus" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_setStatus" "', argument " "2"" of type '" "::UMS_Data::StatusType""'");
  } 
  arg2 = static_cast< ::UMS_Data::StatusType >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_getSessionClosePolicy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::SessionCloseType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions_getSessionClosePolicy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_getSessionClosePolicy" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (::UMS_Data::SessionCloseType)((UMS_Data::ListSessionOptions const *)arg1)->getSessionClosePolicy();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_setSessionClosePolicy(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::UMS_Data::SessionCloseType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionClosePolicy", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_setSessionClosePolicy",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_setSessionClosePolicy" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_setSessionClosePolicy" "', argument " "2"" of type '" "::UMS_Data::SessionCloseType""'");
  } 
  arg2 = static_cast< ::UMS_Data::SessionCloseType >(val2);
  (arg1)->setSessionClosePolicy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_getSessionInactivityDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions_getSessionInactivityDelay",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_getSessionInactivityDelay" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (::ecore::EInt)((UMS_Data::ListSessionOptions const *)arg1)->getSessionInactivityDelay();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_setSessionInactivityDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionInactivityDelay", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_setSessionInactivityDelay",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_setSessionInactivityDelay" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_setSessionInactivityDelay" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setSessionInactivityDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_getMachineId" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListSessionOptions const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_setMachineId" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListSessionOptions_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListSessionOptions_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_isAdminListOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions_isAdminListOption",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_isAdminListOption" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (::ecore::EBoolean)((UMS_Data::ListSessionOptions const *)arg1)->isAdminListOption();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_setAdminListOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_adminListOption", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_setAdminListOption",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_setAdminListOption" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_setAdminListOption" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setAdminListOption(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_getUserId" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListSessionOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_setUserId" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListSessionOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListSessionOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_getSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions_getSessionId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_getSessionId" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListSessionOptions const *)arg1)->getSessionId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_setSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_setSessionId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_setSessionId" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListSessionOptions_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListSessionOptions_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSessionId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_getStartDateOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions_getStartDateOption",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_getStartDateOption" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (::ecore::ELong)((UMS_Data::ListSessionOptions const *)arg1)->getStartDateOption();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_setStartDateOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_startDateOption", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_setStartDateOption",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_setStartDateOption" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_setStartDateOption" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setStartDateOption(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_getEndDateOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions_getEndDateOption",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_getEndDateOption" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (::ecore::ELong)((UMS_Data::ListSessionOptions const *)arg1)->getEndDateOption();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_setEndDateOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_endDateOption", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_setEndDateOption",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_setEndDateOption" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_setEndDateOption" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setEndDateOption(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListSessionOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_eGet" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ListSessionOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListSessionOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_eSet" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ListSessionOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListSessionOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_eIsSet" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListSessionOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions_eUnset" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListSessionOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListSessionOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListSessionOptions *arg1 = (UMS_Data::ListSessionOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListSessionOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListSessionOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListSessionOptions__eClass" "', argument " "1"" of type '" "UMS_Data::ListSessionOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListSessionOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__ListSessionOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_User(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_User")) SWIG_fail;
  result = (UMS_Data::User *)new UMS_Data::User();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__User, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_User(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_User",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_User" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:User__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User__initialize" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:User_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_getUserId" "', argument " "1"" of type '" "UMS_Data::User const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  result = (ecore::EString *) &((UMS_Data::User const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:User_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_setUserId" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "User_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "User_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_getPassword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:User_getPassword",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_getPassword" "', argument " "1"" of type '" "UMS_Data::User const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  result = (ecore::EString *) &((UMS_Data::User const *)arg1)->getPassword();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_setPassword(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_password", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:User_setPassword",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_setPassword" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "User_setPassword" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "User_setPassword" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setPassword((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_getFirstname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:User_getFirstname",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_getFirstname" "', argument " "1"" of type '" "UMS_Data::User const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  result = (ecore::EString *) &((UMS_Data::User const *)arg1)->getFirstname();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_setFirstname(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_firstname", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:User_setFirstname",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_setFirstname" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "User_setFirstname" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "User_setFirstname" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setFirstname((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_getLastname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:User_getLastname",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_getLastname" "', argument " "1"" of type '" "UMS_Data::User const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  result = (ecore::EString *) &((UMS_Data::User const *)arg1)->getLastname();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_setLastname(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_lastname", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:User_setLastname",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_setLastname" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "User_setLastname" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "User_setLastname" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setLastname((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_getPrivilege(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::PrivilegeType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:User_getPrivilege",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_getPrivilege" "', argument " "1"" of type '" "UMS_Data::User const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  result = (::UMS_Data::PrivilegeType)((UMS_Data::User const *)arg1)->getPrivilege();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_setPrivilege(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ::UMS_Data::PrivilegeType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_privilege", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:User_setPrivilege",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_setPrivilege" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "User_setPrivilege" "', argument " "2"" of type '" "::UMS_Data::PrivilegeType""'");
  } 
  arg2 = static_cast< ::UMS_Data::PrivilegeType >(val2);
  (arg1)->setPrivilege(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_getEmail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:User_getEmail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_getEmail" "', argument " "1"" of type '" "UMS_Data::User const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  result = (ecore::EString *) &((UMS_Data::User const *)arg1)->getEmail();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_setEmail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_email", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:User_setEmail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_setEmail" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "User_setEmail" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "User_setEmail" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setEmail((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::StatusType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:User_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_getStatus" "', argument " "1"" of type '" "UMS_Data::User const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  result = (::UMS_Data::StatusType)((UMS_Data::User const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ::UMS_Data::StatusType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:User_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_setStatus" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "User_setStatus" "', argument " "2"" of type '" "::UMS_Data::StatusType""'");
  } 
  arg2 = static_cast< ::UMS_Data::StatusType >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:User_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_eGet" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "User_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "User_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:User_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_eSet" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "User_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "User_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "User_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:User_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_eIsSet" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "User_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:User_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User_eUnset" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "User_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_User__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::User *arg1 = (UMS_Data::User *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:User__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__User, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "User__eClass" "', argument " "1"" of type '" "UMS_Data::User *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::User * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *User_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__User, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Command(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Command")) SWIG_fail;
  result = (UMS_Data::Command *)new UMS_Data::Command();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__Command, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Command(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Command",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Command" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Command__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command__initialize" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_getCommandId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Command_getCommandId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_getCommandId" "', argument " "1"" of type '" "UMS_Data::Command const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Command const *)arg1)->getCommandId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_setCommandId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_commandId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Command_setCommandId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_setCommandId" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Command_setCommandId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Command_setCommandId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setCommandId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_getSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Command_getSessionId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_getSessionId" "', argument " "1"" of type '" "UMS_Data::Command const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Command const *)arg1)->getSessionId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_setSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Command_setSessionId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_setSessionId" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Command_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Command_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSessionId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Command_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_getMachineId" "', argument " "1"" of type '" "UMS_Data::Command const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Command const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Command_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_setMachineId" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Command_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Command_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_getCmdDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Command_getCmdDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_getCmdDescription" "', argument " "1"" of type '" "UMS_Data::Command const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Command const *)arg1)->getCmdDescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_setCmdDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_cmdDescription", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Command_setCmdDescription",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_setCmdDescription" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Command_setCmdDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Command_setCmdDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setCmdDescription((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_getCmdStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Command_getCmdStartTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_getCmdStartTime" "', argument " "1"" of type '" "UMS_Data::Command const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  result = (::ecore::ELong)((UMS_Data::Command const *)arg1)->getCmdStartTime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_setCmdStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_cmdStartTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Command_setCmdStartTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_setCmdStartTime" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Command_setCmdStartTime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setCmdStartTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_getCmdEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Command_getCmdEndTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_getCmdEndTime" "', argument " "1"" of type '" "UMS_Data::Command const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  result = (::ecore::ELong)((UMS_Data::Command const *)arg1)->getCmdEndTime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_setCmdEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_cmdEndTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Command_setCmdEndTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_setCmdEndTime" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Command_setCmdEndTime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setCmdEndTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::CommandStatusType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Command_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_getStatus" "', argument " "1"" of type '" "UMS_Data::Command const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  result = (::UMS_Data::CommandStatusType)((UMS_Data::Command const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ::UMS_Data::CommandStatusType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Command_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_setStatus" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Command_setStatus" "', argument " "2"" of type '" "::UMS_Data::CommandStatusType""'");
  } 
  arg2 = static_cast< ::UMS_Data::CommandStatusType >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Command_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_eGet" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Command_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Command_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Command_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_eSet" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Command_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Command_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Command_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Command_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_eIsSet" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Command_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Command_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command_eUnset" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Command_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Command__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Command *arg1 = (UMS_Data::Command *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Command__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Command, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Command__eClass" "', argument " "1"" of type '" "UMS_Data::Command *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Command * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Command_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__Command, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ListCmdOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ListCmdOptions")) SWIG_fail;
  result = (UMS_Data::ListCmdOptions *)new UMS_Data::ListCmdOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__ListCmdOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListCmdOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListCmdOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListCmdOptions" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListCmdOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions__initialize" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_isAdminListOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListCmdOptions_isAdminListOption",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_isAdminListOption" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  result = (::ecore::EBoolean)((UMS_Data::ListCmdOptions const *)arg1)->isAdminListOption();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_setAdminListOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_adminListOption", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListCmdOptions_setAdminListOption",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_setAdminListOption" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListCmdOptions_setAdminListOption" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setAdminListOption(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListCmdOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_getUserId" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListCmdOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListCmdOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_setUserId" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListCmdOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListCmdOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_getSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListCmdOptions_getSessionId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_getSessionId" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListCmdOptions const *)arg1)->getSessionId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_setSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListCmdOptions_setSessionId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_setSessionId" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListCmdOptions_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListCmdOptions_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSessionId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_getStartDateOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListCmdOptions_getStartDateOption",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_getStartDateOption" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  result = (::ecore::ELong)((UMS_Data::ListCmdOptions const *)arg1)->getStartDateOption();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_setStartDateOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_startDateOption", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListCmdOptions_setStartDateOption",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_setStartDateOption" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListCmdOptions_setStartDateOption" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setStartDateOption(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_getEndDateOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListCmdOptions_getEndDateOption",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_getEndDateOption" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  result = (::ecore::ELong)((UMS_Data::ListCmdOptions const *)arg1)->getEndDateOption();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_setEndDateOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_endDateOption", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListCmdOptions_setEndDateOption",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_setEndDateOption" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListCmdOptions_setEndDateOption" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setEndDateOption(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListCmdOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_eGet" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListCmdOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ListCmdOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListCmdOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_eSet" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListCmdOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ListCmdOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListCmdOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListCmdOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_eIsSet" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListCmdOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListCmdOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions_eUnset" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListCmdOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListCmdOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListCmdOptions *arg1 = (UMS_Data::ListCmdOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListCmdOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListCmdOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListCmdOptions__eClass" "', argument " "1"" of type '" "UMS_Data::ListCmdOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListCmdOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__ListCmdOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LocalAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_LocalAccount")) SWIG_fail;
  result = (UMS_Data::LocalAccount *)new UMS_Data::LocalAccount();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__LocalAccount, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LocalAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LocalAccount",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LocalAccount" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LocalAccount__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount__initialize" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LocalAccount_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_getUserId" "', argument " "1"" of type '" "UMS_Data::LocalAccount const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  result = (ecore::EString *) &((UMS_Data::LocalAccount const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LocalAccount_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_setUserId" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LocalAccount_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LocalAccount_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LocalAccount_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_getMachineId" "', argument " "1"" of type '" "UMS_Data::LocalAccount const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  result = (ecore::EString *) &((UMS_Data::LocalAccount const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LocalAccount_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_setMachineId" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LocalAccount_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LocalAccount_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_getAcLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LocalAccount_getAcLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_getAcLogin" "', argument " "1"" of type '" "UMS_Data::LocalAccount const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  result = (ecore::EString *) &((UMS_Data::LocalAccount const *)arg1)->getAcLogin();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_setAcLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_acLogin", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LocalAccount_setAcLogin",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_setAcLogin" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LocalAccount_setAcLogin" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LocalAccount_setAcLogin" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAcLogin((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_getSshKeyPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LocalAccount_getSshKeyPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_getSshKeyPath" "', argument " "1"" of type '" "UMS_Data::LocalAccount const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  result = (ecore::EString *) &((UMS_Data::LocalAccount const *)arg1)->getSshKeyPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_setSshKeyPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sshKeyPath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LocalAccount_setSshKeyPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_setSshKeyPath" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LocalAccount_setSshKeyPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LocalAccount_setSshKeyPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSshKeyPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_getHomeDirectory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LocalAccount_getHomeDirectory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_getHomeDirectory" "', argument " "1"" of type '" "UMS_Data::LocalAccount const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  result = (ecore::EString *) &((UMS_Data::LocalAccount const *)arg1)->getHomeDirectory();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_setHomeDirectory(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_homeDirectory", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LocalAccount_setHomeDirectory",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_setHomeDirectory" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LocalAccount_setHomeDirectory" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LocalAccount_setHomeDirectory" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setHomeDirectory((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LocalAccount_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_eGet" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LocalAccount_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LocalAccount_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LocalAccount_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_eSet" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LocalAccount_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LocalAccount_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LocalAccount_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LocalAccount_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_eIsSet" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LocalAccount_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LocalAccount_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount_eUnset" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LocalAccount_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LocalAccount__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::LocalAccount *arg1 = (UMS_Data::LocalAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LocalAccount__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__LocalAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LocalAccount__eClass" "', argument " "1"" of type '" "UMS_Data::LocalAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::LocalAccount * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LocalAccount_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__LocalAccount, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ListLocalAccOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ListLocalAccOptions")) SWIG_fail;
  result = (UMS_Data::ListLocalAccOptions *)new UMS_Data::ListLocalAccOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__ListLocalAccOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListLocalAccOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListLocalAccOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListLocalAccOptions" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListLocalAccOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions__initialize" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_isAdminListOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListLocalAccOptions_isAdminListOption",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_isAdminListOption" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  result = (::ecore::EBoolean)((UMS_Data::ListLocalAccOptions const *)arg1)->isAdminListOption();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_setAdminListOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_adminListOption", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListLocalAccOptions_setAdminListOption",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_setAdminListOption" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListLocalAccOptions_setAdminListOption" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setAdminListOption(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListLocalAccOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_getUserId" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListLocalAccOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListLocalAccOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_setUserId" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListLocalAccOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListLocalAccOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListLocalAccOptions_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_getMachineId" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListLocalAccOptions const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListLocalAccOptions_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_setMachineId" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListLocalAccOptions_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListLocalAccOptions_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListLocalAccOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_eGet" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListLocalAccOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ListLocalAccOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListLocalAccOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_eSet" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListLocalAccOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ListLocalAccOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListLocalAccOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListLocalAccOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_eIsSet" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListLocalAccOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListLocalAccOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions_eUnset" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListLocalAccOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListLocalAccOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListLocalAccOptions *arg1 = (UMS_Data::ListLocalAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListLocalAccOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListLocalAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListLocalAccOptions__eClass" "', argument " "1"" of type '" "UMS_Data::ListLocalAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListLocalAccOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__ListLocalAccOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Machine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Machine")) SWIG_fail;
  result = (UMS_Data::Machine *)new UMS_Data::Machine();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__Machine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Machine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Machine",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Machine" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Machine__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine__initialize" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Machine_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_getMachineId" "', argument " "1"" of type '" "UMS_Data::Machine const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Machine const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Machine_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_setMachineId" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Machine_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Machine_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Machine_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_getName" "', argument " "1"" of type '" "UMS_Data::Machine const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Machine const *)arg1)->getName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_setName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Machine_setName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_setName" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Machine_setName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Machine_setName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_getSite(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Machine_getSite",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_getSite" "', argument " "1"" of type '" "UMS_Data::Machine const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Machine const *)arg1)->getSite();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_setSite(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_site", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Machine_setSite",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_setSite" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Machine_setSite" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Machine_setSite" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSite((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_getMachineDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Machine_getMachineDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_getMachineDescription" "', argument " "1"" of type '" "UMS_Data::Machine const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Machine const *)arg1)->getMachineDescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_setMachineDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineDescription", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Machine_setMachineDescription",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_setMachineDescription" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Machine_setMachineDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Machine_setMachineDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineDescription((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_getLanguage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Machine_getLanguage",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_getLanguage" "', argument " "1"" of type '" "UMS_Data::Machine const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Machine const *)arg1)->getLanguage();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_setLanguage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_language", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Machine_setLanguage",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_setLanguage" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Machine_setLanguage" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Machine_setLanguage" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setLanguage((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::StatusType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Machine_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_getStatus" "', argument " "1"" of type '" "UMS_Data::Machine const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  result = (::UMS_Data::StatusType)((UMS_Data::Machine const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ::UMS_Data::StatusType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Machine_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_setStatus" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Machine_setStatus" "', argument " "2"" of type '" "::UMS_Data::StatusType""'");
  } 
  arg2 = static_cast< ::UMS_Data::StatusType >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_getSshPublicKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Machine_getSshPublicKey",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_getSshPublicKey" "', argument " "1"" of type '" "UMS_Data::Machine const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Machine const *)arg1)->getSshPublicKey();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_setSshPublicKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sshPublicKey", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Machine_setSshPublicKey",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_setSshPublicKey" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Machine_setSshPublicKey" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Machine_setSshPublicKey" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSshPublicKey((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Machine_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_eGet" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Machine_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Machine_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Machine_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_eSet" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Machine_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Machine_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Machine_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Machine_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_eIsSet" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Machine_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Machine_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine_eUnset" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Machine_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Machine__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Machine *arg1 = (UMS_Data::Machine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Machine__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Machine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Machine__eClass" "', argument " "1"" of type '" "UMS_Data::Machine *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Machine * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Machine_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__Machine, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ListMachineOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ListMachineOptions")) SWIG_fail;
  result = (UMS_Data::ListMachineOptions *)new UMS_Data::ListMachineOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__ListMachineOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListMachineOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListMachineOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListMachineOptions" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListMachineOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions__initialize" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListMachineOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_getUserId" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListMachineOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListMachineOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_setUserId" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListMachineOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListMachineOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_isListAllMachine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListMachineOptions_isListAllMachine",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_isListAllMachine" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  result = (::ecore::EBoolean)((UMS_Data::ListMachineOptions const *)arg1)->isListAllMachine();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_setListAllMachine(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_listAllMachine", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListMachineOptions_setListAllMachine",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_setListAllMachine" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListMachineOptions_setListAllMachine" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setListAllMachine(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListMachineOptions_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_getMachineId" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListMachineOptions const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListMachineOptions_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_setMachineId" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListMachineOptions_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListMachineOptions_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListMachineOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_eGet" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListMachineOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ListMachineOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListMachineOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_eSet" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListMachineOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ListMachineOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListMachineOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListMachineOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_eIsSet" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListMachineOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListMachineOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions_eUnset" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListMachineOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListMachineOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListMachineOptions *arg1 = (UMS_Data::ListMachineOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListMachineOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListMachineOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListMachineOptions__eClass" "', argument " "1"" of type '" "UMS_Data::ListMachineOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListMachineOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__ListMachineOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Configuration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Configuration")) SWIG_fail;
  result = (UMS_Data::Configuration *)new UMS_Data::Configuration();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__Configuration, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Configuration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Configuration",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Configuration" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Configuration__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration__initialize" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_getFilePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Configuration_getFilePath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_getFilePath" "', argument " "1"" of type '" "UMS_Data::Configuration const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  result = (ecore::EString *) &((UMS_Data::Configuration const *)arg1)->getFilePath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_setFilePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_filePath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Configuration_setFilePath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_setFilePath" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Configuration_setFilePath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Configuration_setFilePath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setFilePath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_getListConfUsers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecorecpp::mapping::EList< ::UMS_Data::User > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Configuration_getListConfUsers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_getListConfUsers" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  result = (::ecorecpp::mapping::EList< ::UMS_Data::User > *) &(arg1)->getListConfUsers();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__User_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_getListConfMachines(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecorecpp::mapping::EList< ::UMS_Data::Machine > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Configuration_getListConfMachines",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_getListConfMachines" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  result = (::ecorecpp::mapping::EList< ::UMS_Data::Machine > *) &(arg1)->getListConfMachines();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__Machine_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_getListConfLocalAccounts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecorecpp::mapping::EList< ::UMS_Data::LocalAccount > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Configuration_getListConfLocalAccounts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_getListConfLocalAccounts" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  result = (::ecorecpp::mapping::EList< ::UMS_Data::LocalAccount > *) &(arg1)->getListConfLocalAccounts();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__LocalAccount_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_getListConfAuthSystems(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecorecpp::mapping::EList< ::UMS_Data::AuthSystem > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Configuration_getListConfAuthSystems",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_getListConfAuthSystems" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  result = (::ecorecpp::mapping::EList< ::UMS_Data::AuthSystem > *) &(arg1)->getListConfAuthSystems();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__AuthSystem_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_getListConfAuthAccounts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecorecpp::mapping::EList< ::UMS_Data::AuthAccount > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Configuration_getListConfAuthAccounts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_getListConfAuthAccounts" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  result = (::ecorecpp::mapping::EList< ::UMS_Data::AuthAccount > *) &(arg1)->getListConfAuthAccounts();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecorecpp__mapping__EListT___UMS_Data__AuthAccount_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Configuration_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_eGet" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Configuration_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Configuration_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Configuration_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_eSet" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Configuration_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Configuration_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Configuration_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Configuration_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_eIsSet" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Configuration_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Configuration_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration_eUnset" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Configuration_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Configuration__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::Configuration *arg1 = (UMS_Data::Configuration *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Configuration__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__Configuration, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Configuration__eClass" "', argument " "1"" of type '" "UMS_Data::Configuration *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::Configuration * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Configuration_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__Configuration, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_OptionValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OptionValue")) SWIG_fail;
  result = (UMS_Data::OptionValue *)new UMS_Data::OptionValue();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__OptionValue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OptionValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OptionValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OptionValue" "', argument " "1"" of type '" "UMS_Data::OptionValue *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OptionValue__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue__initialize" "', argument " "1"" of type '" "UMS_Data::OptionValue *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue_getOptionName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OptionValue_getOptionName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue_getOptionName" "', argument " "1"" of type '" "UMS_Data::OptionValue const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  result = (ecore::EString *) &((UMS_Data::OptionValue const *)arg1)->getOptionName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue_setOptionName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_optionName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:OptionValue_setOptionName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue_setOptionName" "', argument " "1"" of type '" "UMS_Data::OptionValue *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptionValue_setOptionName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptionValue_setOptionName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOptionName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue_getValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OptionValue_getValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue_getValue" "', argument " "1"" of type '" "UMS_Data::OptionValue const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  result = (ecore::EString *) &((UMS_Data::OptionValue const *)arg1)->getValue();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue_setValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:OptionValue_setValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue_setValue" "', argument " "1"" of type '" "UMS_Data::OptionValue *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OptionValue_setValue" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptionValue_setValue" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setValue((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:OptionValue_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue_eGet" "', argument " "1"" of type '" "UMS_Data::OptionValue *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OptionValue_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OptionValue_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:OptionValue_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue_eSet" "', argument " "1"" of type '" "UMS_Data::OptionValue *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OptionValue_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OptionValue_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OptionValue_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:OptionValue_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue_eIsSet" "', argument " "1"" of type '" "UMS_Data::OptionValue *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OptionValue_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:OptionValue_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue_eUnset" "', argument " "1"" of type '" "UMS_Data::OptionValue *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OptionValue_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OptionValue__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::OptionValue *arg1 = (UMS_Data::OptionValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OptionValue__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__OptionValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OptionValue__eClass" "', argument " "1"" of type '" "UMS_Data::OptionValue *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::OptionValue * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OptionValue_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__OptionValue, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ListOptOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ListOptOptions")) SWIG_fail;
  result = (UMS_Data::ListOptOptions *)new UMS_Data::ListOptOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__ListOptOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListOptOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListOptOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListOptOptions" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListOptOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions__initialize" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_isListAllDeftValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListOptOptions_isListAllDeftValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_isListAllDeftValue" "', argument " "1"" of type '" "UMS_Data::ListOptOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  result = (::ecore::EBoolean)((UMS_Data::ListOptOptions const *)arg1)->isListAllDeftValue();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_setListAllDeftValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_listAllDeftValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListOptOptions_setListAllDeftValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_setListAllDeftValue" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListOptOptions_setListAllDeftValue" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setListAllDeftValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListOptOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_getUserId" "', argument " "1"" of type '" "UMS_Data::ListOptOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListOptOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListOptOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_setUserId" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListOptOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListOptOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_getOptionName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListOptOptions_getOptionName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_getOptionName" "', argument " "1"" of type '" "UMS_Data::ListOptOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListOptOptions const *)arg1)->getOptionName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_setOptionName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_optionName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListOptOptions_setOptionName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_setOptionName" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListOptOptions_setOptionName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListOptOptions_setOptionName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOptionName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListOptOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_eGet" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListOptOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ListOptOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListOptOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_eSet" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListOptOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ListOptOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListOptOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListOptOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_eIsSet" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListOptOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListOptOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions_eUnset" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListOptOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListOptOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListOptOptions *arg1 = (UMS_Data::ListOptOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListOptOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListOptOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListOptOptions__eClass" "', argument " "1"" of type '" "UMS_Data::ListOptOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListOptOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__ListOptOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AuthAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AuthAccount")) SWIG_fail;
  result = (UMS_Data::AuthAccount *)new UMS_Data::AuthAccount();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__AuthAccount, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AuthAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AuthAccount",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AuthAccount" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthAccount__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount__initialize" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_getAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthAccount_getAuthSystemId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_getAuthSystemId" "', argument " "1"" of type '" "UMS_Data::AuthAccount const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  result = (ecore::EString *) &((UMS_Data::AuthAccount const *)arg1)->getAuthSystemId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_setAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_authSystemId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthAccount_setAuthSystemId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_setAuthSystemId" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthAccount_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthAccount_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAuthSystemId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthAccount_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_getUserId" "', argument " "1"" of type '" "UMS_Data::AuthAccount const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  result = (ecore::EString *) &((UMS_Data::AuthAccount const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthAccount_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_setUserId" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthAccount_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthAccount_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_getAcLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthAccount_getAcLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_getAcLogin" "', argument " "1"" of type '" "UMS_Data::AuthAccount const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  result = (ecore::EString *) &((UMS_Data::AuthAccount const *)arg1)->getAcLogin();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_setAcLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_acLogin", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthAccount_setAcLogin",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_setAcLogin" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthAccount_setAcLogin" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthAccount_setAcLogin" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAcLogin((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:AuthAccount_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_eGet" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthAccount_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AuthAccount_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:AuthAccount_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_eSet" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthAccount_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AuthAccount_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthAccount_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthAccount_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_eIsSet" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthAccount_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthAccount_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount_eUnset" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthAccount_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthAccount__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthAccount *arg1 = (UMS_Data::AuthAccount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthAccount__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthAccount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthAccount__eClass" "', argument " "1"" of type '" "UMS_Data::AuthAccount *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthAccount * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AuthAccount_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__AuthAccount, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AuthSystem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AuthSystem")) SWIG_fail;
  result = (UMS_Data::AuthSystem *)new UMS_Data::AuthSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__AuthSystem, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AuthSystem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AuthSystem",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AuthSystem" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem__initialize" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_getAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem_getAuthSystemId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_getAuthSystemId" "', argument " "1"" of type '" "UMS_Data::AuthSystem const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (ecore::EString *) &((UMS_Data::AuthSystem const *)arg1)->getAuthSystemId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_setAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_authSystemId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_setAuthSystemId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_setAuthSystemId" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthSystem_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthSystem_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAuthSystemId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_getName" "', argument " "1"" of type '" "UMS_Data::AuthSystem const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (ecore::EString *) &((UMS_Data::AuthSystem const *)arg1)->getName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_setName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_setName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_setName" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthSystem_setName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthSystem_setName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_getURI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem_getURI",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_getURI" "', argument " "1"" of type '" "UMS_Data::AuthSystem const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (ecore::EString *) &((UMS_Data::AuthSystem const *)arg1)->getURI();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_setURI(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_URI", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_setURI",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_setURI" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthSystem_setURI" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthSystem_setURI" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setURI((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_getAuthLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem_getAuthLogin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_getAuthLogin" "', argument " "1"" of type '" "UMS_Data::AuthSystem const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (ecore::EString *) &((UMS_Data::AuthSystem const *)arg1)->getAuthLogin();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_setAuthLogin(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_authLogin", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_setAuthLogin",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_setAuthLogin" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthSystem_setAuthLogin" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthSystem_setAuthLogin" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAuthLogin((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_getAuthPassword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem_getAuthPassword",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_getAuthPassword" "', argument " "1"" of type '" "UMS_Data::AuthSystem const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (ecore::EString *) &((UMS_Data::AuthSystem const *)arg1)->getAuthPassword();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_setAuthPassword(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_authPassword", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_setAuthPassword",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_setAuthPassword" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthSystem_setAuthPassword" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthSystem_setAuthPassword" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAuthPassword((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_getUserPasswordEncryption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::EncryptionMethod result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem_getUserPasswordEncryption",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_getUserPasswordEncryption" "', argument " "1"" of type '" "UMS_Data::AuthSystem const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (::UMS_Data::EncryptionMethod)((UMS_Data::AuthSystem const *)arg1)->getUserPasswordEncryption();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_setUserPasswordEncryption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ::UMS_Data::EncryptionMethod arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userPasswordEncryption", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_setUserPasswordEncryption",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_setUserPasswordEncryption" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthSystem_setUserPasswordEncryption" "', argument " "2"" of type '" "::UMS_Data::EncryptionMethod""'");
  } 
  arg2 = static_cast< ::UMS_Data::EncryptionMethod >(val2);
  (arg1)->setUserPasswordEncryption(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_getType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::AuthType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem_getType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_getType" "', argument " "1"" of type '" "UMS_Data::AuthSystem const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (::UMS_Data::AuthType)((UMS_Data::AuthSystem const *)arg1)->getType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_setType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ::UMS_Data::AuthType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_setType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_setType" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthSystem_setType" "', argument " "2"" of type '" "::UMS_Data::AuthType""'");
  } 
  arg2 = static_cast< ::UMS_Data::AuthType >(val2);
  (arg1)->setType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::UMS_Data::StatusType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_getStatus" "', argument " "1"" of type '" "UMS_Data::AuthSystem const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (::UMS_Data::StatusType)((UMS_Data::AuthSystem const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ::UMS_Data::StatusType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_setStatus" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthSystem_setStatus" "', argument " "2"" of type '" "::UMS_Data::StatusType""'");
  } 
  arg2 = static_cast< ::UMS_Data::StatusType >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_getLdapBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem_getLdapBase",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_getLdapBase" "', argument " "1"" of type '" "UMS_Data::AuthSystem const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (ecore::EString *) &((UMS_Data::AuthSystem const *)arg1)->getLdapBase();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_setLdapBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_ldapBase", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_setLdapBase",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_setLdapBase" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthSystem_setLdapBase" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthSystem_setLdapBase" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setLdapBase((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:AuthSystem_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_eGet" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthSystem_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AuthSystem_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:AuthSystem_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_eSet" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthSystem_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AuthSystem_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthSystem_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_eIsSet" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthSystem_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AuthSystem_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem_eUnset" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthSystem_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthSystem__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::AuthSystem *arg1 = (UMS_Data::AuthSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthSystem__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__AuthSystem, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthSystem__eClass" "', argument " "1"" of type '" "UMS_Data::AuthSystem *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::AuthSystem * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AuthSystem_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__AuthSystem, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ListAuthSysOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ListAuthSysOptions")) SWIG_fail;
  result = (UMS_Data::ListAuthSysOptions *)new UMS_Data::ListAuthSysOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__ListAuthSysOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListAuthSysOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListAuthSysOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListAuthSysOptions" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthSysOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions__initialize" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_isListAllAuthSystems(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthSysOptions_isListAllAuthSystems",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_isListAllAuthSystems" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  result = (::ecore::EBoolean)((UMS_Data::ListAuthSysOptions const *)arg1)->isListAllAuthSystems();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_setListAllAuthSystems(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_listAllAuthSystems", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthSysOptions_setListAllAuthSystems",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_setListAllAuthSystems" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthSysOptions_setListAllAuthSystems" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setListAllAuthSystems(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_isListFullInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthSysOptions_isListFullInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_isListFullInfo" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  result = (::ecore::EBoolean)((UMS_Data::ListAuthSysOptions const *)arg1)->isListFullInfo();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_setListFullInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_listFullInfo", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthSysOptions_setListFullInfo",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_setListFullInfo" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthSysOptions_setListFullInfo" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setListFullInfo(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthSysOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_getUserId" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListAuthSysOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthSysOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_setUserId" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListAuthSysOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListAuthSysOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_getAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthSysOptions_getAuthSystemId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_getAuthSystemId" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListAuthSysOptions const *)arg1)->getAuthSystemId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_setAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_authSystemId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthSysOptions_setAuthSystemId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_setAuthSystemId" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListAuthSysOptions_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListAuthSysOptions_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAuthSystemId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListAuthSysOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_eGet" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthSysOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ListAuthSysOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListAuthSysOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_eSet" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthSysOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ListAuthSysOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListAuthSysOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthSysOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_eIsSet" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthSysOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthSysOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions_eUnset" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthSysOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthSysOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthSysOptions *arg1 = (UMS_Data::ListAuthSysOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthSysOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthSysOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthSysOptions__eClass" "', argument " "1"" of type '" "UMS_Data::ListAuthSysOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListAuthSysOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__ListAuthSysOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ListAuthAccOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ListAuthAccOptions")) SWIG_fail;
  result = (UMS_Data::ListAuthAccOptions *)new UMS_Data::ListAuthAccOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMS_Data__ListAuthAccOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListAuthAccOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListAuthAccOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListAuthAccOptions" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthAccOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions__initialize" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_isListAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthAccOptions_isListAll",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_isListAll" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  result = (::ecore::EBoolean)((UMS_Data::ListAuthAccOptions const *)arg1)->isListAll();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_setListAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_listAll", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthAccOptions_setListAll",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_setListAll" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthAccOptions_setListAll" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setListAll(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthAccOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_getUserId" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListAuthAccOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthAccOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_setUserId" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListAuthAccOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListAuthAccOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_getAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthAccOptions_getAuthSystemId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_getAuthSystemId" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions const *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  result = (ecore::EString *) &((UMS_Data::ListAuthAccOptions const *)arg1)->getAuthSystemId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_setAuthSystemId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_authSystemId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthAccOptions_setAuthSystemId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_setAuthSystemId" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListAuthAccOptions_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListAuthAccOptions_setAuthSystemId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setAuthSystemId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListAuthAccOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_eGet" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthAccOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ListAuthAccOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListAuthAccOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_eSet" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthAccOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ListAuthAccOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListAuthAccOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthAccOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_eIsSet" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthAccOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListAuthAccOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions_eUnset" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListAuthAccOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListAuthAccOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListAuthAccOptions *arg1 = (UMS_Data::ListAuthAccOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListAuthAccOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMS_Data__ListAuthAccOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListAuthAccOptions__eClass" "', argument " "1"" of type '" "UMS_Data::ListAuthAccOptions *""'"); 
  }
  arg1 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListAuthAccOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMS_Data__ListAuthAccOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Job(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Job")) SWIG_fail;
  result = (TMS_Data::Job *)new TMS_Data::Job();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__Job, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Job(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Job",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Job" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job__initialize" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getSessionId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getSessionId" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getSessionId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setSessionId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setSessionId" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSessionId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getSubmitMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getSubmitMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getSubmitMachineId" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getSubmitMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setSubmitMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_submitMachineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setSubmitMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setSubmitMachineId" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setSubmitMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setSubmitMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSubmitMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getSubmitMachineName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getSubmitMachineName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getSubmitMachineName" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getSubmitMachineName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setSubmitMachineName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_submitMachineName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setSubmitMachineName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setSubmitMachineName" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setSubmitMachineName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setSubmitMachineName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSubmitMachineName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getJobId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getJobId" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getJobId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setJobId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setJobId" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getJobName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getJobName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getJobName" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getJobName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setJobName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setJobName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setJobName" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setJobName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setJobName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getJobPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getJobPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getJobPath" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getJobPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setJobPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobPath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setJobPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setJobPath" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setJobPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setJobPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getOutputPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getOutputPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getOutputPath" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getOutputPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setOutputPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_outputPath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setOutputPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setOutputPath" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setOutputPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setOutputPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOutputPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getErrorPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getErrorPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getErrorPath" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getErrorPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setErrorPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_errorPath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setErrorPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setErrorPath" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setErrorPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setErrorPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setErrorPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getJobPrio(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::TMS_Data::JobPriority result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getJobPrio",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getJobPrio" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::TMS_Data::JobPriority)((TMS_Data::Job const *)arg1)->getJobPrio();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setJobPrio(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::TMS_Data::JobPriority arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobPrio", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setJobPrio",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setJobPrio" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_setJobPrio" "', argument " "2"" of type '" "::TMS_Data::JobPriority""'");
  } 
  arg2 = static_cast< ::TMS_Data::JobPriority >(val2);
  (arg1)->setJobPrio(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getNbCpus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getNbCpus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getNbCpus" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Job const *)arg1)->getNbCpus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setNbCpus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbCpus", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setNbCpus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setNbCpus" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_setNbCpus" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNbCpus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getJobWorkingDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getJobWorkingDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getJobWorkingDir" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getJobWorkingDir();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setJobWorkingDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobWorkingDir", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setJobWorkingDir",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setJobWorkingDir" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setJobWorkingDir" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setJobWorkingDir" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobWorkingDir((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::TMS_Data::JobStatus result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getStatus" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::TMS_Data::JobStatus)((TMS_Data::Job const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::TMS_Data::JobStatus arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setStatus" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_setStatus" "', argument " "2"" of type '" "::TMS_Data::JobStatus""'");
  } 
  arg2 = static_cast< ::TMS_Data::JobStatus >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getSubmitDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getSubmitDate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getSubmitDate" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Job const *)arg1)->getSubmitDate();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setSubmitDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_submitDate", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setSubmitDate",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setSubmitDate" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_setSubmitDate" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setSubmitDate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getEndDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getEndDate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getEndDate" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Job const *)arg1)->getEndDate();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setEndDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_endDate", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setEndDate",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setEndDate" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_setEndDate" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setEndDate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getOwner" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getOwner();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_owner", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setOwner",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setOwner" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOwner((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getJobQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getJobQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getJobQueue" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getJobQueue();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setJobQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobQueue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setJobQueue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setJobQueue" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setJobQueue" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setJobQueue" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobQueue((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getWallClockLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getWallClockLimit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getWallClockLimit" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Job const *)arg1)->getWallClockLimit();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setWallClockLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_wallClockLimit", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setWallClockLimit",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setWallClockLimit" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_setWallClockLimit" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setWallClockLimit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getGroupName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getGroupName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getGroupName" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getGroupName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setGroupName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_groupName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setGroupName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setGroupName" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setGroupName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setGroupName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setGroupName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getJobDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getJobDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getJobDescription" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getJobDescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setJobDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobDescription", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setJobDescription",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setJobDescription" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setJobDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setJobDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobDescription((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getMemLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getMemLimit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getMemLimit" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Job const *)arg1)->getMemLimit();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setMemLimit(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_memLimit", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setMemLimit",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setMemLimit" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_setMemLimit" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setMemLimit(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getNbNodes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getNbNodes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getNbNodes" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Job const *)arg1)->getNbNodes();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setNbNodes(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbNodes", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setNbNodes",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setNbNodes" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_setNbNodes" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNbNodes(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getNbNodesAndCpuPerNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getNbNodesAndCpuPerNode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getNbNodesAndCpuPerNode" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getNbNodesAndCpuPerNode();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setNbNodesAndCpuPerNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbNodesAndCpuPerNode", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setNbNodesAndCpuPerNode",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setNbNodesAndCpuPerNode" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setNbNodesAndCpuPerNode" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setNbNodesAndCpuPerNode" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setNbNodesAndCpuPerNode((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getBatchJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getBatchJobId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getBatchJobId" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getBatchJobId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setBatchJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_batchJobId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setBatchJobId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setBatchJobId" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setBatchJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setBatchJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setBatchJobId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getOutputDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getOutputDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getOutputDir" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getOutputDir();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setOutputDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_outputDir", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setOutputDir",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setOutputDir" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setOutputDir" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setOutputDir" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOutputDir((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getWorkId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getWorkId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getWorkId" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Job const *)arg1)->getWorkId();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setWorkId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_workId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setWorkId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setWorkId" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_setWorkId" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setWorkId(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_getUserId" "', argument " "1"" of type '" "TMS_Data::Job const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Job const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_setUserId" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Job_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Job_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_eGet" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Job_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Job_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_eSet" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Job_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Job_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_eIsSet" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Job_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job_eUnset" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Job_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Job__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Job *arg1 = (TMS_Data::Job *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Job__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Job, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Job__eClass" "', argument " "1"" of type '" "TMS_Data::Job *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Job * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Job_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__Job, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_JobResult(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_JobResult")) SWIG_fail;
  result = (TMS_Data::JobResult *)new TMS_Data::JobResult();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__JobResult, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_JobResult(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_JobResult",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_JobResult" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JobResult__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult__initialize" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_getJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JobResult_getJobId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_getJobId" "', argument " "1"" of type '" "TMS_Data::JobResult const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  result = (ecore::EString *) &((TMS_Data::JobResult const *)arg1)->getJobId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_setJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:JobResult_setJobId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_setJobId" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JobResult_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JobResult_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_getOutputPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JobResult_getOutputPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_getOutputPath" "', argument " "1"" of type '" "TMS_Data::JobResult const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  result = (ecore::EString *) &((TMS_Data::JobResult const *)arg1)->getOutputPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_setOutputPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_outputPath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:JobResult_setOutputPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_setOutputPath" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JobResult_setOutputPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JobResult_setOutputPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOutputPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_getErrorPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JobResult_getErrorPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_getErrorPath" "', argument " "1"" of type '" "TMS_Data::JobResult const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  result = (ecore::EString *) &((TMS_Data::JobResult const *)arg1)->getErrorPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_setErrorPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_errorPath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:JobResult_setErrorPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_setErrorPath" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JobResult_setErrorPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JobResult_setErrorPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setErrorPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_getOutputDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JobResult_getOutputDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_getOutputDir" "', argument " "1"" of type '" "TMS_Data::JobResult const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  result = (ecore::EString *) &((TMS_Data::JobResult const *)arg1)->getOutputDir();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_setOutputDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_outputDir", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:JobResult_setOutputDir",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_setOutputDir" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JobResult_setOutputDir" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JobResult_setOutputDir" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOutputDir((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:JobResult_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_eGet" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JobResult_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "JobResult_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:JobResult_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_eSet" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JobResult_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "JobResult_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JobResult_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:JobResult_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_eIsSet" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JobResult_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:JobResult_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult_eUnset" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JobResult_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JobResult__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::JobResult *arg1 = (TMS_Data::JobResult *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JobResult__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__JobResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JobResult__eClass" "', argument " "1"" of type '" "TMS_Data::JobResult *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::JobResult * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *JobResult_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__JobResult, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ListJobsOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ListJobsOptions")) SWIG_fail;
  result = (TMS_Data::ListJobsOptions *)new TMS_Data::ListJobsOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__ListJobsOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListJobsOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListJobsOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListJobsOptions" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions__initialize" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getJobId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getJobId" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::ListJobsOptions const *)arg1)->getJobId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setJobId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setJobId" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListJobsOptions_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListJobsOptions_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getNbCpu(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getNbCpu",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getNbCpu" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (::ecore::EInt)((TMS_Data::ListJobsOptions const *)arg1)->getNbCpu();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setNbCpu(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbCpu", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setNbCpu",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setNbCpu" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_setNbCpu" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNbCpu(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getFromSubmitDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getFromSubmitDate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getFromSubmitDate" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (::ecore::ELong)((TMS_Data::ListJobsOptions const *)arg1)->getFromSubmitDate();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setFromSubmitDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_fromSubmitDate", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setFromSubmitDate",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setFromSubmitDate" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_setFromSubmitDate" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setFromSubmitDate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getToSubmitDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getToSubmitDate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getToSubmitDate" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (::ecore::ELong)((TMS_Data::ListJobsOptions const *)arg1)->getToSubmitDate();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setToSubmitDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_toSubmitDate", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setToSubmitDate",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setToSubmitDate" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_setToSubmitDate" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setToSubmitDate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getOwner" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::ListJobsOptions const *)arg1)->getOwner();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_owner", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setOwner",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setOwner" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListJobsOptions_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListJobsOptions_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOwner((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::TMS_Data::JobStatus result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getStatus" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (::TMS_Data::JobStatus)((TMS_Data::ListJobsOptions const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::TMS_Data::JobStatus arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setStatus" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_setStatus" "', argument " "2"" of type '" "::TMS_Data::JobStatus""'");
  } 
  arg2 = static_cast< ::TMS_Data::JobStatus >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::TMS_Data::JobPriority result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getPriority",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getPriority" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (::TMS_Data::JobPriority)((TMS_Data::ListJobsOptions const *)arg1)->getPriority();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::TMS_Data::JobPriority arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_priority", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setPriority",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setPriority" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_setPriority" "', argument " "2"" of type '" "::TMS_Data::JobPriority""'");
  } 
  arg2 = static_cast< ::TMS_Data::JobPriority >(val2);
  (arg1)->setPriority(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getQueue" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::ListJobsOptions const *)arg1)->getQueue();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_queue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setQueue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setQueue" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListJobsOptions_setQueue" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListJobsOptions_setQueue" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setQueue((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getMultipleStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getMultipleStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getMultipleStatus" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::ListJobsOptions const *)arg1)->getMultipleStatus();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setMultipleStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_multipleStatus", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setMultipleStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setMultipleStatus" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListJobsOptions_setMultipleStatus" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListJobsOptions_setMultipleStatus" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMultipleStatus((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_isBatchJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_isBatchJob",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_isBatchJob" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (::ecore::EBoolean)((TMS_Data::ListJobsOptions const *)arg1)->isBatchJob();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setBatchJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_batchJob", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setBatchJob",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setBatchJob" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_setBatchJob" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setBatchJob(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_getWorkId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_getWorkId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_getWorkId" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (::ecore::ELong)((TMS_Data::ListJobsOptions const *)arg1)->getWorkId();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setWorkId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_workId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setWorkId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setWorkId" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_setWorkId" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setWorkId(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_isListAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions_isListAll",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_isListAll" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (::ecore::EBoolean)((TMS_Data::ListJobsOptions const *)arg1)->isListAll();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_setListAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_listAll", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_setListAll",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_setListAll" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_setListAll" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setListAll(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListJobsOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_eGet" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ListJobsOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ListJobsOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_eSet" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ListJobsOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListJobsOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_eIsSet" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ListJobsOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions_eUnset" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListJobsOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListJobsOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ListJobsOptions *arg1 = (TMS_Data::ListJobsOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListJobsOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ListJobsOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListJobsOptions__eClass" "', argument " "1"" of type '" "TMS_Data::ListJobsOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListJobsOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__ListJobsOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ProgressOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ProgressOptions")) SWIG_fail;
  result = (TMS_Data::ProgressOptions *)new TMS_Data::ProgressOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__ProgressOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ProgressOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ProgressOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ProgressOptions" "', argument " "1"" of type '" "TMS_Data::ProgressOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ProgressOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions__initialize" "', argument " "1"" of type '" "TMS_Data::ProgressOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions_getJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ProgressOptions_getJobId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions_getJobId" "', argument " "1"" of type '" "TMS_Data::ProgressOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::ProgressOptions const *)arg1)->getJobId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions_setJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ProgressOptions_setJobId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions_setJobId" "', argument " "1"" of type '" "TMS_Data::ProgressOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressOptions_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressOptions_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions_getJobOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ProgressOptions_getJobOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions_getJobOwner" "', argument " "1"" of type '" "TMS_Data::ProgressOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::ProgressOptions const *)arg1)->getJobOwner();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions_setJobOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobOwner", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ProgressOptions_setJobOwner",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions_setJobOwner" "', argument " "1"" of type '" "TMS_Data::ProgressOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProgressOptions_setJobOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressOptions_setJobOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobOwner((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ProgressOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions_eGet" "', argument " "1"" of type '" "TMS_Data::ProgressOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProgressOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ProgressOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ProgressOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions_eSet" "', argument " "1"" of type '" "TMS_Data::ProgressOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProgressOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ProgressOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProgressOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ProgressOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions_eIsSet" "', argument " "1"" of type '" "TMS_Data::ProgressOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProgressOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ProgressOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions_eUnset" "', argument " "1"" of type '" "TMS_Data::ProgressOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProgressOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProgressOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::ProgressOptions *arg1 = (TMS_Data::ProgressOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ProgressOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__ProgressOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProgressOptions__eClass" "', argument " "1"" of type '" "TMS_Data::ProgressOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ProgressOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__ProgressOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Progression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Progression")) SWIG_fail;
  result = (TMS_Data::Progression *)new TMS_Data::Progression();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__Progression, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Progression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Progression",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Progression" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Progression__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression__initialize" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_getJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Progression_getJobId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_getJobId" "', argument " "1"" of type '" "TMS_Data::Progression const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Progression const *)arg1)->getJobId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_setJobId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Progression_setJobId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_setJobId" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Progression_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Progression_setJobId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_getJobName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Progression_getJobName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_getJobName" "', argument " "1"" of type '" "TMS_Data::Progression const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Progression const *)arg1)->getJobName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_setJobName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_jobName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Progression_setJobName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_setJobName" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Progression_setJobName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Progression_setJobName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setJobName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_getWallTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Progression_getWallTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_getWallTime" "', argument " "1"" of type '" "TMS_Data::Progression const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Progression const *)arg1)->getWallTime();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_setWallTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_wallTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Progression_setWallTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_setWallTime" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Progression_setWallTime" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setWallTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_getStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Progression_getStartTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_getStartTime" "', argument " "1"" of type '" "TMS_Data::Progression const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Progression const *)arg1)->getStartTime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_setStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_startTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Progression_setStartTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_setStartTime" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Progression_setStartTime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setStartTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_getEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Progression_getEndTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_getEndTime" "', argument " "1"" of type '" "TMS_Data::Progression const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Progression const *)arg1)->getEndTime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_setEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_endTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Progression_setEndTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_setEndTime" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Progression_setEndTime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setEndTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_getPercent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Progression_getPercent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_getPercent" "', argument " "1"" of type '" "TMS_Data::Progression const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Progression const *)arg1)->getPercent();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_setPercent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_percent", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Progression_setPercent",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_setPercent" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Progression_setPercent" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setPercent(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::TMS_Data::JobStatus result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Progression_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_getStatus" "', argument " "1"" of type '" "TMS_Data::Progression const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  result = (::TMS_Data::JobStatus)((TMS_Data::Progression const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ::TMS_Data::JobStatus arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Progression_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_setStatus" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Progression_setStatus" "', argument " "2"" of type '" "::TMS_Data::JobStatus""'");
  } 
  arg2 = static_cast< ::TMS_Data::JobStatus >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Progression_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_eGet" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Progression_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Progression_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Progression_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_eSet" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Progression_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Progression_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Progression_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Progression_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_eIsSet" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Progression_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Progression_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression_eUnset" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Progression_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Progression__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Progression *arg1 = (TMS_Data::Progression *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Progression__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Progression, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Progression__eClass" "', argument " "1"" of type '" "TMS_Data::Progression *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Progression * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Progression_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__Progression, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Queue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Queue")) SWIG_fail;
  result = (TMS_Data::Queue *)new TMS_Data::Queue();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__Queue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Queue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Queue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Queue" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue__initialize" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getName" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Queue const *)arg1)->getName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setName" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Queue_setName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Queue_setName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getMaxJobCpu(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getMaxJobCpu",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getMaxJobCpu" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Queue const *)arg1)->getMaxJobCpu();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setMaxJobCpu(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_maxJobCpu", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setMaxJobCpu",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setMaxJobCpu" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_setMaxJobCpu" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setMaxJobCpu(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getMaxProcCpu(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getMaxProcCpu",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getMaxProcCpu" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Queue const *)arg1)->getMaxProcCpu();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setMaxProcCpu(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_maxProcCpu", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setMaxProcCpu",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setMaxProcCpu" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_setMaxProcCpu" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setMaxProcCpu(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getMemory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getMemory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getMemory" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Queue const *)arg1)->getMemory();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setMemory(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_memory", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setMemory",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setMemory" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_setMemory" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setMemory(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getWallTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getWallTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getWallTime" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Queue const *)arg1)->getWallTime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setWallTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_wallTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setWallTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setWallTime" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_setWallTime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setWallTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getNode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getNode" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Queue const *)arg1)->getNode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_node", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setNode",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setNode" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_setNode" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getNbRunningJobs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getNbRunningJobs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getNbRunningJobs" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Queue const *)arg1)->getNbRunningJobs();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setNbRunningJobs(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbRunningJobs", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setNbRunningJobs",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setNbRunningJobs" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_setNbRunningJobs" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNbRunningJobs(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getNbJobsInQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getNbJobsInQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getNbJobsInQueue" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Queue const *)arg1)->getNbJobsInQueue();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setNbJobsInQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbJobsInQueue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setNbJobsInQueue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setNbJobsInQueue" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_setNbJobsInQueue" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNbJobsInQueue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::TMS_Data::QueueStatus result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getState" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::TMS_Data::QueueStatus)((TMS_Data::Queue const *)arg1)->getState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setState(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::TMS_Data::QueueStatus arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_state", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setState",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setState" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_setState" "', argument " "2"" of type '" "::TMS_Data::QueueStatus""'");
  } 
  arg2 = static_cast< ::TMS_Data::QueueStatus >(val2);
  (arg1)->setState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::TMS_Data::QueuePriority result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getPriority",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getPriority" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::TMS_Data::QueuePriority)((TMS_Data::Queue const *)arg1)->getPriority();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::TMS_Data::QueuePriority arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_priority", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setPriority",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setPriority" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_setPriority" "', argument " "2"" of type '" "::TMS_Data::QueuePriority""'");
  } 
  arg2 = static_cast< ::TMS_Data::QueuePriority >(val2);
  (arg1)->setPriority(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_getDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue_getDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_getDescription" "', argument " "1"" of type '" "TMS_Data::Queue const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Queue const *)arg1)->getDescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_setDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_description", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_setDescription",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_setDescription" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Queue_setDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Queue_setDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setDescription((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Queue_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_eGet" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Queue_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Queue_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_eSet" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Queue_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Queue_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_eIsSet" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Queue_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue_eUnset" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Queue_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Queue__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Queue *arg1 = (TMS_Data::Queue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Queue__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Queue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Queue__eClass" "', argument " "1"" of type '" "TMS_Data::Queue *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Queue * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Queue_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__Queue, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SubmitOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SubmitOptions")) SWIG_fail;
  result = (TMS_Data::SubmitOptions *)new TMS_Data::SubmitOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__SubmitOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SubmitOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SubmitOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SubmitOptions" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions__initialize" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getName" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setName" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getQueue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getQueue" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getQueue();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setQueue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_queue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setQueue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setQueue" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setQueue" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setQueue" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setQueue((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getWallTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getWallTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getWallTime" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (::ecore::EInt)((TMS_Data::SubmitOptions const *)arg1)->getWallTime();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setWallTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_wallTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setWallTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setWallTime" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubmitOptions_setWallTime" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setWallTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getMemory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getMemory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getMemory" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (::ecore::EInt)((TMS_Data::SubmitOptions const *)arg1)->getMemory();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setMemory(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_memory", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setMemory",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setMemory" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubmitOptions_setMemory" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setMemory(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getNbCpu(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getNbCpu",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getNbCpu" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (::ecore::EInt)((TMS_Data::SubmitOptions const *)arg1)->getNbCpu();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setNbCpu(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbCpu", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setNbCpu",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setNbCpu" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubmitOptions_setNbCpu" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNbCpu(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getNbNodesAndCpuPerNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getNbNodesAndCpuPerNode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getNbNodesAndCpuPerNode" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getNbNodesAndCpuPerNode();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setNbNodesAndCpuPerNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbNodesAndCpuPerNode", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setNbNodesAndCpuPerNode",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setNbNodesAndCpuPerNode" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setNbNodesAndCpuPerNode" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setNbNodesAndCpuPerNode" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setNbNodesAndCpuPerNode((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getOutputPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getOutputPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getOutputPath" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getOutputPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setOutputPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_outputPath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setOutputPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setOutputPath" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setOutputPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setOutputPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOutputPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getErrorPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getErrorPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getErrorPath" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getErrorPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setErrorPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_errorPath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setErrorPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setErrorPath" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setErrorPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setErrorPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setErrorPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getMailNotification(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getMailNotification",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getMailNotification" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getMailNotification();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setMailNotification(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_mailNotification", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setMailNotification",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setMailNotification" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setMailNotification" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setMailNotification" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMailNotification((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getMailNotifyUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getMailNotifyUser",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getMailNotifyUser" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getMailNotifyUser();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setMailNotifyUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_mailNotifyUser", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setMailNotifyUser",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setMailNotifyUser" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setMailNotifyUser" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setMailNotifyUser" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMailNotifyUser((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getGroup" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getGroup();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_group", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setGroup",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setGroup" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setGroup" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setGroup" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setGroup((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getWorkingDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getWorkingDir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getWorkingDir" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getWorkingDir();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setWorkingDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_workingDir", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setWorkingDir",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setWorkingDir" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setWorkingDir" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setWorkingDir" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setWorkingDir((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getCpuTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getCpuTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getCpuTime" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getCpuTime();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setCpuTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_cpuTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setCpuTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setCpuTime" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setCpuTime" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setCpuTime" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setCpuTime((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_isSelectQueueAutom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_isSelectQueueAutom",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_isSelectQueueAutom" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (::ecore::EBoolean)((TMS_Data::SubmitOptions const *)arg1)->isSelectQueueAutom();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setSelectQueueAutom(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_selectQueueAutom", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setSelectQueueAutom",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setSelectQueueAutom" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubmitOptions_setSelectQueueAutom" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setSelectQueueAutom(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getFileParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getFileParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getFileParams" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getFileParams();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setFileParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_fileParams", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setFileParams",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setFileParams" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setFileParams" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setFileParams" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setFileParams((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getTextParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getTextParams",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getTextParams" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::SubmitOptions const *)arg1)->getTextParams();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setTextParams(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_textParams", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setTextParams",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setTextParams" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setTextParams" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_setTextParams" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setTextParams((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getWorkId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getWorkId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getWorkId" "', argument " "1"" of type '" "TMS_Data::SubmitOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (::ecore::ELong)((TMS_Data::SubmitOptions const *)arg1)->getWorkId();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setWorkId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_workId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setWorkId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setWorkId" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubmitOptions_setWorkId" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setWorkId(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_getCriterion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::TMS_Data::LoadCriterion_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions_getCriterion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_getCriterion" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (::TMS_Data::LoadCriterion_ptr)(arg1)->getCriterion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_setCriterion(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::TMS_Data::LoadCriterion_ptr arg2 = (::TMS_Data::LoadCriterion_ptr) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_criterion", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_setCriterion",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_setCriterion" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SubmitOptions_setCriterion" "', argument " "2"" of type '" "::TMS_Data::LoadCriterion_ptr""'"); 
  }
  arg2 = reinterpret_cast< ::TMS_Data::LoadCriterion_ptr >(argp2);
  (arg1)->setCriterion(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:SubmitOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_eGet" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubmitOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SubmitOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:SubmitOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_eSet" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubmitOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SubmitOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SubmitOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_eIsSet" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubmitOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SubmitOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions_eUnset" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SubmitOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SubmitOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::SubmitOptions *arg1 = (TMS_Data::SubmitOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubmitOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__SubmitOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubmitOptions__eClass" "', argument " "1"" of type '" "TMS_Data::SubmitOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SubmitOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__SubmitOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LoadCriterion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_LoadCriterion")) SWIG_fail;
  result = (TMS_Data::LoadCriterion *)new TMS_Data::LoadCriterion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__LoadCriterion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LoadCriterion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *arg1 = (TMS_Data::LoadCriterion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LoadCriterion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__LoadCriterion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LoadCriterion" "', argument " "1"" of type '" "TMS_Data::LoadCriterion *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::LoadCriterion * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadCriterion__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *arg1 = (TMS_Data::LoadCriterion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LoadCriterion__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoadCriterion__initialize" "', argument " "1"" of type '" "TMS_Data::LoadCriterion *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::LoadCriterion * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadCriterion_getLoadType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *arg1 = (TMS_Data::LoadCriterion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::TMS_Data::LoadType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LoadCriterion_getLoadType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoadCriterion_getLoadType" "', argument " "1"" of type '" "TMS_Data::LoadCriterion const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::LoadCriterion * >(argp1);
  result = (::TMS_Data::LoadType)((TMS_Data::LoadCriterion const *)arg1)->getLoadType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadCriterion_setLoadType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *arg1 = (TMS_Data::LoadCriterion *) 0 ;
  ::TMS_Data::LoadType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_loadType", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LoadCriterion_setLoadType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoadCriterion_setLoadType" "', argument " "1"" of type '" "TMS_Data::LoadCriterion *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::LoadCriterion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LoadCriterion_setLoadType" "', argument " "2"" of type '" "::TMS_Data::LoadType""'");
  } 
  arg2 = static_cast< ::TMS_Data::LoadType >(val2);
  (arg1)->setLoadType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadCriterion_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *arg1 = (TMS_Data::LoadCriterion *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LoadCriterion_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoadCriterion_eGet" "', argument " "1"" of type '" "TMS_Data::LoadCriterion *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::LoadCriterion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LoadCriterion_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LoadCriterion_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadCriterion_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *arg1 = (TMS_Data::LoadCriterion *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LoadCriterion_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoadCriterion_eSet" "', argument " "1"" of type '" "TMS_Data::LoadCriterion *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::LoadCriterion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LoadCriterion_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LoadCriterion_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LoadCriterion_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadCriterion_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *arg1 = (TMS_Data::LoadCriterion *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LoadCriterion_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoadCriterion_eIsSet" "', argument " "1"" of type '" "TMS_Data::LoadCriterion *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::LoadCriterion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LoadCriterion_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadCriterion_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *arg1 = (TMS_Data::LoadCriterion *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LoadCriterion_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoadCriterion_eUnset" "', argument " "1"" of type '" "TMS_Data::LoadCriterion *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::LoadCriterion * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LoadCriterion_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LoadCriterion__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::LoadCriterion *arg1 = (TMS_Data::LoadCriterion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LoadCriterion__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__LoadCriterion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LoadCriterion__eClass" "', argument " "1"" of type '" "TMS_Data::LoadCriterion *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::LoadCriterion * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LoadCriterion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__LoadCriterion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Work(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Work")) SWIG_fail;
  result = (TMS_Data::Work *)new TMS_Data::Work();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__Work, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Work(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Work",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Work" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work__initialize" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getSessionId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getSessionId" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Work const *)arg1)->getSessionId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setSessionId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sessionId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setSessionId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setSessionId" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Work_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Work_setSessionId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSessionId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getApplicationId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getApplicationId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getApplicationId" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Work const *)arg1)->getApplicationId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setApplicationId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_applicationId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setApplicationId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setApplicationId" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Work_setApplicationId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Work_setApplicationId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setApplicationId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getSubject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getSubject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getSubject" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Work const *)arg1)->getSubject();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setSubject(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_subject", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setSubject",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setSubject" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Work_setSubject" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Work_setSubject" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSubject((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getPriority",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getPriority" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Work const *)arg1)->getPriority();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_priority", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setPriority",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setPriority" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setPriority" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setPriority(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getStatus" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Work const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setStatus" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setStatus" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getEndDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getEndDate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getEndDate" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Work const *)arg1)->getEndDate();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setEndDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_endDate", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setEndDate",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setEndDate" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setEndDate" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setEndDate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getOwner" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Work const *)arg1)->getOwner();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_owner", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setOwner",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setOwner" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Work_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Work_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOwner((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getEstimatedHour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getEstimatedHour",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getEstimatedHour" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Work const *)arg1)->getEstimatedHour();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setEstimatedHour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_estimatedHour", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setEstimatedHour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setEstimatedHour" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setEstimatedHour" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setEstimatedHour(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getDoneRatio(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getDoneRatio",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getDoneRatio" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Work const *)arg1)->getDoneRatio();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setDoneRatio(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_doneRatio", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setDoneRatio",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setDoneRatio" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setDoneRatio" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setDoneRatio(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getDescription" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Work const *)arg1)->getDescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_description", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setDescription",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setDescription" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Work_setDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Work_setDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setDescription((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getDateCreated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getDateCreated",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getDateCreated" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Work const *)arg1)->getDateCreated();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setDateCreated(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_dateCreated", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setDateCreated",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setDateCreated" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setDateCreated" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setDateCreated(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getDateEnded(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getDateEnded",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getDateEnded" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Work const *)arg1)->getDateEnded();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setDateEnded(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_dateEnded", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setDateEnded",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setDateEnded" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setDateEnded" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setDateEnded(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getDateStarted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getDateStarted",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getDateStarted" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Work const *)arg1)->getDateStarted();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setDateStarted(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_dateStarted", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setDateStarted",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setDateStarted" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setDateStarted" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setDateStarted(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getLastUpdated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getLastUpdated",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getLastUpdated" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Work const *)arg1)->getLastUpdated();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setLastUpdated(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_lastUpdated", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setLastUpdated",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setLastUpdated" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setLastUpdated" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setLastUpdated(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getWorkId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getWorkId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getWorkId" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Work const *)arg1)->getWorkId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setWorkId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_workId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setWorkId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setWorkId" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Work_setWorkId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Work_setWorkId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setWorkId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getProjectId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getProjectId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getProjectId" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Work const *)arg1)->getProjectId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setProjectId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_projectId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setProjectId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setProjectId" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Work_setProjectId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Work_setProjectId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setProjectId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getSubmitDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getSubmitDate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getSubmitDate" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Work const *)arg1)->getSubmitDate();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setSubmitDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_submitDate", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setSubmitDate",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setSubmitDate" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setSubmitDate" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setSubmitDate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getMachineId" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (ecore::EString *) &((TMS_Data::Work const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setMachineId" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Work_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Work_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getNbCPU(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getNbCPU",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getNbCPU" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::EInt)((TMS_Data::Work const *)arg1)->getNbCPU();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setNbCPU(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbCPU", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setNbCPU",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setNbCPU" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setNbCPU" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNbCPU(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_getDueDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work_getDueDate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_getDueDate" "', argument " "1"" of type '" "TMS_Data::Work const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::ELong)((TMS_Data::Work const *)arg1)->getDueDate();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_setDueDate(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_dueDate", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_setDueDate",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_setDueDate" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_setDueDate" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setDueDate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Work_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_eGet" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Work_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Work_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_eSet" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Work_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Work_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_eIsSet" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Work_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work_eUnset" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Work_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Work__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::Work *arg1 = (TMS_Data::Work *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Work__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__Work, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Work__eClass" "', argument " "1"" of type '" "TMS_Data::Work *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::Work * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Work_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__Work, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AddWorkOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AddWorkOptions")) SWIG_fail;
  result = (TMS_Data::AddWorkOptions *)new TMS_Data::AddWorkOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMS_Data__AddWorkOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AddWorkOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AddWorkOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AddWorkOptions" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions__initialize" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_getApplicationId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions_getApplicationId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_getApplicationId" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::AddWorkOptions const *)arg1)->getApplicationId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_setApplicationId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_applicationId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_setApplicationId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_setApplicationId" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AddWorkOptions_setApplicationId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AddWorkOptions_setApplicationId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setApplicationId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_getSubject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions_getSubject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_getSubject" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::AddWorkOptions const *)arg1)->getSubject();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_setSubject(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_subject", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_setSubject",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_setSubject" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AddWorkOptions_setSubject" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AddWorkOptions_setSubject" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSubject((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_getPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions_getPriority",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_getPriority" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (::ecore::EInt)((TMS_Data::AddWorkOptions const *)arg1)->getPriority();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_setPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_priority", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_setPriority",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_setPriority" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AddWorkOptions_setPriority" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setPriority(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_getOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions_getOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_getOwner" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::AddWorkOptions const *)arg1)->getOwner();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_setOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_owner", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_setOwner",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_setOwner" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AddWorkOptions_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AddWorkOptions_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOwner((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_getEstimatedHour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions_getEstimatedHour",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_getEstimatedHour" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (::ecore::ELong)((TMS_Data::AddWorkOptions const *)arg1)->getEstimatedHour();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_setEstimatedHour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_estimatedHour", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_setEstimatedHour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_setEstimatedHour" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AddWorkOptions_setEstimatedHour" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setEstimatedHour(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_getDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions_getDescription",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_getDescription" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::AddWorkOptions const *)arg1)->getDescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_setDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_description", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_setDescription",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_setDescription" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AddWorkOptions_setDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AddWorkOptions_setDescription" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setDescription((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_getProjectId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions_getProjectId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_getProjectId" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::AddWorkOptions const *)arg1)->getProjectId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_setProjectId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_projectId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_setProjectId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_setProjectId" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AddWorkOptions_setProjectId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AddWorkOptions_setProjectId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setProjectId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_getMachineId" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (ecore::EString *) &((TMS_Data::AddWorkOptions const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_setMachineId" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AddWorkOptions_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AddWorkOptions_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_getNbCPU(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions_getNbCPU",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_getNbCPU" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions const *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (::ecore::EInt)((TMS_Data::AddWorkOptions const *)arg1)->getNbCPU();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_setNbCPU(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nbCPU", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_setNbCPU",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_setNbCPU" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AddWorkOptions_setNbCPU" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNbCPU(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:AddWorkOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_eGet" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AddWorkOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AddWorkOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:AddWorkOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_eSet" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AddWorkOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AddWorkOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AddWorkOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_eIsSet" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AddWorkOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:AddWorkOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions_eUnset" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AddWorkOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AddWorkOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMS_Data::AddWorkOptions *arg1 = (TMS_Data::AddWorkOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AddWorkOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMS_Data__AddWorkOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AddWorkOptions__eClass" "', argument " "1"" of type '" "TMS_Data::AddWorkOptions *""'"); 
  }
  arg1 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AddWorkOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMS_Data__AddWorkOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ExportOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ExportOp")) SWIG_fail;
  result = (IMS_Data::ExportOp *)new IMS_Data::ExportOp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__ExportOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ExportOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *arg1 = (IMS_Data::ExportOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ExportOp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ExportOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ExportOp" "', argument " "1"" of type '" "IMS_Data::ExportOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ExportOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExportOp__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *arg1 = (IMS_Data::ExportOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ExportOp__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ExportOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExportOp__initialize" "', argument " "1"" of type '" "IMS_Data::ExportOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ExportOp * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExportOp_getExportType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *arg1 = (IMS_Data::ExportOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::IMS_Data::ExportType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ExportOp_getExportType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ExportOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExportOp_getExportType" "', argument " "1"" of type '" "IMS_Data::ExportOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ExportOp * >(argp1);
  result = (::IMS_Data::ExportType)((IMS_Data::ExportOp const *)arg1)->getExportType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExportOp_setExportType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *arg1 = (IMS_Data::ExportOp *) 0 ;
  ::IMS_Data::ExportType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_exportType", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ExportOp_setExportType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ExportOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExportOp_setExportType" "', argument " "1"" of type '" "IMS_Data::ExportOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ExportOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExportOp_setExportType" "', argument " "2"" of type '" "::IMS_Data::ExportType""'");
  } 
  arg2 = static_cast< ::IMS_Data::ExportType >(val2);
  (arg1)->setExportType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExportOp_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *arg1 = (IMS_Data::ExportOp *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ExportOp_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ExportOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExportOp_eGet" "', argument " "1"" of type '" "IMS_Data::ExportOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ExportOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExportOp_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ExportOp_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExportOp_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *arg1 = (IMS_Data::ExportOp *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ExportOp_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ExportOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExportOp_eSet" "', argument " "1"" of type '" "IMS_Data::ExportOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ExportOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExportOp_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ExportOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ExportOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExportOp_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *arg1 = (IMS_Data::ExportOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ExportOp_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ExportOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExportOp_eIsSet" "', argument " "1"" of type '" "IMS_Data::ExportOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ExportOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExportOp_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExportOp_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *arg1 = (IMS_Data::ExportOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ExportOp_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ExportOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExportOp_eUnset" "', argument " "1"" of type '" "IMS_Data::ExportOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ExportOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExportOp_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExportOp__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ExportOp *arg1 = (IMS_Data::ExportOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ExportOp__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ExportOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExportOp__eClass" "', argument " "1"" of type '" "IMS_Data::ExportOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ExportOp * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ExportOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__ExportOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CurMetricOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CurMetricOp")) SWIG_fail;
  result = (IMS_Data::CurMetricOp *)new IMS_Data::CurMetricOp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__CurMetricOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CurMetricOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *arg1 = (IMS_Data::CurMetricOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CurMetricOp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__CurMetricOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CurMetricOp" "', argument " "1"" of type '" "IMS_Data::CurMetricOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::CurMetricOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurMetricOp__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *arg1 = (IMS_Data::CurMetricOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CurMetricOp__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__CurMetricOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurMetricOp__initialize" "', argument " "1"" of type '" "IMS_Data::CurMetricOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::CurMetricOp * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurMetricOp_getMetricType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *arg1 = (IMS_Data::CurMetricOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::IMS_Data::MetricType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CurMetricOp_getMetricType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__CurMetricOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurMetricOp_getMetricType" "', argument " "1"" of type '" "IMS_Data::CurMetricOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::CurMetricOp * >(argp1);
  result = (::IMS_Data::MetricType)((IMS_Data::CurMetricOp const *)arg1)->getMetricType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurMetricOp_setMetricType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *arg1 = (IMS_Data::CurMetricOp *) 0 ;
  ::IMS_Data::MetricType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_metricType", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CurMetricOp_setMetricType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__CurMetricOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurMetricOp_setMetricType" "', argument " "1"" of type '" "IMS_Data::CurMetricOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::CurMetricOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CurMetricOp_setMetricType" "', argument " "2"" of type '" "::IMS_Data::MetricType""'");
  } 
  arg2 = static_cast< ::IMS_Data::MetricType >(val2);
  (arg1)->setMetricType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurMetricOp_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *arg1 = (IMS_Data::CurMetricOp *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CurMetricOp_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__CurMetricOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurMetricOp_eGet" "', argument " "1"" of type '" "IMS_Data::CurMetricOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::CurMetricOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CurMetricOp_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CurMetricOp_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurMetricOp_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *arg1 = (IMS_Data::CurMetricOp *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CurMetricOp_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__CurMetricOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurMetricOp_eSet" "', argument " "1"" of type '" "IMS_Data::CurMetricOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::CurMetricOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CurMetricOp_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurMetricOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurMetricOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurMetricOp_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *arg1 = (IMS_Data::CurMetricOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CurMetricOp_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__CurMetricOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurMetricOp_eIsSet" "', argument " "1"" of type '" "IMS_Data::CurMetricOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::CurMetricOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CurMetricOp_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurMetricOp_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *arg1 = (IMS_Data::CurMetricOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CurMetricOp_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__CurMetricOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurMetricOp_eUnset" "', argument " "1"" of type '" "IMS_Data::CurMetricOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::CurMetricOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CurMetricOp_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurMetricOp__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::CurMetricOp *arg1 = (IMS_Data::CurMetricOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CurMetricOp__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__CurMetricOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurMetricOp__eClass" "', argument " "1"" of type '" "IMS_Data::CurMetricOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::CurMetricOp * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CurMetricOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__CurMetricOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Metric(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Metric")) SWIG_fail;
  result = (IMS_Data::Metric *)new IMS_Data::Metric();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__Metric, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Metric(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Metric",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Metric" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Metric__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric__initialize" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_getType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::IMS_Data::MetricType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Metric_getType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_getType" "', argument " "1"" of type '" "IMS_Data::Metric const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  result = (::IMS_Data::MetricType)((IMS_Data::Metric const *)arg1)->getType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_setType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  ::IMS_Data::MetricType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Metric_setType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_setType" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Metric_setType" "', argument " "2"" of type '" "::IMS_Data::MetricType""'");
  } 
  arg2 = static_cast< ::IMS_Data::MetricType >(val2);
  (arg1)->setType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_getValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Metric_getValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_getValue" "', argument " "1"" of type '" "IMS_Data::Metric const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  result = (::ecore::ELong)((IMS_Data::Metric const *)arg1)->getValue();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_setValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Metric_setValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_setValue" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Metric_setValue" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_getTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Metric_getTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_getTime" "', argument " "1"" of type '" "IMS_Data::Metric const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  result = (::ecore::ELong)((IMS_Data::Metric const *)arg1)->getTime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_setTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_time", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Metric_setTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_setTime" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Metric_setTime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Metric_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_eGet" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Metric_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Metric_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Metric_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_eSet" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Metric_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Metric_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Metric_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Metric_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_eIsSet" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Metric_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Metric_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric_eUnset" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Metric_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Metric__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Metric *arg1 = (IMS_Data::Metric *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Metric__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Metric, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Metric__eClass" "', argument " "1"" of type '" "IMS_Data::Metric *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Metric * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Metric_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__Metric, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MetricHistOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MetricHistOp")) SWIG_fail;
  result = (IMS_Data::MetricHistOp *)new IMS_Data::MetricHistOp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__MetricHistOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MetricHistOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MetricHistOp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MetricHistOp" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MetricHistOp__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp__initialize" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_getStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MetricHistOp_getStartTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_getStartTime" "', argument " "1"" of type '" "IMS_Data::MetricHistOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  result = (::ecore::ELong)((IMS_Data::MetricHistOp const *)arg1)->getStartTime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_setStartTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_startTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MetricHistOp_setStartTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_setStartTime" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MetricHistOp_setStartTime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setStartTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_getEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MetricHistOp_getEndTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_getEndTime" "', argument " "1"" of type '" "IMS_Data::MetricHistOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  result = (::ecore::ELong)((IMS_Data::MetricHistOp const *)arg1)->getEndTime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_setEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_endTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MetricHistOp_setEndTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_setEndTime" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MetricHistOp_setEndTime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setEndTime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_getType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::IMS_Data::MetricType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MetricHistOp_getType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_getType" "', argument " "1"" of type '" "IMS_Data::MetricHistOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  result = (::IMS_Data::MetricType)((IMS_Data::MetricHistOp const *)arg1)->getType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_setType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  ::IMS_Data::MetricType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MetricHistOp_setType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_setType" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MetricHistOp_setType" "', argument " "2"" of type '" "::IMS_Data::MetricType""'");
  } 
  arg2 = static_cast< ::IMS_Data::MetricType >(val2);
  (arg1)->setType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MetricHistOp_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_eGet" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MetricHistOp_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MetricHistOp_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:MetricHistOp_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_eSet" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MetricHistOp_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MetricHistOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MetricHistOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MetricHistOp_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_eIsSet" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MetricHistOp_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:MetricHistOp_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp_eUnset" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MetricHistOp_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MetricHistOp__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::MetricHistOp *arg1 = (IMS_Data::MetricHistOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MetricHistOp__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__MetricHistOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MetricHistOp__eClass" "', argument " "1"" of type '" "IMS_Data::MetricHistOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::MetricHistOp * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MetricHistOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__MetricHistOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Process(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Process")) SWIG_fail;
  result = (IMS_Data::Process *)new IMS_Data::Process();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__Process, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Process(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Process",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Process" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Process__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process__initialize" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_getProcessName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Process_getProcessName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_getProcessName" "', argument " "1"" of type '" "IMS_Data::Process const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  result = (ecore::EString *) &((IMS_Data::Process const *)arg1)->getProcessName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_setProcessName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_processName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Process_setProcessName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_setProcessName" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Process_setProcessName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Process_setProcessName" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setProcessName((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Process_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_getMachineId" "', argument " "1"" of type '" "IMS_Data::Process const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  result = (ecore::EString *) &((IMS_Data::Process const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Process_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_setMachineId" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Process_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Process_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_getDietId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Process_getDietId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_getDietId" "', argument " "1"" of type '" "IMS_Data::Process const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  result = (ecore::EString *) &((IMS_Data::Process const *)arg1)->getDietId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_setDietId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_dietId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Process_setDietId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_setDietId" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Process_setDietId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Process_setDietId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setDietId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_getState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::IMS_Data::ProcessState result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Process_getState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_getState" "', argument " "1"" of type '" "IMS_Data::Process const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  result = (::IMS_Data::ProcessState)((IMS_Data::Process const *)arg1)->getState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_setState(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ::IMS_Data::ProcessState arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_state", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Process_setState",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_setState" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Process_setState" "', argument " "2"" of type '" "::IMS_Data::ProcessState""'");
  } 
  arg2 = static_cast< ::IMS_Data::ProcessState >(val2);
  (arg1)->setState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_getTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Process_getTimestamp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_getTimestamp" "', argument " "1"" of type '" "IMS_Data::Process const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  result = (::ecore::ELong)((IMS_Data::Process const *)arg1)->getTimestamp();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_setTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_timestamp", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Process_setTimestamp",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_setTimestamp" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Process_setTimestamp" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setTimestamp(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_getScript(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Process_getScript",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_getScript" "', argument " "1"" of type '" "IMS_Data::Process const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  result = (ecore::EString *) &((IMS_Data::Process const *)arg1)->getScript();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_setScript(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_script", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Process_setScript",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_setScript" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Process_setScript" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Process_setScript" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setScript((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Process_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_eGet" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Process_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Process_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Process_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_eSet" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Process_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Process_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Process_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Process_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_eIsSet" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Process_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Process_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process_eUnset" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Process_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Process__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Process *arg1 = (IMS_Data::Process *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Process__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Process, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Process__eClass" "', argument " "1"" of type '" "IMS_Data::Process *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Process * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Process_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__Process, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ProcessOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ProcessOp")) SWIG_fail;
  result = (IMS_Data::ProcessOp *)new IMS_Data::ProcessOp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__ProcessOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ProcessOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *arg1 = (IMS_Data::ProcessOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ProcessOp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ProcessOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ProcessOp" "', argument " "1"" of type '" "IMS_Data::ProcessOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ProcessOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProcessOp__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *arg1 = (IMS_Data::ProcessOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ProcessOp__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ProcessOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProcessOp__initialize" "', argument " "1"" of type '" "IMS_Data::ProcessOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ProcessOp * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProcessOp_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *arg1 = (IMS_Data::ProcessOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ProcessOp_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ProcessOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProcessOp_getMachineId" "', argument " "1"" of type '" "IMS_Data::ProcessOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ProcessOp * >(argp1);
  result = (ecore::EString *) &((IMS_Data::ProcessOp const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProcessOp_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *arg1 = (IMS_Data::ProcessOp *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ProcessOp_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ProcessOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProcessOp_setMachineId" "', argument " "1"" of type '" "IMS_Data::ProcessOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ProcessOp * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ProcessOp_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProcessOp_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProcessOp_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *arg1 = (IMS_Data::ProcessOp *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ProcessOp_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ProcessOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProcessOp_eGet" "', argument " "1"" of type '" "IMS_Data::ProcessOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ProcessOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProcessOp_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ProcessOp_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProcessOp_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *arg1 = (IMS_Data::ProcessOp *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ProcessOp_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ProcessOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProcessOp_eSet" "', argument " "1"" of type '" "IMS_Data::ProcessOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ProcessOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProcessOp_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ProcessOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ProcessOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProcessOp_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *arg1 = (IMS_Data::ProcessOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ProcessOp_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ProcessOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProcessOp_eIsSet" "', argument " "1"" of type '" "IMS_Data::ProcessOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ProcessOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProcessOp_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProcessOp_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *arg1 = (IMS_Data::ProcessOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ProcessOp_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ProcessOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProcessOp_eUnset" "', argument " "1"" of type '" "IMS_Data::ProcessOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ProcessOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ProcessOp_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ProcessOp__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ProcessOp *arg1 = (IMS_Data::ProcessOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ProcessOp__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ProcessOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ProcessOp__eClass" "', argument " "1"" of type '" "IMS_Data::ProcessOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ProcessOp * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ProcessOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__ProcessOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_RestartOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RestartOp")) SWIG_fail;
  result = (IMS_Data::RestartOp *)new IMS_Data::RestartOp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__RestartOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RestartOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RestartOp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RestartOp" "', argument " "1"" of type '" "IMS_Data::RestartOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RestartOp__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp__initialize" "', argument " "1"" of type '" "IMS_Data::RestartOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp_getVishnuConf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RestartOp_getVishnuConf",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp_getVishnuConf" "', argument " "1"" of type '" "IMS_Data::RestartOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  result = (ecore::EString *) &((IMS_Data::RestartOp const *)arg1)->getVishnuConf();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp_setVishnuConf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_vishnuConf", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RestartOp_setVishnuConf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp_setVishnuConf" "', argument " "1"" of type '" "IMS_Data::RestartOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RestartOp_setVishnuConf" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RestartOp_setVishnuConf" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setVishnuConf((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp_getSedType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::IMS_Data::SeDType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RestartOp_getSedType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp_getSedType" "', argument " "1"" of type '" "IMS_Data::RestartOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  result = (::IMS_Data::SeDType)((IMS_Data::RestartOp const *)arg1)->getSedType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp_setSedType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  ::IMS_Data::SeDType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sedType", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RestartOp_setSedType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp_setSedType" "', argument " "1"" of type '" "IMS_Data::RestartOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RestartOp_setSedType" "', argument " "2"" of type '" "::IMS_Data::SeDType""'");
  } 
  arg2 = static_cast< ::IMS_Data::SeDType >(val2);
  (arg1)->setSedType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:RestartOp_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp_eGet" "', argument " "1"" of type '" "IMS_Data::RestartOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RestartOp_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RestartOp_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:RestartOp_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp_eSet" "', argument " "1"" of type '" "IMS_Data::RestartOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RestartOp_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "RestartOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RestartOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RestartOp_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp_eIsSet" "', argument " "1"" of type '" "IMS_Data::RestartOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RestartOp_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RestartOp_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp_eUnset" "', argument " "1"" of type '" "IMS_Data::RestartOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RestartOp_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RestartOp__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::RestartOp *arg1 = (IMS_Data::RestartOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RestartOp__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__RestartOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RestartOp__eClass" "', argument " "1"" of type '" "IMS_Data::RestartOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::RestartOp * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RestartOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__RestartOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SysInfoOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SysInfoOp")) SWIG_fail;
  result = (IMS_Data::SysInfoOp *)new IMS_Data::SysInfoOp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__SysInfoOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SysInfoOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *arg1 = (IMS_Data::SysInfoOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SysInfoOp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SysInfoOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SysInfoOp" "', argument " "1"" of type '" "IMS_Data::SysInfoOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SysInfoOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysInfoOp__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *arg1 = (IMS_Data::SysInfoOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SysInfoOp__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SysInfoOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SysInfoOp__initialize" "', argument " "1"" of type '" "IMS_Data::SysInfoOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SysInfoOp * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysInfoOp_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *arg1 = (IMS_Data::SysInfoOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SysInfoOp_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SysInfoOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SysInfoOp_getMachineId" "', argument " "1"" of type '" "IMS_Data::SysInfoOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SysInfoOp * >(argp1);
  result = (ecore::EString *) &((IMS_Data::SysInfoOp const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysInfoOp_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *arg1 = (IMS_Data::SysInfoOp *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SysInfoOp_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SysInfoOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SysInfoOp_setMachineId" "', argument " "1"" of type '" "IMS_Data::SysInfoOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SysInfoOp * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SysInfoOp_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SysInfoOp_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysInfoOp_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *arg1 = (IMS_Data::SysInfoOp *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:SysInfoOp_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SysInfoOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SysInfoOp_eGet" "', argument " "1"" of type '" "IMS_Data::SysInfoOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SysInfoOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SysInfoOp_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SysInfoOp_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysInfoOp_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *arg1 = (IMS_Data::SysInfoOp *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:SysInfoOp_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SysInfoOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SysInfoOp_eSet" "', argument " "1"" of type '" "IMS_Data::SysInfoOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SysInfoOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SysInfoOp_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SysInfoOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SysInfoOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysInfoOp_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *arg1 = (IMS_Data::SysInfoOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SysInfoOp_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SysInfoOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SysInfoOp_eIsSet" "', argument " "1"" of type '" "IMS_Data::SysInfoOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SysInfoOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SysInfoOp_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysInfoOp_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *arg1 = (IMS_Data::SysInfoOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SysInfoOp_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SysInfoOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SysInfoOp_eUnset" "', argument " "1"" of type '" "IMS_Data::SysInfoOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SysInfoOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SysInfoOp_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SysInfoOp__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SysInfoOp *arg1 = (IMS_Data::SysInfoOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SysInfoOp__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SysInfoOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SysInfoOp__eClass" "', argument " "1"" of type '" "IMS_Data::SysInfoOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SysInfoOp * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SysInfoOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__SysInfoOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SystemInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SystemInfo")) SWIG_fail;
  result = (IMS_Data::SystemInfo *)new IMS_Data::SystemInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__SystemInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SystemInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SystemInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SystemInfo" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SystemInfo__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo__initialize" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_getMemory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SystemInfo_getMemory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_getMemory" "', argument " "1"" of type '" "IMS_Data::SystemInfo const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  result = (::ecore::ELong)((IMS_Data::SystemInfo const *)arg1)->getMemory();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_setMemory(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_memory", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SystemInfo_setMemory",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_setMemory" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SystemInfo_setMemory" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setMemory(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_getDiskSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SystemInfo_getDiskSpace",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_getDiskSpace" "', argument " "1"" of type '" "IMS_Data::SystemInfo const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  result = (::ecore::ELong)((IMS_Data::SystemInfo const *)arg1)->getDiskSpace();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_setDiskSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_diskSpace", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SystemInfo_setDiskSpace",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_setDiskSpace" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SystemInfo_setDiskSpace" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setDiskSpace(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SystemInfo_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_getMachineId" "', argument " "1"" of type '" "IMS_Data::SystemInfo const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  result = (ecore::EString *) &((IMS_Data::SystemInfo const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SystemInfo_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_setMachineId" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SystemInfo_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SystemInfo_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:SystemInfo_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_eGet" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SystemInfo_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SystemInfo_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:SystemInfo_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_eSet" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SystemInfo_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SystemInfo_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SystemInfo_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SystemInfo_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_eIsSet" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SystemInfo_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SystemInfo_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo_eUnset" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SystemInfo_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemInfo__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::SystemInfo *arg1 = (IMS_Data::SystemInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SystemInfo__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__SystemInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemInfo__eClass" "', argument " "1"" of type '" "IMS_Data::SystemInfo *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::SystemInfo * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SystemInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__SystemInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Threshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Threshold")) SWIG_fail;
  result = (IMS_Data::Threshold *)new IMS_Data::Threshold();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__Threshold, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Threshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Threshold",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Threshold" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Threshold__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold__initialize" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_getValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Threshold_getValue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_getValue" "', argument " "1"" of type '" "IMS_Data::Threshold const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  result = (::ecore::ELong)((IMS_Data::Threshold const *)arg1)->getValue();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_setValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Threshold_setValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_setValue" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Threshold_setValue" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Threshold_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_getMachineId" "', argument " "1"" of type '" "IMS_Data::Threshold const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  result = (ecore::EString *) &((IMS_Data::Threshold const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Threshold_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_setMachineId" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Threshold_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Threshold_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_getType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::IMS_Data::MetricType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Threshold_getType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_getType" "', argument " "1"" of type '" "IMS_Data::Threshold const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  result = (::IMS_Data::MetricType)((IMS_Data::Threshold const *)arg1)->getType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_setType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  ::IMS_Data::MetricType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Threshold_setType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_setType" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Threshold_setType" "', argument " "2"" of type '" "::IMS_Data::MetricType""'");
  } 
  arg2 = static_cast< ::IMS_Data::MetricType >(val2);
  (arg1)->setType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_getHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Threshold_getHandler",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_getHandler" "', argument " "1"" of type '" "IMS_Data::Threshold const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  result = (ecore::EString *) &((IMS_Data::Threshold const *)arg1)->getHandler();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_setHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_handler", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Threshold_setHandler",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_setHandler" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Threshold_setHandler" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Threshold_setHandler" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setHandler((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Threshold_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_eGet" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Threshold_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Threshold_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:Threshold_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_eSet" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Threshold_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Threshold_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Threshold_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Threshold_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_eIsSet" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Threshold_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:Threshold_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold_eUnset" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Threshold_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Threshold__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::Threshold *arg1 = (IMS_Data::Threshold *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Threshold__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__Threshold, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Threshold__eClass" "', argument " "1"" of type '" "IMS_Data::Threshold *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::Threshold * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Threshold_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__Threshold, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ThresholdOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ThresholdOp")) SWIG_fail;
  result = (IMS_Data::ThresholdOp *)new IMS_Data::ThresholdOp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMS_Data__ThresholdOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ThresholdOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ThresholdOp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ThresholdOp" "', argument " "1"" of type '" "IMS_Data::ThresholdOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ThresholdOp__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp__initialize" "', argument " "1"" of type '" "IMS_Data::ThresholdOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp_getMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ThresholdOp_getMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp_getMachineId" "', argument " "1"" of type '" "IMS_Data::ThresholdOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  result = (ecore::EString *) &((IMS_Data::ThresholdOp const *)arg1)->getMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp_setMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_machineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ThresholdOp_setMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp_setMachineId" "', argument " "1"" of type '" "IMS_Data::ThresholdOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ThresholdOp_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ThresholdOp_setMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp_getMetricType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::IMS_Data::MetricType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ThresholdOp_getMetricType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp_getMetricType" "', argument " "1"" of type '" "IMS_Data::ThresholdOp const *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  result = (::IMS_Data::MetricType)((IMS_Data::ThresholdOp const *)arg1)->getMetricType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp_setMetricType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  ::IMS_Data::MetricType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_metricType", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ThresholdOp_setMetricType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp_setMetricType" "', argument " "1"" of type '" "IMS_Data::ThresholdOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ThresholdOp_setMetricType" "', argument " "2"" of type '" "::IMS_Data::MetricType""'");
  } 
  arg2 = static_cast< ::IMS_Data::MetricType >(val2);
  (arg1)->setMetricType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ThresholdOp_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp_eGet" "', argument " "1"" of type '" "IMS_Data::ThresholdOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ThresholdOp_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ThresholdOp_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ThresholdOp_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp_eSet" "', argument " "1"" of type '" "IMS_Data::ThresholdOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ThresholdOp_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ThresholdOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ThresholdOp_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ThresholdOp_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp_eIsSet" "', argument " "1"" of type '" "IMS_Data::ThresholdOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ThresholdOp_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:ThresholdOp_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp_eUnset" "', argument " "1"" of type '" "IMS_Data::ThresholdOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ThresholdOp_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ThresholdOp__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMS_Data::ThresholdOp *arg1 = (IMS_Data::ThresholdOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ThresholdOp__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMS_Data__ThresholdOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThresholdOp__eClass" "', argument " "1"" of type '" "IMS_Data::ThresholdOp *""'"); 
  }
  arg1 = reinterpret_cast< IMS_Data::ThresholdOp * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ThresholdOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMS_Data__ThresholdOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CpFileOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CpFileOptions")) SWIG_fail;
  result = (FMS_Data::CpFileOptions *)new FMS_Data::CpFileOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__CpFileOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CpFileOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CpFileOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CpFileOptions" "', argument " "1"" of type '" "FMS_Data::CpFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CpFileOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions__initialize" "', argument " "1"" of type '" "FMS_Data::CpFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions_isIsRecursive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CpFileOptions_isIsRecursive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions_isIsRecursive" "', argument " "1"" of type '" "FMS_Data::CpFileOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  result = (::ecore::EBoolean)((FMS_Data::CpFileOptions const *)arg1)->isIsRecursive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions_setIsRecursive(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_isRecursive", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CpFileOptions_setIsRecursive",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions_setIsRecursive" "', argument " "1"" of type '" "FMS_Data::CpFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CpFileOptions_setIsRecursive" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setIsRecursive(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions_getTrCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::FMS_Data::TransferCommand result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CpFileOptions_getTrCommand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions_getTrCommand" "', argument " "1"" of type '" "FMS_Data::CpFileOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  result = (::FMS_Data::TransferCommand)((FMS_Data::CpFileOptions const *)arg1)->getTrCommand();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions_setTrCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  ::FMS_Data::TransferCommand arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_trCommand", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CpFileOptions_setTrCommand",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions_setTrCommand" "', argument " "1"" of type '" "FMS_Data::CpFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CpFileOptions_setTrCommand" "', argument " "2"" of type '" "::FMS_Data::TransferCommand""'");
  } 
  arg2 = static_cast< ::FMS_Data::TransferCommand >(val2);
  (arg1)->setTrCommand(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CpFileOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions_eGet" "', argument " "1"" of type '" "FMS_Data::CpFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CpFileOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CpFileOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CpFileOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions_eSet" "', argument " "1"" of type '" "FMS_Data::CpFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CpFileOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CpFileOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CpFileOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CpFileOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions_eIsSet" "', argument " "1"" of type '" "FMS_Data::CpFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CpFileOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CpFileOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions_eUnset" "', argument " "1"" of type '" "FMS_Data::CpFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CpFileOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CpFileOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CpFileOptions *arg1 = (FMS_Data::CpFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CpFileOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CpFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CpFileOptions__eClass" "', argument " "1"" of type '" "FMS_Data::CpFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CpFileOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__CpFileOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_FileStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_FileStat")) SWIG_fail;
  result = (FMS_Data::FileStat *)new FMS_Data::FileStat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__FileStat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FileStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_FileStat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileStat" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat__initialize" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getPath" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileStat const *)arg1)->getPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_path", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setPath" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileStat_setPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileStat_setPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getOwner" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileStat const *)arg1)->getOwner();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_owner", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setOwner",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setOwner" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileStat_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileStat_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOwner((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getGroup" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileStat const *)arg1)->getGroup();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_group", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setGroup",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setGroup" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileStat_setGroup" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileStat_setGroup" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setGroup((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getPerms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getPerms",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getPerms" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (::ecore::EInt)((FMS_Data::FileStat const *)arg1)->getPerms();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setPerms(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_perms", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setPerms",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setPerms" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_setPerms" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setPerms(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getUid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getUid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getUid" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (::ecore::ELong)((FMS_Data::FileStat const *)arg1)->getUid();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setUid(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_uid", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setUid",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setUid" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_setUid" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setUid(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getGid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getGid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getGid" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (::ecore::ELong)((FMS_Data::FileStat const *)arg1)->getGid();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setGid(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_gid", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setGid",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setGid" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_setGid" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setGid(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBigInteger result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getSize" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (::ecore::EBigInteger)((FMS_Data::FileStat const *)arg1)->getSize();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::EBigInteger arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_size", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setSize",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setSize" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_setSize" "', argument " "2"" of type '" "::ecore::EBigInteger""'");
  } 
  arg2 = static_cast< ::ecore::EBigInteger >(val2);
  (arg1)->setSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getAtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getAtime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getAtime" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (::ecore::ELong)((FMS_Data::FileStat const *)arg1)->getAtime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setAtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_atime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setAtime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setAtime" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_setAtime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setAtime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getMtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getMtime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getMtime" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (::ecore::ELong)((FMS_Data::FileStat const *)arg1)->getMtime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setMtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_mtime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setMtime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setMtime" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_setMtime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setMtime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getCtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getCtime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getCtime" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (::ecore::ELong)((FMS_Data::FileStat const *)arg1)->getCtime();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setCtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_ctime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setCtime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setCtime" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_setCtime" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setCtime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_getType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::FMS_Data::FileType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat_getType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_getType" "', argument " "1"" of type '" "FMS_Data::FileStat const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (::FMS_Data::FileType)((FMS_Data::FileStat const *)arg1)->getType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_setType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::FMS_Data::FileType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_setType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_setType" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_setType" "', argument " "2"" of type '" "::FMS_Data::FileType""'");
  } 
  arg2 = static_cast< ::FMS_Data::FileType >(val2);
  (arg1)->setType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:FileStat_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_eGet" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileStat_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:FileStat_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_eSet" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FileStat_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileStat_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_eIsSet" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileStat_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat_eUnset" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileStat_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileStat__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileStat *arg1 = (FMS_Data::FileStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileStat__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileStat__eClass" "', argument " "1"" of type '" "FMS_Data::FileStat *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileStat * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FileStat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__FileStat, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_FileTransfer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_FileTransfer")) SWIG_fail;
  result = (FMS_Data::FileTransfer *)new FMS_Data::FileTransfer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__FileTransfer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FileTransfer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_FileTransfer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileTransfer" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer__initialize" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getTransferId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getTransferId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getTransferId" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileTransfer const *)arg1)->getTransferId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setTransferId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_transferId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setTransferId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setTransferId" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileTransfer_setTransferId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileTransfer_setTransferId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setTransferId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::FMS_Data::Status result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getStatus" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (::FMS_Data::Status)((FMS_Data::FileTransfer const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ::FMS_Data::Status arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setStatus" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileTransfer_setStatus" "', argument " "2"" of type '" "::FMS_Data::Status""'");
  } 
  arg2 = static_cast< ::FMS_Data::Status >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getUserId" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileTransfer const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setUserId" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileTransfer_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileTransfer_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getClientMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getClientMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getClientMachineId" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileTransfer const *)arg1)->getClientMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setClientMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_clientMachineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setClientMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setClientMachineId" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileTransfer_setClientMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileTransfer_setClientMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setClientMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getSourceMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getSourceMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getSourceMachineId" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileTransfer const *)arg1)->getSourceMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setSourceMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sourceMachineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setSourceMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setSourceMachineId" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileTransfer_setSourceMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileTransfer_setSourceMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSourceMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getDestinationMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getDestinationMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getDestinationMachineId" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileTransfer const *)arg1)->getDestinationMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setDestinationMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_destinationMachineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setDestinationMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setDestinationMachineId" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileTransfer_setDestinationMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileTransfer_setDestinationMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setDestinationMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getSourceFilePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getSourceFilePath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getSourceFilePath" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileTransfer const *)arg1)->getSourceFilePath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setSourceFilePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_sourceFilePath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setSourceFilePath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setSourceFilePath" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileTransfer_setSourceFilePath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileTransfer_setSourceFilePath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setSourceFilePath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getDestinationFilePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getDestinationFilePath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getDestinationFilePath" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileTransfer const *)arg1)->getDestinationFilePath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setDestinationFilePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_destinationFilePath", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setDestinationFilePath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setDestinationFilePath" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileTransfer_setDestinationFilePath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileTransfer_setDestinationFilePath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setDestinationFilePath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBigInteger result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getSize" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (::ecore::EBigInteger)((FMS_Data::FileTransfer const *)arg1)->getSize();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ::ecore::EBigInteger arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_size", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setSize",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setSize" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileTransfer_setSize" "', argument " "2"" of type '" "::ecore::EBigInteger""'");
  } 
  arg2 = static_cast< ::ecore::EBigInteger >(val2);
  (arg1)->setSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getStart_time(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::ELong result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getStart_time",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getStart_time" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (::ecore::ELong)((FMS_Data::FileTransfer const *)arg1)->getStart_time();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setStart_time(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ::ecore::ELong arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_start_time", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setStart_time",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setStart_time" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileTransfer_setStart_time" "', argument " "2"" of type '" "::ecore::ELong""'");
  } 
  arg2 = static_cast< ::ecore::ELong >(val2);
  (arg1)->setStart_time(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getTrCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::FMS_Data::TransferCommand result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getTrCommand",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getTrCommand" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (::FMS_Data::TransferCommand)((FMS_Data::FileTransfer const *)arg1)->getTrCommand();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setTrCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ::FMS_Data::TransferCommand arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_trCommand", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setTrCommand",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setTrCommand" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileTransfer_setTrCommand" "', argument " "2"" of type '" "::FMS_Data::TransferCommand""'");
  } 
  arg2 = static_cast< ::FMS_Data::TransferCommand >(val2);
  (arg1)->setTrCommand(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_getErrorMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer_getErrorMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_getErrorMsg" "', argument " "1"" of type '" "FMS_Data::FileTransfer const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (ecore::EString *) &((FMS_Data::FileTransfer const *)arg1)->getErrorMsg();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_setErrorMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_errorMsg", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_setErrorMsg",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_setErrorMsg" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FileTransfer_setErrorMsg" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileTransfer_setErrorMsg" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setErrorMsg((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:FileTransfer_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_eGet" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileTransfer_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileTransfer_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:FileTransfer_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_eSet" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileTransfer_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FileTransfer_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FileTransfer_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_eIsSet" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileTransfer_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FileTransfer_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer_eUnset" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileTransfer_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileTransfer__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::FileTransfer *arg1 = (FMS_Data::FileTransfer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FileTransfer__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__FileTransfer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileTransfer__eClass" "', argument " "1"" of type '" "FMS_Data::FileTransfer *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::FileTransfer * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FileTransfer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__FileTransfer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_HeadOfFileOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_HeadOfFileOptions")) SWIG_fail;
  result = (FMS_Data::HeadOfFileOptions *)new FMS_Data::HeadOfFileOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__HeadOfFileOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_HeadOfFileOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *arg1 = (FMS_Data::HeadOfFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_HeadOfFileOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__HeadOfFileOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_HeadOfFileOptions" "', argument " "1"" of type '" "FMS_Data::HeadOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HeadOfFileOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *arg1 = (FMS_Data::HeadOfFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HeadOfFileOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__HeadOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HeadOfFileOptions__initialize" "', argument " "1"" of type '" "FMS_Data::HeadOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HeadOfFileOptions_getNline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *arg1 = (FMS_Data::HeadOfFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HeadOfFileOptions_getNline",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__HeadOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HeadOfFileOptions_getNline" "', argument " "1"" of type '" "FMS_Data::HeadOfFileOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp1);
  result = (::ecore::EInt)((FMS_Data::HeadOfFileOptions const *)arg1)->getNline();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HeadOfFileOptions_setNline(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *arg1 = (FMS_Data::HeadOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nline", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:HeadOfFileOptions_setNline",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__HeadOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HeadOfFileOptions_setNline" "', argument " "1"" of type '" "FMS_Data::HeadOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HeadOfFileOptions_setNline" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNline(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HeadOfFileOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *arg1 = (FMS_Data::HeadOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:HeadOfFileOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__HeadOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HeadOfFileOptions_eGet" "', argument " "1"" of type '" "FMS_Data::HeadOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HeadOfFileOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "HeadOfFileOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HeadOfFileOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *arg1 = (FMS_Data::HeadOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:HeadOfFileOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__HeadOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HeadOfFileOptions_eSet" "', argument " "1"" of type '" "FMS_Data::HeadOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HeadOfFileOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "HeadOfFileOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "HeadOfFileOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HeadOfFileOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *arg1 = (FMS_Data::HeadOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:HeadOfFileOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__HeadOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HeadOfFileOptions_eIsSet" "', argument " "1"" of type '" "FMS_Data::HeadOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HeadOfFileOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HeadOfFileOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *arg1 = (FMS_Data::HeadOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:HeadOfFileOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__HeadOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HeadOfFileOptions_eUnset" "', argument " "1"" of type '" "FMS_Data::HeadOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HeadOfFileOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HeadOfFileOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::HeadOfFileOptions *arg1 = (FMS_Data::HeadOfFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HeadOfFileOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__HeadOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HeadOfFileOptions__eClass" "', argument " "1"" of type '" "FMS_Data::HeadOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *HeadOfFileOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__HeadOfFileOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LsDirOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_LsDirOptions")) SWIG_fail;
  result = (FMS_Data::LsDirOptions *)new FMS_Data::LsDirOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__LsDirOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LsDirOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LsDirOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LsDirOptions" "', argument " "1"" of type '" "FMS_Data::LsDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsDirOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions__initialize" "', argument " "1"" of type '" "FMS_Data::LsDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions_isLongFormat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsDirOptions_isLongFormat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions_isLongFormat" "', argument " "1"" of type '" "FMS_Data::LsDirOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  result = (::ecore::EBoolean)((FMS_Data::LsDirOptions const *)arg1)->isLongFormat();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions_setLongFormat(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_longFormat", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsDirOptions_setLongFormat",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions_setLongFormat" "', argument " "1"" of type '" "FMS_Data::LsDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsDirOptions_setLongFormat" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setLongFormat(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions_isAllFiles(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsDirOptions_isAllFiles",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions_isAllFiles" "', argument " "1"" of type '" "FMS_Data::LsDirOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  result = (::ecore::EBoolean)((FMS_Data::LsDirOptions const *)arg1)->isAllFiles();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions_setAllFiles(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_allFiles", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsDirOptions_setAllFiles",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions_setAllFiles" "', argument " "1"" of type '" "FMS_Data::LsDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsDirOptions_setAllFiles" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setAllFiles(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LsDirOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions_eGet" "', argument " "1"" of type '" "FMS_Data::LsDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsDirOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LsDirOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LsDirOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions_eSet" "', argument " "1"" of type '" "FMS_Data::LsDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsDirOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LsDirOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LsDirOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsDirOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions_eIsSet" "', argument " "1"" of type '" "FMS_Data::LsDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsDirOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsDirOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions_eUnset" "', argument " "1"" of type '" "FMS_Data::LsDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsDirOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsDirOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsDirOptions *arg1 = (FMS_Data::LsDirOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsDirOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsDirOptions__eClass" "', argument " "1"" of type '" "FMS_Data::LsDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LsDirOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__LsDirOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LsTransferOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_LsTransferOptions")) SWIG_fail;
  result = (FMS_Data::LsTransferOptions *)new FMS_Data::LsTransferOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__LsTransferOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LsTransferOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LsTransferOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LsTransferOptions" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsTransferOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions__initialize" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_getTransferId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsTransferOptions_getTransferId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_getTransferId" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  result = (ecore::EString *) &((FMS_Data::LsTransferOptions const *)arg1)->getTransferId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_setTransferId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_transferId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsTransferOptions_setTransferId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_setTransferId" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LsTransferOptions_setTransferId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LsTransferOptions_setTransferId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setTransferId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_getFromMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsTransferOptions_getFromMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_getFromMachineId" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  result = (ecore::EString *) &((FMS_Data::LsTransferOptions const *)arg1)->getFromMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_setFromMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_fromMachineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsTransferOptions_setFromMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_setFromMachineId" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LsTransferOptions_setFromMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LsTransferOptions_setFromMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setFromMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsTransferOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_getUserId" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  result = (ecore::EString *) &((FMS_Data::LsTransferOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsTransferOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_setUserId" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LsTransferOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LsTransferOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_getStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::FMS_Data::Status result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsTransferOptions_getStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_getStatus" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  result = (::FMS_Data::Status)((FMS_Data::LsTransferOptions const *)arg1)->getStatus();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_setStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  ::FMS_Data::Status arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_status", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsTransferOptions_setStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_setStatus" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsTransferOptions_setStatus" "', argument " "2"" of type '" "::FMS_Data::Status""'");
  } 
  arg2 = static_cast< ::FMS_Data::Status >(val2);
  (arg1)->setStatus(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LsTransferOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_eGet" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsTransferOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LsTransferOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LsTransferOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_eSet" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsTransferOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LsTransferOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LsTransferOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsTransferOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_eIsSet" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsTransferOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:LsTransferOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions_eUnset" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LsTransferOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LsTransferOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::LsTransferOptions *arg1 = (FMS_Data::LsTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LsTransferOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__LsTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LsTransferOptions__eClass" "', argument " "1"" of type '" "FMS_Data::LsTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LsTransferOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__LsTransferOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_StopTransferOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_StopTransferOptions")) SWIG_fail;
  result = (FMS_Data::StopTransferOptions *)new FMS_Data::StopTransferOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__StopTransferOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StopTransferOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_StopTransferOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StopTransferOptions" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StopTransferOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions__initialize" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_getTransferId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StopTransferOptions_getTransferId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_getTransferId" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  result = (ecore::EString *) &((FMS_Data::StopTransferOptions const *)arg1)->getTransferId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_setTransferId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_transferId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StopTransferOptions_setTransferId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_setTransferId" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StopTransferOptions_setTransferId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StopTransferOptions_setTransferId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setTransferId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_getFromMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StopTransferOptions_getFromMachineId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_getFromMachineId" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  result = (ecore::EString *) &((FMS_Data::StopTransferOptions const *)arg1)->getFromMachineId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_setFromMachineId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_fromMachineId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StopTransferOptions_setFromMachineId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_setFromMachineId" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StopTransferOptions_setFromMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StopTransferOptions_setFromMachineId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setFromMachineId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_getUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StopTransferOptions_getUserId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_getUserId" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  result = (ecore::EString *) &((FMS_Data::StopTransferOptions const *)arg1)->getUserId();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_setUserId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_userId", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StopTransferOptions_setUserId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_setUserId" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StopTransferOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StopTransferOptions_setUserId" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setUserId((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StopTransferOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_eGet" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StopTransferOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StopTransferOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:StopTransferOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_eSet" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StopTransferOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StopTransferOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StopTransferOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StopTransferOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_eIsSet" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StopTransferOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:StopTransferOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions_eUnset" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StopTransferOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StopTransferOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::StopTransferOptions *arg1 = (FMS_Data::StopTransferOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StopTransferOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__StopTransferOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StopTransferOptions__eClass" "', argument " "1"" of type '" "FMS_Data::StopTransferOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StopTransferOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__StopTransferOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_TailOfFileOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TailOfFileOptions")) SWIG_fail;
  result = (FMS_Data::TailOfFileOptions *)new FMS_Data::TailOfFileOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__TailOfFileOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TailOfFileOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *arg1 = (FMS_Data::TailOfFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TailOfFileOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__TailOfFileOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TailOfFileOptions" "', argument " "1"" of type '" "FMS_Data::TailOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TailOfFileOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *arg1 = (FMS_Data::TailOfFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TailOfFileOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__TailOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TailOfFileOptions__initialize" "', argument " "1"" of type '" "FMS_Data::TailOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TailOfFileOptions_getNline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *arg1 = (FMS_Data::TailOfFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TailOfFileOptions_getNline",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__TailOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TailOfFileOptions_getNline" "', argument " "1"" of type '" "FMS_Data::TailOfFileOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp1);
  result = (::ecore::EInt)((FMS_Data::TailOfFileOptions const *)arg1)->getNline();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TailOfFileOptions_setNline(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *arg1 = (FMS_Data::TailOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_nline", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TailOfFileOptions_setNline",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__TailOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TailOfFileOptions_setNline" "', argument " "1"" of type '" "FMS_Data::TailOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TailOfFileOptions_setNline" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setNline(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TailOfFileOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *arg1 = (FMS_Data::TailOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TailOfFileOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__TailOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TailOfFileOptions_eGet" "', argument " "1"" of type '" "FMS_Data::TailOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TailOfFileOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "TailOfFileOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TailOfFileOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *arg1 = (FMS_Data::TailOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:TailOfFileOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__TailOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TailOfFileOptions_eSet" "', argument " "1"" of type '" "FMS_Data::TailOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TailOfFileOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TailOfFileOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TailOfFileOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TailOfFileOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *arg1 = (FMS_Data::TailOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TailOfFileOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__TailOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TailOfFileOptions_eIsSet" "', argument " "1"" of type '" "FMS_Data::TailOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TailOfFileOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TailOfFileOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *arg1 = (FMS_Data::TailOfFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:TailOfFileOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__TailOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TailOfFileOptions_eUnset" "', argument " "1"" of type '" "FMS_Data::TailOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TailOfFileOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TailOfFileOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::TailOfFileOptions *arg1 = (FMS_Data::TailOfFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TailOfFileOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__TailOfFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TailOfFileOptions__eClass" "', argument " "1"" of type '" "FMS_Data::TailOfFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TailOfFileOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__TailOfFileOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_RmFileOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RmFileOptions")) SWIG_fail;
  result = (FMS_Data::RmFileOptions *)new FMS_Data::RmFileOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__RmFileOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RmFileOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *arg1 = (FMS_Data::RmFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RmFileOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__RmFileOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RmFileOptions" "', argument " "1"" of type '" "FMS_Data::RmFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RmFileOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *arg1 = (FMS_Data::RmFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RmFileOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__RmFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RmFileOptions__initialize" "', argument " "1"" of type '" "FMS_Data::RmFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RmFileOptions_isIsRecursive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *arg1 = (FMS_Data::RmFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RmFileOptions_isIsRecursive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__RmFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RmFileOptions_isIsRecursive" "', argument " "1"" of type '" "FMS_Data::RmFileOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp1);
  result = (::ecore::EBoolean)((FMS_Data::RmFileOptions const *)arg1)->isIsRecursive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RmFileOptions_setIsRecursive(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *arg1 = (FMS_Data::RmFileOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_isRecursive", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RmFileOptions_setIsRecursive",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__RmFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RmFileOptions_setIsRecursive" "', argument " "1"" of type '" "FMS_Data::RmFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RmFileOptions_setIsRecursive" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setIsRecursive(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RmFileOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *arg1 = (FMS_Data::RmFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:RmFileOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__RmFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RmFileOptions_eGet" "', argument " "1"" of type '" "FMS_Data::RmFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RmFileOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RmFileOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RmFileOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *arg1 = (FMS_Data::RmFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:RmFileOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__RmFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RmFileOptions_eSet" "', argument " "1"" of type '" "FMS_Data::RmFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RmFileOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "RmFileOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RmFileOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RmFileOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *arg1 = (FMS_Data::RmFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RmFileOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__RmFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RmFileOptions_eIsSet" "', argument " "1"" of type '" "FMS_Data::RmFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RmFileOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RmFileOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *arg1 = (FMS_Data::RmFileOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RmFileOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__RmFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RmFileOptions_eUnset" "', argument " "1"" of type '" "FMS_Data::RmFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RmFileOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RmFileOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::RmFileOptions *arg1 = (FMS_Data::RmFileOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RmFileOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__RmFileOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RmFileOptions__eClass" "', argument " "1"" of type '" "FMS_Data::RmFileOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RmFileOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__RmFileOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CreateDirOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CreateDirOptions")) SWIG_fail;
  result = (FMS_Data::CreateDirOptions *)new FMS_Data::CreateDirOptions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__CreateDirOptions, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CreateDirOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *arg1 = (FMS_Data::CreateDirOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CreateDirOptions",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CreateDirOptions, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CreateDirOptions" "', argument " "1"" of type '" "FMS_Data::CreateDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDirOptions__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *arg1 = (FMS_Data::CreateDirOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CreateDirOptions__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CreateDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateDirOptions__initialize" "', argument " "1"" of type '" "FMS_Data::CreateDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDirOptions_isIsRecursive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *arg1 = (FMS_Data::CreateDirOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CreateDirOptions_isIsRecursive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CreateDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateDirOptions_isIsRecursive" "', argument " "1"" of type '" "FMS_Data::CreateDirOptions const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp1);
  result = (::ecore::EBoolean)((FMS_Data::CreateDirOptions const *)arg1)->isIsRecursive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDirOptions_setIsRecursive(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *arg1 = (FMS_Data::CreateDirOptions *) 0 ;
  ::ecore::EBoolean arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_isRecursive", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CreateDirOptions_setIsRecursive",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CreateDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateDirOptions_setIsRecursive" "', argument " "1"" of type '" "FMS_Data::CreateDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreateDirOptions_setIsRecursive" "', argument " "2"" of type '" "::ecore::EBoolean""'");
  } 
  arg2 = static_cast< ::ecore::EBoolean >(val2);
  (arg1)->setIsRecursive(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDirOptions_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *arg1 = (FMS_Data::CreateDirOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CreateDirOptions_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CreateDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateDirOptions_eGet" "', argument " "1"" of type '" "FMS_Data::CreateDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreateDirOptions_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CreateDirOptions_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDirOptions_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *arg1 = (FMS_Data::CreateDirOptions *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:CreateDirOptions_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CreateDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateDirOptions_eSet" "', argument " "1"" of type '" "FMS_Data::CreateDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreateDirOptions_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CreateDirOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CreateDirOptions_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDirOptions_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *arg1 = (FMS_Data::CreateDirOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CreateDirOptions_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CreateDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateDirOptions_eIsSet" "', argument " "1"" of type '" "FMS_Data::CreateDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreateDirOptions_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDirOptions_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *arg1 = (FMS_Data::CreateDirOptions *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:CreateDirOptions_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CreateDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateDirOptions_eUnset" "', argument " "1"" of type '" "FMS_Data::CreateDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CreateDirOptions_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CreateDirOptions__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::CreateDirOptions *arg1 = (FMS_Data::CreateDirOptions *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CreateDirOptions__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__CreateDirOptions, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CreateDirOptions__eClass" "', argument " "1"" of type '" "FMS_Data::CreateDirOptions *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CreateDirOptions_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__CreateDirOptions, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_DirEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_DirEntry")) SWIG_fail;
  result = (FMS_Data::DirEntry *)new FMS_Data::DirEntry();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMS_Data__DirEntry, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DirEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_DirEntry",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DirEntry" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry__initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DirEntry__initialize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry__initialize" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  (arg1)->_initialize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_getPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DirEntry_getPath",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_getPath" "', argument " "1"" of type '" "FMS_Data::DirEntry const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  result = (ecore::EString *) &((FMS_Data::DirEntry const *)arg1)->getPath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_setPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_path", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DirEntry_setPath",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_setPath" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DirEntry_setPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DirEntry_setPath" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setPath((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_getOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DirEntry_getOwner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_getOwner" "', argument " "1"" of type '" "FMS_Data::DirEntry const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  result = (ecore::EString *) &((FMS_Data::DirEntry const *)arg1)->getOwner();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_setOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_owner", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DirEntry_setOwner",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_setOwner" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DirEntry_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DirEntry_setOwner" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setOwner((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_getGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DirEntry_getGroup",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_getGroup" "', argument " "1"" of type '" "FMS_Data::DirEntry const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  result = (ecore::EString *) &((FMS_Data::DirEntry const *)arg1)->getGroup();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_setGroup(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_group", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DirEntry_setGroup",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_setGroup" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DirEntry_setGroup" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DirEntry_setGroup" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setGroup((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_getPerms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EInt result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DirEntry_getPerms",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_getPerms" "', argument " "1"" of type '" "FMS_Data::DirEntry const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  result = (::ecore::EInt)((FMS_Data::DirEntry const *)arg1)->getPerms();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_setPerms(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_perms", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DirEntry_setPerms",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_setPerms" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DirEntry_setPerms" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->setPerms(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_getSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EBigInteger result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DirEntry_getSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_getSize" "', argument " "1"" of type '" "FMS_Data::DirEntry const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  result = (::ecore::EBigInteger)((FMS_Data::DirEntry const *)arg1)->getSize();
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_setSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ::ecore::EBigInteger arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_size", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DirEntry_setSize",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_setSize" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DirEntry_setSize" "', argument " "2"" of type '" "::ecore::EBigInteger""'");
  } 
  arg2 = static_cast< ::ecore::EBigInteger >(val2);
  (arg1)->setSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_getCreationTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ecore::EString *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DirEntry_getCreationTime",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_getCreationTime" "', argument " "1"" of type '" "FMS_Data::DirEntry const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  result = (ecore::EString *) &((FMS_Data::DirEntry const *)arg1)->getCreationTime();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_setCreationTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ecore::EString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_creationTime", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DirEntry_setCreationTime",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_setCreationTime" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DirEntry_setCreationTime" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DirEntry_setCreationTime" "', argument " "2"" of type '" "ecore::EString const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->setCreationTime((ecore::EString const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_getType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::FMS_Data::FileType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DirEntry_getType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_getType" "', argument " "1"" of type '" "FMS_Data::DirEntry const *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  result = (::FMS_Data::FileType)((FMS_Data::DirEntry const *)arg1)->getType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_setType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ::FMS_Data::FileType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DirEntry_setType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_setType" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DirEntry_setType" "', argument " "2"" of type '" "::FMS_Data::FileType""'");
  } 
  arg2 = static_cast< ::FMS_Data::FileType >(val2);
  (arg1)->setType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_eGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ::ecore::EInt arg2 ;
  ::ecore::EBoolean arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_resolve", NULL 
  };
  ::ecore::EJavaObject result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:DirEntry_eGet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_eGet" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DirEntry_eGet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DirEntry_eGet" "', argument " "3"" of type '" "::ecore::EBoolean""'");
  } 
  arg3 = static_cast< ::ecore::EBoolean >(val3);
  result = (arg1)->eGet(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new ::ecore::EJavaObject(static_cast< const ::ecore::EJavaObject& >(result))), SWIGTYPE_p___ecorecpp__mapping__any, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_eSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ::ecore::EInt arg2 ;
  ecore::EJavaObject *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID",(char *) "_newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:DirEntry_eSet",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_eSet" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DirEntry_eSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p___ecorecpp__mapping__any,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DirEntry_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DirEntry_eSet" "', argument " "3"" of type '" "ecore::EJavaObject const &""'"); 
  }
  arg3 = reinterpret_cast< ecore::EJavaObject * >(argp3);
  (arg1)->eSet(arg2,(ecore::EJavaObject const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_eIsSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  ::ecore::EBoolean result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DirEntry_eIsSet",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_eIsSet" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DirEntry_eIsSet" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  result = (::ecore::EBoolean)(arg1)->eIsSet(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry_eUnset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  ::ecore::EInt arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "_featureID", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:DirEntry_eUnset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry_eUnset" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DirEntry_eUnset" "', argument " "2"" of type '" "::ecore::EInt""'");
  } 
  arg2 = static_cast< ::ecore::EInt >(val2);
  (arg1)->eUnset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DirEntry__eClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMS_Data::DirEntry *arg1 = (FMS_Data::DirEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ::ecore::EClass_ptr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:DirEntry__eClass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMS_Data__DirEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DirEntry__eClass" "', argument " "1"" of type '" "FMS_Data::DirEntry *""'"); 
  }
  arg1 = reinterpret_cast< FMS_Data::DirEntry * >(argp1);
  result = (::ecore::EClass_ptr)(arg1)->_eClass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ecore__EClass, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DirEntry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMS_Data__DirEntry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_connect(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  UMS_Data::Session *arg3 = 0 ;
  UMS_Data::ConnectOptions const &arg4_defvalue = UMS_Data::ConnectOptions() ;
  UMS_Data::ConnectOptions *arg4 = (UMS_Data::ConnectOptions *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "userId",(char *) "password",(char *) "session",(char *) "connectOpt", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:connect",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "connect" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "connect" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "connect" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "connect" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_UMS_Data__Session,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "connect" "', argument " "3"" of type '" "UMS_Data::Session &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "connect" "', argument " "3"" of type '" "UMS_Data::Session &""'"); 
  }
  arg3 = reinterpret_cast< UMS_Data::Session * >(argp3);
  if (obj3) {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_UMS_Data__ConnectOptions,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "connect" "', argument " "4"" of type '" "UMS_Data::ConnectOptions const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "connect" "', argument " "4"" of type '" "UMS_Data::ConnectOptions const &""'"); 
    }
    arg4 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp4);
  }
  try {
    result = (int)vishnu::connect((std::string const &)*arg1,(std::string const &)*arg2,*arg3,(UMS_Data::ConnectOptions const &)*arg4);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_connect_m(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsers *arg1 = 0 ;
  UMS_Data::Session *arg2 = 0 ;
  UMS_Data::ConnectOptions const &arg3_defvalue = UMS_Data::ConnectOptions() ;
  UMS_Data::ConnectOptions *arg3 = (UMS_Data::ConnectOptions *) &arg3_defvalue ;
  UMS_Data::ListUsers temp1 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "users",(char *) "session",(char *) "connectOpt", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:connect_m",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    // Check it is a ListUsers
    if (PySequence_Check(obj0)) {
      int size = PySequence_Size(obj0);
      
      // Instanciating a ListUsers object
      UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
      
      // For each item of the ListUsers
      for (int i = 0; i < size ; ++i) {
        // Extract the python object
        PyObject *o = PySequence_GetItem(obj0,i);
        // Instanciating an object to copy each item of the C++ ListUsers (because emf destroys its objects at the end)
        UMS_Data::User* test = ecoreFactory->createUser();
        UMS_Data::User* copy = ecoreFactory->createUser();
        
        SWIG_ConvertPtr(o, (void **)&test, SWIGTYPE_p_UMS_Data__User,1);
        *copy = *test;
        temp1.getUsers().push_back(copy);
        // Handle reference on object
        Py_DECREF(o);
      }
    } else {
      PyErr_SetString(PyExc_TypeError, "You must give a python ListUsers in input");
    }
    // Assign reference to the new created ListUsers
    arg1 = &temp1;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__Session,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "connect_m" "', argument " "2"" of type '" "UMS_Data::Session &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "connect_m" "', argument " "2"" of type '" "UMS_Data::Session &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::Session * >(argp2);
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_UMS_Data__ConnectOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "connect_m" "', argument " "3"" of type '" "UMS_Data::ConnectOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "connect_m" "', argument " "3"" of type '" "UMS_Data::ConnectOptions const &""'"); 
    }
    arg3 = reinterpret_cast< UMS_Data::ConnectOptions * >(argp3);
  }
  try {
    result = (int)vishnu::connect(*arg1,*arg2,(UMS_Data::ConnectOptions const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_reconnect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  UMS_Data::Session *arg4 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:reconnect",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "reconnect" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "reconnect" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "reconnect" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "reconnect" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "reconnect" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "reconnect" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_UMS_Data__Session,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "reconnect" "', argument " "4"" of type '" "UMS_Data::Session &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "reconnect" "', argument " "4"" of type '" "UMS_Data::Session &""'"); 
  }
  arg4 = reinterpret_cast< UMS_Data::Session * >(argp4);
  try {
    result = (int)vishnu::reconnect((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,*arg4);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_reconnect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMS_Data::ListUsers *arg1 = 0 ;
  std::string *arg2 = 0 ;
  UMS_Data::Session *arg3 = 0 ;
  UMS_Data::ListUsers temp1 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:reconnect",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    // Check it is a ListUsers
    if (PySequence_Check(obj0)) {
      int size = PySequence_Size(obj0);
      
      // Instanciating a ListUsers object
      UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
      
      // For each item of the ListUsers
      for (int i = 0; i < size ; ++i) {
        // Extract the python object
        PyObject *o = PySequence_GetItem(obj0,i);
        // Instanciating an object to copy each item of the C++ ListUsers (because emf destroys its objects at the end)
        UMS_Data::User* test = ecoreFactory->createUser();
        UMS_Data::User* copy = ecoreFactory->createUser();
        
        SWIG_ConvertPtr(o, (void **)&test, SWIGTYPE_p_UMS_Data__User,1);
        *copy = *test;
        temp1.getUsers().push_back(copy);
        // Handle reference on object
        Py_DECREF(o);
      }
    } else {
      PyErr_SetString(PyExc_TypeError, "You must give a python ListUsers in input");
    }
    // Assign reference to the new created ListUsers
    arg1 = &temp1;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "reconnect" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "reconnect" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_UMS_Data__Session,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "reconnect" "', argument " "3"" of type '" "UMS_Data::Session &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "reconnect" "', argument " "3"" of type '" "UMS_Data::Session &""'"); 
  }
  arg3 = reinterpret_cast< UMS_Data::Session * >(argp3);
  try {
    result = (int)vishnu::reconnect(*arg1,(std::string const &)*arg2,*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_reconnect(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_UMS_Data__ListUsers, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_UMS_Data__Session, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_reconnect__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_UMS_Data__Session, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_reconnect__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'reconnect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    vishnu::reconnect(std::string const &,std::string const &,std::string const &,UMS_Data::Session &)\n"
    "    vishnu::reconnect(UMS_Data::ListUsers &,std::string const &,UMS_Data::Session &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_close(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:close",kwnames,&obj0)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "close" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "close" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  try {
    result = (int)vishnu::close((std::string const &)*arg1);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_addUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::User *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "newUser", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:addUser",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "addUser" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addUser" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__User,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "addUser" "', argument " "2"" of type '" "UMS_Data::User &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addUser" "', argument " "2"" of type '" "UMS_Data::User &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::User * >(argp2);
  try {
    result = (int)vishnu::addUser((std::string const &)*arg1,*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_updateUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::User *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "user", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:updateUser",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "updateUser" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateUser" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__User,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "updateUser" "', argument " "2"" of type '" "UMS_Data::User const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateUser" "', argument " "2"" of type '" "UMS_Data::User const &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::User * >(argp2);
  try {
    result = (int)vishnu::updateUser((std::string const &)*arg1,(UMS_Data::User const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_deleteUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "userId", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:deleteUser",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "deleteUser" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteUser" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "deleteUser" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteUser" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (int)vishnu::deleteUser((std::string const &)*arg1,(std::string const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_changePassword(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "userId",(char *) "password",(char *) "passwordNew", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:changePassword",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "changePassword" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "changePassword" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "changePassword" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "changePassword" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "changePassword" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "changePassword" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    result = (int)vishnu::changePassword((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_resetPassword(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "userId",(char *) "tmpPassword", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:resetPassword",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "resetPassword" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "resetPassword" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "resetPassword" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "resetPassword" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "resetPassword" "', argument " "3"" of type '" "std::string &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "resetPassword" "', argument " "3"" of type '" "std::string &""'"); 
  }
  arg3 = reinterpret_cast< std::string * >(argp3);
  try {
    result = (int)vishnu::resetPassword((std::string const &)*arg1,(std::string const &)*arg2,*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_addMachine(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::Machine *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "newMachine", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:addMachine",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "addMachine" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addMachine" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__Machine,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "addMachine" "', argument " "2"" of type '" "UMS_Data::Machine &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addMachine" "', argument " "2"" of type '" "UMS_Data::Machine &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::Machine * >(argp2);
  try {
    result = (int)vishnu::addMachine((std::string const &)*arg1,*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_updateMachine(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::Machine *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machine", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:updateMachine",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "updateMachine" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateMachine" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__Machine,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "updateMachine" "', argument " "2"" of type '" "UMS_Data::Machine const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateMachine" "', argument " "2"" of type '" "UMS_Data::Machine const &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::Machine * >(argp2);
  try {
    result = (int)vishnu::updateMachine((std::string const &)*arg1,(UMS_Data::Machine const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_deleteMachine(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:deleteMachine",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "deleteMachine" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteMachine" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "deleteMachine" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteMachine" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (int)vishnu::deleteMachine((std::string const &)*arg1,(std::string const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_addLocalAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::LocalAccount *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  std::string temp3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "newLocalAccount", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:addLocalAccount",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "addLocalAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addLocalAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__LocalAccount,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "addLocalAccount" "', argument " "2"" of type '" "UMS_Data::LocalAccount const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addLocalAccount" "', argument " "2"" of type '" "UMS_Data::LocalAccount const &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::LocalAccount * >(argp2);
  try {
    result = (int)vishnu::addLocalAccount((std::string const &)*arg1,(UMS_Data::LocalAccount const &)*arg2,*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    PyObject *o = PyString_FromString(arg3->c_str());
    resultobj = SWIG_Python_AppendOutput(resultobj, o);
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_updateLocalAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::LocalAccount *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "localAccount", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:updateLocalAccount",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "updateLocalAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateLocalAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__LocalAccount,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "updateLocalAccount" "', argument " "2"" of type '" "UMS_Data::LocalAccount const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateLocalAccount" "', argument " "2"" of type '" "UMS_Data::LocalAccount const &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::LocalAccount * >(argp2);
  try {
    result = (int)vishnu::updateLocalAccount((std::string const &)*arg1,(UMS_Data::LocalAccount const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_deleteLocalAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "userId",(char *) "machineId", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:deleteLocalAccount",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "deleteLocalAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteLocalAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "deleteLocalAccount" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteLocalAccount" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "deleteLocalAccount" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteLocalAccount" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    result = (int)vishnu::deleteLocalAccount((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_saveConfiguration(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::Configuration *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "config", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:saveConfiguration",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "saveConfiguration" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveConfiguration" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__Configuration,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "saveConfiguration" "', argument " "2"" of type '" "UMS_Data::Configuration &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "saveConfiguration" "', argument " "2"" of type '" "UMS_Data::Configuration &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::Configuration * >(argp2);
  try {
    result = (int)vishnu::saveConfiguration((std::string const &)*arg1,*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_restoreConfiguration(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "filePath", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:restoreConfiguration",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "restoreConfiguration" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "restoreConfiguration" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "restoreConfiguration" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "restoreConfiguration" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (int)vishnu::restoreConfiguration((std::string const &)*arg1,(std::string const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_configureOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::OptionValue *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "optionValue", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:configureOption",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "configureOption" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "configureOption" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__OptionValue,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "configureOption" "', argument " "2"" of type '" "UMS_Data::OptionValue const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "configureOption" "', argument " "2"" of type '" "UMS_Data::OptionValue const &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::OptionValue * >(argp2);
  try {
    result = (int)vishnu::configureOption((std::string const &)*arg1,(UMS_Data::OptionValue const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_configureDefaultOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::OptionValue *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "optionValue", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:configureDefaultOption",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "configureDefaultOption" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "configureDefaultOption" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__OptionValue,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "configureDefaultOption" "', argument " "2"" of type '" "UMS_Data::OptionValue const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "configureDefaultOption" "', argument " "2"" of type '" "UMS_Data::OptionValue const &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::OptionValue * >(argp2);
  try {
    result = (int)vishnu::configureDefaultOption((std::string const &)*arg1,(UMS_Data::OptionValue const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listSessions(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::ListSessions *arg2 = 0 ;
  UMS_Data::ListSessionOptions const &arg3_defvalue = UMS_Data::ListSessionOptions() ;
  UMS_Data::ListSessionOptions *arg3 = (UMS_Data::ListSessionOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  UMS_Data::ListSessions temp2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "options", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:listSessions",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listSessions" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listSessions" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_UMS_Data__ListSessionOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "listSessions" "', argument " "3"" of type '" "UMS_Data::ListSessionOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listSessions" "', argument " "3"" of type '" "UMS_Data::ListSessionOptions const &""'"); 
    }
    arg3 = reinterpret_cast< UMS_Data::ListSessionOptions * >(argp3);
  }
  try {
    result = (int)vishnu::listSessions((std::string const &)*arg1,*arg2,(UMS_Data::ListSessionOptions const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListSessions)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListSessions to receive the object
    PyObject *mylist = PyList_New(arg2->getSessions().size());
    // Instanciating a ListSessions object
    UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
    // For each item of the ListSessions
    for (int i = 0; i < arg2->getSessions().size() ; ++i) {
      // Getting the corresponding swig Session    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("UMS_Data::Session")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListSessions (because emf destroys its objects at the end)
      UMS_Data::Session* object = ecoreFactory->createSession();
      // Copying the object
      *object = *((*(&arg2))->getSessions().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListSessions
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListSessions to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listLocalAccounts(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::ListLocalAccounts *arg2 = 0 ;
  UMS_Data::ListLocalAccOptions const &arg3_defvalue = UMS_Data::ListLocalAccOptions() ;
  UMS_Data::ListLocalAccOptions *arg3 = (UMS_Data::ListLocalAccOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  UMS_Data::ListLocalAccounts temp2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "options", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:listLocalAccounts",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listLocalAccounts" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listLocalAccounts" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_UMS_Data__ListLocalAccOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "listLocalAccounts" "', argument " "3"" of type '" "UMS_Data::ListLocalAccOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listLocalAccounts" "', argument " "3"" of type '" "UMS_Data::ListLocalAccOptions const &""'"); 
    }
    arg3 = reinterpret_cast< UMS_Data::ListLocalAccOptions * >(argp3);
  }
  try {
    result = (int)vishnu::listLocalAccounts((std::string const &)*arg1,*arg2,(UMS_Data::ListLocalAccOptions const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListLocalAccounts)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListLocalAccounts to receive the object
    PyObject *mylist = PyList_New(arg2->getAccounts().size());
    // Instanciating a ListLocalAccounts object
    UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
    // For each item of the ListLocalAccounts
    for (int i = 0; i < arg2->getAccounts().size() ; ++i) {
      // Getting the corresponding swig LocalAccount    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("UMS_Data::LocalAccount")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListLocalAccounts (because emf destroys its objects at the end)
      UMS_Data::LocalAccount* object = ecoreFactory->createLocalAccount();
      // Copying the object
      *object = *((*(&arg2))->getAccounts().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListLocalAccounts
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListLocalAccounts to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listMachines(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::ListMachines *arg2 = 0 ;
  UMS_Data::ListMachineOptions const &arg3_defvalue = UMS_Data::ListMachineOptions() ;
  UMS_Data::ListMachineOptions *arg3 = (UMS_Data::ListMachineOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  UMS_Data::ListMachines temp2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "options", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:listMachines",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listMachines" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listMachines" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_UMS_Data__ListMachineOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "listMachines" "', argument " "3"" of type '" "UMS_Data::ListMachineOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listMachines" "', argument " "3"" of type '" "UMS_Data::ListMachineOptions const &""'"); 
    }
    arg3 = reinterpret_cast< UMS_Data::ListMachineOptions * >(argp3);
  }
  try {
    result = (int)vishnu::listMachines((std::string const &)*arg1,*arg2,(UMS_Data::ListMachineOptions const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListMachines)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListMachines to receive the object
    PyObject *mylist = PyList_New(arg2->getMachines().size());
    // Instanciating a ListMachines object
    UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
    // For each item of the ListMachines
    for (int i = 0; i < arg2->getMachines().size() ; ++i) {
      // Getting the corresponding swig Machine    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("UMS_Data::Machine")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListMachines (because emf destroys its objects at the end)
      UMS_Data::Machine* object = ecoreFactory->createMachine();
      // Copying the object
      *object = *((*(&arg2))->getMachines().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListMachines
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListMachines to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listHistoryCmd(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::ListCommands *arg2 = 0 ;
  UMS_Data::ListCmdOptions const &arg3_defvalue = UMS_Data::ListCmdOptions() ;
  UMS_Data::ListCmdOptions *arg3 = (UMS_Data::ListCmdOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  UMS_Data::ListCommands temp2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "options", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:listHistoryCmd",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listHistoryCmd" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listHistoryCmd" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_UMS_Data__ListCmdOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "listHistoryCmd" "', argument " "3"" of type '" "UMS_Data::ListCmdOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listHistoryCmd" "', argument " "3"" of type '" "UMS_Data::ListCmdOptions const &""'"); 
    }
    arg3 = reinterpret_cast< UMS_Data::ListCmdOptions * >(argp3);
  }
  try {
    result = (int)vishnu::listHistoryCmd((std::string const &)*arg1,*arg2,(UMS_Data::ListCmdOptions const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListCommands)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListCommands to receive the object
    PyObject *mylist = PyList_New(arg2->getCommands().size());
    // Instanciating a ListCommands object
    UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
    // For each item of the ListCommands
    for (int i = 0; i < arg2->getCommands().size() ; ++i) {
      // Getting the corresponding swig Command    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("UMS_Data::Command")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListCommands (because emf destroys its objects at the end)
      UMS_Data::Command* object = ecoreFactory->createCommand();
      // Copying the object
      *object = *((*(&arg2))->getCommands().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListCommands
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListCommands to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::ListOptionsValues *arg2 = 0 ;
  UMS_Data::ListOptOptions const &arg3_defvalue = UMS_Data::ListOptOptions() ;
  UMS_Data::ListOptOptions *arg3 = (UMS_Data::ListOptOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  UMS_Data::ListOptionsValues temp2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "options", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:listOptions",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listOptions" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listOptions" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_UMS_Data__ListOptOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "listOptions" "', argument " "3"" of type '" "UMS_Data::ListOptOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listOptions" "', argument " "3"" of type '" "UMS_Data::ListOptOptions const &""'"); 
    }
    arg3 = reinterpret_cast< UMS_Data::ListOptOptions * >(argp3);
  }
  try {
    result = (int)vishnu::listOptions((std::string const &)*arg1,*arg2,(UMS_Data::ListOptOptions const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListOptionsValues)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListOptionsValues to receive the object
    PyObject *mylist = PyList_New(arg2->getOptionValues().size());
    // Instanciating a ListOptionsValues object
    UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
    // For each item of the ListOptionsValues
    for (int i = 0; i < arg2->getOptionValues().size() ; ++i) {
      // Getting the corresponding swig OptionValue    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("UMS_Data::OptionValue")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListOptionsValues (because emf destroys its objects at the end)
      UMS_Data::OptionValue* object = ecoreFactory->createOptionValue();
      // Copying the object
      *object = *((*(&arg2))->getOptionValues().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListOptionsValues
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListOptionsValues to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listUsers(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::ListUsers *arg2 = 0 ;
  UMS_Data::ListUsersOptions const &arg3_defvalue = UMS_Data::ListUsersOptions() ;
  UMS_Data::ListUsersOptions *arg3 = (UMS_Data::ListUsersOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  UMS_Data::ListUsers temp2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "listOptions", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:listUsers",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listUsers" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listUsers" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_UMS_Data__ListUsersOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "listUsers" "', argument " "3"" of type '" "UMS_Data::ListUsersOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listUsers" "', argument " "3"" of type '" "UMS_Data::ListUsersOptions const &""'"); 
    }
    arg3 = reinterpret_cast< UMS_Data::ListUsersOptions * >(argp3);
  }
  try {
    result = (int)vishnu::listUsers((std::string const &)*arg1,*arg2,(UMS_Data::ListUsersOptions const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListUsers)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListUsers to receive the object
    PyObject *mylist = PyList_New(arg2->getUsers().size());
    // Instanciating a ListUsers object
    UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
    // For each item of the ListUsers
    for (int i = 0; i < arg2->getUsers().size() ; ++i) {
      // Getting the corresponding swig User    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("UMS_Data::User")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListUsers (because emf destroys its objects at the end)
      UMS_Data::User* object = ecoreFactory->createUser();
      // Copying the object
      *object = *((*(&arg2))->getUsers().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListUsers
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListUsers to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_addAuthSystem(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::AuthSystem *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "newAuthSys", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:addAuthSystem",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "addAuthSystem" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addAuthSystem" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__AuthSystem,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "addAuthSystem" "', argument " "2"" of type '" "UMS_Data::AuthSystem &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addAuthSystem" "', argument " "2"" of type '" "UMS_Data::AuthSystem &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::AuthSystem * >(argp2);
  try {
    result = (int)vishnu::addAuthSystem((std::string const &)*arg1,*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_updateAuthSystem(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::AuthSystem *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "AuthSys", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:updateAuthSystem",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "updateAuthSystem" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateAuthSystem" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__AuthSystem,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "updateAuthSystem" "', argument " "2"" of type '" "UMS_Data::AuthSystem &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateAuthSystem" "', argument " "2"" of type '" "UMS_Data::AuthSystem &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::AuthSystem * >(argp2);
  try {
    result = (int)vishnu::updateAuthSystem((std::string const &)*arg1,*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_deleteAuthSystem(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "authSystemId", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:deleteAuthSystem",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "deleteAuthSystem" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteAuthSystem" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "deleteAuthSystem" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteAuthSystem" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (int)vishnu::deleteAuthSystem((std::string const &)*arg1,(std::string const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listAuthSystems(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::ListAuthSystems *arg2 = 0 ;
  UMS_Data::ListAuthSysOptions const &arg3_defvalue = UMS_Data::ListAuthSysOptions() ;
  UMS_Data::ListAuthSysOptions *arg3 = (UMS_Data::ListAuthSysOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  UMS_Data::ListAuthSystems temp2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "options", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:listAuthSystems",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listAuthSystems" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listAuthSystems" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_UMS_Data__ListAuthSysOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "listAuthSystems" "', argument " "3"" of type '" "UMS_Data::ListAuthSysOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listAuthSystems" "', argument " "3"" of type '" "UMS_Data::ListAuthSysOptions const &""'"); 
    }
    arg3 = reinterpret_cast< UMS_Data::ListAuthSysOptions * >(argp3);
  }
  try {
    result = (int)vishnu::listAuthSystems((std::string const &)*arg1,*arg2,(UMS_Data::ListAuthSysOptions const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListAuthSystems)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListAuthSystems to receive the object
    PyObject *mylist = PyList_New(arg2->getAuthSystems().size());
    // Instanciating a ListAuthSystems object
    UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
    // For each item of the ListAuthSystems
    for (int i = 0; i < arg2->getAuthSystems().size() ; ++i) {
      // Getting the corresponding swig AuthSystem    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("UMS_Data::AuthSystem")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListAuthSystems (because emf destroys its objects at the end)
      UMS_Data::AuthSystem* object = ecoreFactory->createAuthSystem();
      // Copying the object
      *object = *((*(&arg2))->getAuthSystems().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListAuthSystems
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListAuthSystems to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_addAuthAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::AuthAccount *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "authAccount", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:addAuthAccount",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "addAuthAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addAuthAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__AuthAccount,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "addAuthAccount" "', argument " "2"" of type '" "UMS_Data::AuthAccount const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addAuthAccount" "', argument " "2"" of type '" "UMS_Data::AuthAccount const &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::AuthAccount * >(argp2);
  try {
    result = (int)vishnu::addAuthAccount((std::string const &)*arg1,(UMS_Data::AuthAccount const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_updateAuthAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::AuthAccount *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "authenAccount", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:updateAuthAccount",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "updateAuthAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateAuthAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_UMS_Data__AuthAccount,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "updateAuthAccount" "', argument " "2"" of type '" "UMS_Data::AuthAccount const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "updateAuthAccount" "', argument " "2"" of type '" "UMS_Data::AuthAccount const &""'"); 
  }
  arg2 = reinterpret_cast< UMS_Data::AuthAccount * >(argp2);
  try {
    result = (int)vishnu::updateAuthAccount((std::string const &)*arg1,(UMS_Data::AuthAccount const &)*arg2);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_deleteAuthAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string const &arg3_defvalue = "" ;
  std::string *arg3 = (std::string *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "authSystemId",(char *) "userIdOption", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:deleteAuthAccount",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "deleteAuthAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteAuthAccount" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "deleteAuthAccount" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteAuthAccount" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string(obj2, &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "deleteAuthAccount" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "deleteAuthAccount" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
  }
  try {
    result = (int)vishnu::deleteAuthAccount((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listAuthAccounts(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  UMS_Data::ListAuthAccounts *arg2 = 0 ;
  UMS_Data::ListAuthAccOptions const &arg3_defvalue = UMS_Data::ListAuthAccOptions() ;
  UMS_Data::ListAuthAccOptions *arg3 = (UMS_Data::ListAuthAccOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  UMS_Data::ListAuthAccounts temp2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "options", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:listAuthAccounts",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listAuthAccounts" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listAuthAccounts" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_UMS_Data__ListAuthAccOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "listAuthAccounts" "', argument " "3"" of type '" "UMS_Data::ListAuthAccOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listAuthAccounts" "', argument " "3"" of type '" "UMS_Data::ListAuthAccOptions const &""'"); 
    }
    arg3 = reinterpret_cast< UMS_Data::ListAuthAccOptions * >(argp3);
  }
  try {
    result = (int)vishnu::listAuthAccounts((std::string const &)*arg1,*arg2,(UMS_Data::ListAuthAccOptions const &)*arg3);
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListAuthAccounts)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListAuthAccounts to receive the object
    PyObject *mylist = PyList_New(arg2->getAuthAccounts().size());
    // Instanciating a ListAuthAccounts object
    UMS_Data::UMS_DataFactory * ecoreFactory = UMS_Data::UMS_DataFactory::_instance();
    // For each item of the ListAuthAccounts
    for (int i = 0; i < arg2->getAuthAccounts().size() ; ++i) {
      // Getting the corresponding swig AuthAccount    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("UMS_Data::AuthAccount")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListAuthAccounts (because emf destroys its objects at the end)
      UMS_Data::AuthAccount* object = ecoreFactory->createAuthAccount();
      // Copying the object
      *object = *((*(&arg2))->getAuthAccounts().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListAuthAccounts
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListAuthAccounts to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vishnuInitialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  char **arg3 = (char **) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "cfg", NULL 
  };
  int result;
  
  {
    arg2 = 0;
  }
  {
    arg3 = NULL;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:vishnuInitialize",kwnames,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vishnuInitialize" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)vishnu::vishnuInitialize(arg1,arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_vishnuFinalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!PyArg_ParseTuple(args,(char *)":vishnuFinalize")) SWIG_fail;
  vishnu::vishnuFinalize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int Swig_var_VISHNU_OK_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable VISHNU_OK is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_VISHNU_OK_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(VISHNU_OK));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_delete_VishnuException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_VishnuException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VishnuException" "', argument " "1"" of type '" "VishnuException *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_getTypeI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VishnuException::ExceptionType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VishnuException_getTypeI",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_getTypeI" "', argument " "1"" of type '" "VishnuException const *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  result = (VishnuException::ExceptionType)((VishnuException const *)arg1)->getTypeI();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_getTypeS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VishnuException_getTypeS",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_getTypeS" "', argument " "1"" of type '" "VishnuException const *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  result = ((VishnuException const *)arg1)->getTypeS();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_what(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VishnuException_what",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_what" "', argument " "1"" of type '" "VishnuException const *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  result = (char *)((VishnuException const *)arg1)->what();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_getMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VishnuException_getMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_getMsg" "', argument " "1"" of type '" "VishnuException const *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  result = ((VishnuException const *)arg1)->getMsg();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_getMsgComp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VishnuException_getMsgComp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_getMsgComp" "', argument " "1"" of type '" "VishnuException const *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  result = ((VishnuException const *)arg1)->getMsgComp();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_setType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  VishnuException::ExceptionType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "t", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:VishnuException_setType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_setType" "', argument " "1"" of type '" "VishnuException *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VishnuException_setType" "', argument " "2"" of type '" "VishnuException::ExceptionType""'");
  } 
  arg2 = static_cast< VishnuException::ExceptionType >(val2);
  (arg1)->setType(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_setMsgComp(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "m", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:VishnuException_setMsgComp",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_setMsgComp" "', argument " "1"" of type '" "VishnuException *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "VishnuException_setMsgComp" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  (arg1)->setMsgComp(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_setMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "val", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:VishnuException_setMsg",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_setMsg" "', argument " "1"" of type '" "VishnuException *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VishnuException_setMsg" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setMsg(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_appendMsgComp(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "s", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:VishnuException_appendMsgComp",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_appendMsgComp" "', argument " "1"" of type '" "VishnuException *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "VishnuException_appendMsgComp" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  (arg1)->appendMsgComp(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_getMsgI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VishnuException_getMsgI",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_getMsgI" "', argument " "1"" of type '" "VishnuException const *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  result = (int)((VishnuException const *)arg1)->getMsgI();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_initMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VishnuException_initMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_initMsg" "', argument " "1"" of type '" "VishnuException *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  (arg1)->initMsg();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VishnuException_buildExceptionString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VishnuException *arg1 = (VishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:VishnuException_buildExceptionString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VishnuException_buildExceptionString" "', argument " "1"" of type '" "VishnuException const *""'"); 
  }
  arg1 = reinterpret_cast< VishnuException * >(argp1);
  result = ((VishnuException const *)arg1)->buildExceptionString();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VishnuException_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_VishnuException, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_ERRCODE_INVALID_PARAM_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVALID_PARAM is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVALID_PARAM_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVALID_PARAM));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_FILENOTFOUND_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_FILENOTFOUND is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_FILENOTFOUND_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_FILENOTFOUND));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_CONFIGNOTFOUND_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_CONFIGNOTFOUND is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_CONFIGNOTFOUND_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_CONFIGNOTFOUND));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_CLI_ERROR_NO_SESSION_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_CLI_ERROR_NO_SESSION is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_CLI_ERROR_NO_SESSION_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_CLI_ERROR_NO_SESSION));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_CLI_ERROR_MISSING_PARAMETER_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_CLI_ERROR_MISSING_PARAMETER is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_CLI_ERROR_MISSING_PARAMETER_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_CLI_ERROR_MISSING_PARAMETER));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_CLI_ERROR_DIET_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_CLI_ERROR_DIET is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_CLI_ERROR_DIET_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_CLI_ERROR_DIET));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_CLI_ERROR_RUNTIME_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_CLI_ERROR_RUNTIME is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_CLI_ERROR_RUNTIME_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_CLI_ERROR_RUNTIME));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_UserException__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UserException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_UserException")) SWIG_fail;
  result = (UserException *)new UserException();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UserException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UserException__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UserException *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  UserException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_UserException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_UserException,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_UserException" "', argument " "1"" of type '" "UserException const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UserException" "', argument " "1"" of type '" "UserException const &""'"); 
  }
  arg1 = reinterpret_cast< UserException * >(argp1);
  result = (UserException *)new UserException((UserException const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UserException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UserException__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  std::string arg2 = (std::string) "" ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  UserException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O|O:new_UserException",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UserException" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  if (obj1) {
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string(obj1, &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_UserException" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
  }
  result = (UserException *)new UserException(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UserException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UserException(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_UserException__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_UserException, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_UserException__SWIG_1(self, args);
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_UserException__SWIG_2(self, args);
      }
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_UserException__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_UserException'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    UserException()\n"
    "    UserException(UserException const &)\n"
    "    UserException(int,std::string)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_UserException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UserException *arg1 = (UserException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_UserException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UserException, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UserException" "', argument " "1"" of type '" "UserException *""'"); 
  }
  arg1 = reinterpret_cast< UserException * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UserException_getTypeS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UserException *arg1 = (UserException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UserException_getTypeS",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UserException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserException_getTypeS" "', argument " "1"" of type '" "UserException const *""'"); 
  }
  arg1 = reinterpret_cast< UserException * >(argp1);
  result = ((UserException const *)arg1)->getTypeS();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UserException_getMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UserException *arg1 = (UserException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UserException_getMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UserException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserException_getMsg" "', argument " "1"" of type '" "UserException const *""'"); 
  }
  arg1 = reinterpret_cast< UserException * >(argp1);
  result = ((UserException const *)arg1)->getMsg();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UserException_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UserException, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_ERRCODE_AUTHENTERR_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_AUTHENTERR is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_AUTHENTERR_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_AUTHENTERR));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_DIET_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_DIET is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_DIET_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_DIET));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_DBERR_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_DBERR is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_DBERR_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_DBERR));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_DBCONN_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_DBCONN is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_DBCONN_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_DBCONN));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_SYSTEM_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_SYSTEM is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_SYSTEM_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_SYSTEM));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_INVCOMP_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVCOMP is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVCOMP_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVCOMP));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_INVMAPPER_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVMAPPER is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVMAPPER_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVMAPPER));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_INVEXCEP_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVEXCEP is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVEXCEP_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVEXCEP));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_INVDATA_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVDATA is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVDATA_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVDATA));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_SSH_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_SSH is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_SSH_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_SSH));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_SystemException__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SystemException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SystemException")) SWIG_fail;
  result = (SystemException *)new SystemException();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SystemException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SystemException__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SystemException *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SystemException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SystemException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_SystemException,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SystemException" "', argument " "1"" of type '" "SystemException const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SystemException" "', argument " "1"" of type '" "SystemException const &""'"); 
  }
  arg1 = reinterpret_cast< SystemException * >(argp1);
  result = (SystemException *)new SystemException((SystemException const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SystemException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SystemException__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  std::string arg2 = (std::string) "" ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SystemException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O|O:new_SystemException",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SystemException" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  if (obj1) {
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string(obj1, &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SystemException" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
  }
  result = (SystemException *)new SystemException(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SystemException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SystemException(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SystemException__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_SystemException, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SystemException__SWIG_1(self, args);
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_SystemException__SWIG_2(self, args);
      }
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SystemException__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SystemException'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SystemException()\n"
    "    SystemException(SystemException const &)\n"
    "    SystemException(int,std::string)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SystemException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SystemException *arg1 = (SystemException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SystemException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SystemException, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SystemException" "', argument " "1"" of type '" "SystemException *""'"); 
  }
  arg1 = reinterpret_cast< SystemException * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemException_getMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SystemException *arg1 = (SystemException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SystemException_getMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SystemException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemException_getMsg" "', argument " "1"" of type '" "SystemException const *""'"); 
  }
  arg1 = reinterpret_cast< SystemException * >(argp1);
  result = ((SystemException const *)arg1)->getMsg();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemException_getTypeS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SystemException *arg1 = (SystemException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SystemException_getTypeS",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SystemException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemException_getTypeS" "', argument " "1"" of type '" "SystemException const *""'"); 
  }
  arg1 = reinterpret_cast< SystemException * >(argp1);
  result = ((SystemException const *)arg1)->getTypeS();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemException_initMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SystemException *arg1 = (SystemException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SystemException_initMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SystemException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemException_initMsg" "', argument " "1"" of type '" "SystemException *""'"); 
  }
  arg1 = reinterpret_cast< SystemException * >(argp1);
  (arg1)->initMsg();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SystemException_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_SystemException, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_USER_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_USER is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_USER_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_USER));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_USERID_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_USERID is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_USERID_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_USERID));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_USERID_EXISTING_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_USERID_EXISTING is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_USERID_EXISTING_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_USERID_EXISTING));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_USER_LOCKED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_USER_LOCKED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_USER_LOCKED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_USER_LOCKED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_USER_ALREADY_LOCKED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_USER_ALREADY_LOCKED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_USER_ALREADY_LOCKED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_USER_ALREADY_LOCKED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_NO_ADMIN_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_NO_ADMIN is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_NO_ADMIN_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_NO_ADMIN));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_TEMPORARY_PASSWORD_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_TEMPORARY_PASSWORD is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_TEMPORARY_PASSWORD_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_TEMPORARY_PASSWORD));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_INVALID_MAIL_ADRESS_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVALID_MAIL_ADRESS is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVALID_MAIL_ADRESS_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVALID_MAIL_ADRESS));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_SESSIONKEY_NOT_FOUND_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_SESSIONKEY_NOT_FOUND is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_SESSIONKEY_NOT_FOUND_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_SESSIONKEY_NOT_FOUND));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_SESSIONKEY_EXPIRED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_SESSIONKEY_EXPIRED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_SESSIONKEY_EXPIRED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_SESSIONKEY_EXPIRED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_SESSION_ID_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_SESSION_ID is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_SESSION_ID_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_SESSION_ID));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_COMMAND_RUNNING_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_COMMAND_RUNNING is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_COMMAND_RUNNING_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_COMMAND_RUNNING));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_MACHINE_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_MACHINE is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_MACHINE_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_MACHINE));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_MACHINE_EXISTING_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_MACHINE_EXISTING is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_MACHINE_EXISTING_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_MACHINE_EXISTING));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_MACHINE_LOCKED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_MACHINE_LOCKED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_MACHINE_LOCKED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_MACHINE_LOCKED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_MACHINE_ALREADY_LOCKED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_MACHINE_ALREADY_LOCKED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_MACHINE_ALREADY_LOCKED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_MACHINE_ALREADY_LOCKED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNUSABLE_MACHINE_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNUSABLE_MACHINE is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNUSABLE_MACHINE_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNUSABLE_MACHINE));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_LOCAL_ACCOUNT_EXIST_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_LOCAL_ACCOUNT_EXIST is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_LOCAL_ACCOUNT_EXIST_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_LOCAL_ACCOUNT_EXIST));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_LOCAL_ACCOUNT_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_LOCAL_ACCOUNT is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_LOCAL_ACCOUNT_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_LOCAL_ACCOUNT));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_SAVE_CONFIG_ERROR_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_SAVE_CONFIG_ERROR is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_SAVE_CONFIG_ERROR_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_SAVE_CONFIG_ERROR));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_RESTORE_CONFIG_ERROR_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_RESTORE_CONFIG_ERROR is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_RESTORE_CONFIG_ERROR_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_RESTORE_CONFIG_ERROR));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_OPTION_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_OPTION is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_OPTION_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_OPTION));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_CLOSURE_MODE_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_CLOSURE_MODE is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_CLOSURE_MODE_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_CLOSURE_MODE));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_INCORRECT_TIMEOUT_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INCORRECT_TIMEOUT is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INCORRECT_TIMEOUT_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INCORRECT_TIMEOUT));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_INCORRECT_TRANSFER_CMD_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INCORRECT_TRANSFER_CMD is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INCORRECT_TRANSFER_CMD_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INCORRECT_TRANSFER_CMD));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_ROOT_USER_ONLY_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_ROOT_USER_ONLY is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_ROOT_USER_ONLY_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_ROOT_USER_ONLY));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_LOGIN_ALREADY_USED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_LOGIN_ALREADY_USED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_LOGIN_ALREADY_USED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_LOGIN_ALREADY_USED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_AUTH_SYSTEM_TYPE_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_AUTH_SYSTEM_TYPE is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_AUTH_SYSTEM_TYPE_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_AUTH_SYSTEM_TYPE));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_AUTH_SYSTEM_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_AUTH_SYSTEM is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_AUTH_SYSTEM_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_AUTH_SYSTEM));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_AUTH_SYSTEM_ALREADY_LOCKED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_AUTH_SYSTEM_ALREADY_LOCKED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_AUTH_SYSTEM_ALREADY_LOCKED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_AUTH_SYSTEM_ALREADY_LOCKED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_AUTH_SYSTEM_ALREADY_EXIST_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_AUTH_SYSTEM_ALREADY_EXIST is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_AUTH_SYSTEM_ALREADY_EXIST_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_AUTH_SYSTEM_ALREADY_EXIST));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_AUTH_ACCOUNT_EXIST_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_AUTH_ACCOUNT_EXIST is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_AUTH_ACCOUNT_EXIST_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_AUTH_ACCOUNT_EXIST));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_AUTH_ACCOUNT_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_AUTH_ACCOUNT is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_AUTH_ACCOUNT_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_AUTH_ACCOUNT));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_ENCRYPTION_METHOD_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_ENCRYPTION_METHOD is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_ENCRYPTION_METHOD_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_ENCRYPTION_METHOD));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_READONLY_ACCOUNT_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_READONLY_ACCOUNT is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_READONLY_ACCOUNT_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_READONLY_ACCOUNT));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_UMSVishnuException__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_UMSVishnuException")) SWIG_fail;
  result = (UMSVishnuException *)new UMSVishnuException();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UMSVishnuException__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMSVishnuException *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  UMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_UMSVishnuException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_UMSVishnuException,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_UMSVishnuException" "', argument " "1"" of type '" "UMSVishnuException const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UMSVishnuException" "', argument " "1"" of type '" "UMSVishnuException const &""'"); 
  }
  arg1 = reinterpret_cast< UMSVishnuException * >(argp1);
  result = (UMSVishnuException *)new UMSVishnuException((UMSVishnuException const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UMSVishnuException__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  std::string arg2 = (std::string) "" ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  UMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O|O:new_UMSVishnuException",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UMSVishnuException" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  if (obj1) {
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string(obj1, &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_UMSVishnuException" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
  }
  result = (UMSVishnuException *)new UMSVishnuException(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_UMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UMSVishnuException(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_UMSVishnuException__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_UMSVishnuException, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_UMSVishnuException__SWIG_1(self, args);
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_UMSVishnuException__SWIG_2(self, args);
      }
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_UMSVishnuException__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_UMSVishnuException'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    UMSVishnuException()\n"
    "    UMSVishnuException(UMSVishnuException const &)\n"
    "    UMSVishnuException(int,std::string)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_UMSVishnuException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMSVishnuException *arg1 = (UMSVishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_UMSVishnuException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMSVishnuException, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UMSVishnuException" "', argument " "1"" of type '" "UMSVishnuException *""'"); 
  }
  arg1 = reinterpret_cast< UMSVishnuException * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UMSVishnuException_initMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  UMSVishnuException *arg1 = (UMSVishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UMSVishnuException_initMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_UMSVishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UMSVishnuException_initMsg" "', argument " "1"" of type '" "UMSVishnuException *""'"); 
  }
  arg1 = reinterpret_cast< UMSVishnuException * >(argp1);
  (arg1)->initMsg();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UMSVishnuException_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_UMSVishnuException, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_BATCH_SCHEDULER_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_BATCH_SCHEDULER is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_BATCH_SCHEDULER_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_BATCH_SCHEDULER));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_BATCH_SCHEDULER_ERROR_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_BATCH_SCHEDULER_ERROR is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_BATCH_SCHEDULER_ERROR_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_BATCH_SCHEDULER_ERROR));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_JOBID_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_JOBID is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_JOBID_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_JOBID));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_PERMISSION_DENIED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_PERMISSION_DENIED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_PERMISSION_DENIED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_PERMISSION_DENIED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_ALREADY_TERMINATED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_ALREADY_TERMINATED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_ALREADY_TERMINATED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_ALREADY_TERMINATED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_ALREADY_CANCELED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_ALREADY_CANCELED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_ALREADY_CANCELED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_ALREADY_CANCELED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_JOB_IS_NOT_TERMINATED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_JOB_IS_NOT_TERMINATED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_JOB_IS_NOT_TERMINATED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_JOB_IS_NOT_TERMINATED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_ALREADY_DOWNLOADED_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_ALREADY_DOWNLOADED is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_ALREADY_DOWNLOADED_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_ALREADY_DOWNLOADED));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_WORKID_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_WORKID is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_WORKID_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_WORKID));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_TMSVishnuException__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TMSVishnuException")) SWIG_fail;
  result = (TMSVishnuException *)new TMSVishnuException();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMSVishnuException__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMSVishnuException *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  TMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_TMSVishnuException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_TMSVishnuException,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TMSVishnuException" "', argument " "1"" of type '" "TMSVishnuException const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TMSVishnuException" "', argument " "1"" of type '" "TMSVishnuException const &""'"); 
  }
  arg1 = reinterpret_cast< TMSVishnuException * >(argp1);
  result = (TMSVishnuException *)new TMSVishnuException((TMSVishnuException const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMSVishnuException__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  std::string arg2 = (std::string) "" ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  TMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O|O:new_TMSVishnuException",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TMSVishnuException" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  if (obj1) {
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string(obj1, &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_TMSVishnuException" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
  }
  result = (TMSVishnuException *)new TMSVishnuException(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TMSVishnuException(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_TMSVishnuException__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_TMSVishnuException, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_TMSVishnuException__SWIG_1(self, args);
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_TMSVishnuException__SWIG_2(self, args);
      }
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_TMSVishnuException__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_TMSVishnuException'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    TMSVishnuException()\n"
    "    TMSVishnuException(TMSVishnuException const &)\n"
    "    TMSVishnuException(int,std::string)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TMSVishnuException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMSVishnuException *arg1 = (TMSVishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TMSVishnuException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMSVishnuException, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TMSVishnuException" "', argument " "1"" of type '" "TMSVishnuException *""'"); 
  }
  arg1 = reinterpret_cast< TMSVishnuException * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TMSVishnuException_initMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TMSVishnuException *arg1 = (TMSVishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TMSVishnuException_initMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TMSVishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TMSVishnuException_initMsg" "', argument " "1"" of type '" "TMSVishnuException *""'"); 
  }
  arg1 = reinterpret_cast< TMSVishnuException * >(argp1);
  (arg1)->initMsg();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TMSVishnuException_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TMSVishnuException, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_ERRCODE_INVPROCESS_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVPROCESS is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVPROCESS_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVPROCESS));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_INVVISHNU_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVVISHNU is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVVISHNU_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVVISHNU));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_INVEXPORT_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVEXPORT is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVEXPORT_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVEXPORT));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_IMSVishnuException__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_IMSVishnuException")) SWIG_fail;
  result = (IMSVishnuException *)new IMSVishnuException();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IMSVishnuException__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMSVishnuException *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_IMSVishnuException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IMSVishnuException,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IMSVishnuException" "', argument " "1"" of type '" "IMSVishnuException const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IMSVishnuException" "', argument " "1"" of type '" "IMSVishnuException const &""'"); 
  }
  arg1 = reinterpret_cast< IMSVishnuException * >(argp1);
  result = (IMSVishnuException *)new IMSVishnuException((IMSVishnuException const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IMSVishnuException__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  std::string arg2 = (std::string) "" ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O|O:new_IMSVishnuException",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IMSVishnuException" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  if (obj1) {
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string(obj1, &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_IMSVishnuException" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
  }
  result = (IMSVishnuException *)new IMSVishnuException(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IMSVishnuException(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IMSVishnuException__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IMSVishnuException, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IMSVishnuException__SWIG_1(self, args);
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_IMSVishnuException__SWIG_2(self, args);
      }
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_IMSVishnuException__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_IMSVishnuException'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IMSVishnuException()\n"
    "    IMSVishnuException(IMSVishnuException const &)\n"
    "    IMSVishnuException(int,std::string)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IMSVishnuException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMSVishnuException *arg1 = (IMSVishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_IMSVishnuException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMSVishnuException, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IMSVishnuException" "', argument " "1"" of type '" "IMSVishnuException *""'"); 
  }
  arg1 = reinterpret_cast< IMSVishnuException * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IMSVishnuException_initMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IMSVishnuException *arg1 = (IMSVishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IMSVishnuException_initMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IMSVishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IMSVishnuException_initMsg" "', argument " "1"" of type '" "IMSVishnuException *""'"); 
  }
  arg1 = reinterpret_cast< IMSVishnuException * >(argp1);
  (arg1)->initMsg();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IMSVishnuException_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IMSVishnuException, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_ERRCODE_INVALID_PATH_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_INVALID_PATH is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_INVALID_PATH_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_INVALID_PATH));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_RUNTIME_ERROR_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_RUNTIME_ERROR is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_RUNTIME_ERROR_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_RUNTIME_ERROR));
  return pyobj;
}


SWIGINTERN int Swig_var_ERRCODE_UNKNOWN_FILETRANSFERID_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ERRCODE_UNKNOWN_FILETRANSFERID is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ERRCODE_UNKNOWN_FILETRANSFERID_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ERRCODE_UNKNOWN_FILETRANSFERID));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_FMSVishnuException__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_FMSVishnuException")) SWIG_fail;
  result = (FMSVishnuException *)new FMSVishnuException();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FMSVishnuException__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMSVishnuException *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_FMSVishnuException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_FMSVishnuException,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FMSVishnuException" "', argument " "1"" of type '" "FMSVishnuException const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FMSVishnuException" "', argument " "1"" of type '" "FMSVishnuException const &""'"); 
  }
  arg1 = reinterpret_cast< FMSVishnuException * >(argp1);
  result = (FMSVishnuException *)new FMSVishnuException((FMSVishnuException const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FMSVishnuException__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  std::string arg2 = (std::string) "" ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  FMSVishnuException *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O|O:new_FMSVishnuException",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FMSVishnuException" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  if (obj1) {
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string(obj1, &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_FMSVishnuException" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
  }
  result = (FMSVishnuException *)new FMSVishnuException(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FMSVishnuException, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FMSVishnuException(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_FMSVishnuException__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_FMSVishnuException, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_FMSVishnuException__SWIG_1(self, args);
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_FMSVishnuException__SWIG_2(self, args);
      }
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_FMSVishnuException__SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_FMSVishnuException'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    FMSVishnuException()\n"
    "    FMSVishnuException(FMSVishnuException const &)\n"
    "    FMSVishnuException(int,std::string)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FMSVishnuException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMSVishnuException *arg1 = (FMSVishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_FMSVishnuException",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMSVishnuException, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FMSVishnuException" "', argument " "1"" of type '" "FMSVishnuException *""'"); 
  }
  arg1 = reinterpret_cast< FMSVishnuException * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMSVishnuException_initMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FMSVishnuException *arg1 = (FMSVishnuException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:FMSVishnuException_initMsg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FMSVishnuException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMSVishnuException_initMsg" "', argument " "1"" of type '" "FMSVishnuException *""'"); 
  }
  arg1 = reinterpret_cast< FMSVishnuException * >(argp1);
  (arg1)->initMsg();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FMSVishnuException_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FMSVishnuException, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_submitJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  TMS_Data::Job *arg4 = 0 ;
  TMS_Data::SubmitOptions const &arg5_defvalue = TMS_Data::SubmitOptions() ;
  TMS_Data::SubmitOptions *arg5 = (TMS_Data::SubmitOptions *) &arg5_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "scriptFilePath",(char *) "jobInfo",(char *) "options", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:submitJob",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "submitJob" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "submitJob" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "submitJob" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "submitJob" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "submitJob" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "submitJob" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_TMS_Data__Job,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "submitJob" "', argument " "4"" of type '" "TMS_Data::Job &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "submitJob" "', argument " "4"" of type '" "TMS_Data::Job &""'"); 
  }
  arg4 = reinterpret_cast< TMS_Data::Job * >(argp4);
  if (obj4) {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_TMS_Data__SubmitOptions,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "submitJob" "', argument " "5"" of type '" "TMS_Data::SubmitOptions const &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "submitJob" "', argument " "5"" of type '" "TMS_Data::SubmitOptions const &""'"); 
    }
    arg5 = reinterpret_cast< TMS_Data::SubmitOptions * >(argp5);
  }
  try {
    result = (int)vishnu::submitJob((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,*arg4,(TMS_Data::SubmitOptions const &)*arg5);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(TMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new TMSVishnuException(static_cast< const TMSVishnuException& >(_e))),SWIGTYPE_p_TMSVishnuException,SWIG_POINTER_OWN), "TMSVishnuException", SWIGTYPE_p_TMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_addWork(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  TMS_Data::Work *arg2 = 0 ;
  TMS_Data::AddWorkOptions const &arg3_defvalue = TMS_Data::AddWorkOptions() ;
  TMS_Data::AddWorkOptions *arg3 = (TMS_Data::AddWorkOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "newWork",(char *) "options", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:addWork",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "addWork" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addWork" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_TMS_Data__Work,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "addWork" "', argument " "2"" of type '" "TMS_Data::Work &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addWork" "', argument " "2"" of type '" "TMS_Data::Work &""'"); 
  }
  arg2 = reinterpret_cast< TMS_Data::Work * >(argp2);
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_TMS_Data__AddWorkOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "addWork" "', argument " "3"" of type '" "TMS_Data::AddWorkOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "addWork" "', argument " "3"" of type '" "TMS_Data::AddWorkOptions const &""'"); 
    }
    arg3 = reinterpret_cast< TMS_Data::AddWorkOptions * >(argp3);
  }
  try {
    result = (int)vishnu::addWork((std::string const &)*arg1,*arg2,(TMS_Data::AddWorkOptions const &)*arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(TMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new TMSVishnuException(static_cast< const TMSVishnuException& >(_e))),SWIGTYPE_p_TMSVishnuException,SWIG_POINTER_OWN), "TMSVishnuException", SWIGTYPE_p_TMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_cancelJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "jobId", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:cancelJob",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cancelJob" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cancelJob" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cancelJob" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cancelJob" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "cancelJob" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cancelJob" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    result = (int)vishnu::cancelJob((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(TMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new TMSVishnuException(static_cast< const TMSVishnuException& >(_e))),SWIGTYPE_p_TMSVishnuException,SWIG_POINTER_OWN), "TMSVishnuException", SWIGTYPE_p_TMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_getJobInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  TMS_Data::Job *arg4 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "jobId",(char *) "jobInfos", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:getJobInfo",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getJobInfo" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobInfo" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getJobInfo" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobInfo" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getJobInfo" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobInfo" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_TMS_Data__Job,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "getJobInfo" "', argument " "4"" of type '" "TMS_Data::Job &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobInfo" "', argument " "4"" of type '" "TMS_Data::Job &""'"); 
  }
  arg4 = reinterpret_cast< TMS_Data::Job * >(argp4);
  try {
    result = (int)vishnu::getJobInfo((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(TMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new TMSVishnuException(static_cast< const TMSVishnuException& >(_e))),SWIGTYPE_p_TMSVishnuException,SWIG_POINTER_OWN), "TMSVishnuException", SWIGTYPE_p_TMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listJobs(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  TMS_Data::ListJobs *arg3 = 0 ;
  TMS_Data::ListJobsOptions const &arg4_defvalue = TMS_Data::ListJobsOptions() ;
  TMS_Data::ListJobsOptions *arg4 = (TMS_Data::ListJobsOptions *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  TMS_Data::ListJobs temp3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "options", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:listJobs",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listJobs" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listJobs" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "listJobs" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listJobs" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    res4 = SWIG_ConvertPtr(obj2, &argp4, SWIGTYPE_p_TMS_Data__ListJobsOptions,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "listJobs" "', argument " "4"" of type '" "TMS_Data::ListJobsOptions const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listJobs" "', argument " "4"" of type '" "TMS_Data::ListJobsOptions const &""'"); 
    }
    arg4 = reinterpret_cast< TMS_Data::ListJobsOptions * >(argp4);
  }
  try {
    result = (int)vishnu::listJobs((std::string const &)*arg1,(std::string const &)*arg2,*arg3,(TMS_Data::ListJobsOptions const &)*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(TMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new TMSVishnuException(static_cast< const TMSVishnuException& >(_e))),SWIGTYPE_p_TMSVishnuException,SWIG_POINTER_OWN), "TMSVishnuException", SWIGTYPE_p_TMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListJobs)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListJobs to receive the object
    PyObject *mylist = PyList_New(arg3->getJobs().size());
    // Instanciating a ListJobs object
    TMS_Data::TMS_DataFactory * ecoreFactory = TMS_Data::TMS_DataFactory::_instance();
    // For each item of the ListJobs
    for (int i = 0; i < arg3->getJobs().size() ; ++i) {
      // Getting the corresponding swig Job    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("TMS_Data::Job")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListJobs (because emf destroys its objects at the end)
      TMS_Data::Job* object = ecoreFactory->createJob();
      // Copying the object
      *object = *((*(&arg3))->getJobs().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListJobs
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListJobs to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_getJobProgress(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  TMS_Data::ListProgression *arg3 = 0 ;
  TMS_Data::ProgressOptions const &arg4_defvalue = TMS_Data::ProgressOptions() ;
  TMS_Data::ProgressOptions *arg4 = (TMS_Data::ProgressOptions *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  TMS_Data::ListProgression temp3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "options", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:getJobProgress",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getJobProgress" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobProgress" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getJobProgress" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobProgress" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    res4 = SWIG_ConvertPtr(obj2, &argp4, SWIGTYPE_p_TMS_Data__ProgressOptions,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "getJobProgress" "', argument " "4"" of type '" "TMS_Data::ProgressOptions const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobProgress" "', argument " "4"" of type '" "TMS_Data::ProgressOptions const &""'"); 
    }
    arg4 = reinterpret_cast< TMS_Data::ProgressOptions * >(argp4);
  }
  try {
    result = (int)vishnu::getJobProgress((std::string const &)*arg1,(std::string const &)*arg2,*arg3,(TMS_Data::ProgressOptions const &)*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(TMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new TMSVishnuException(static_cast< const TMSVishnuException& >(_e))),SWIGTYPE_p_TMSVishnuException,SWIG_POINTER_OWN), "TMSVishnuException", SWIGTYPE_p_TMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListProgression)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListProgression to receive the object
    PyObject *mylist = PyList_New(arg3->getProgress().size());
    // Instanciating a ListProgression object
    TMS_Data::TMS_DataFactory * ecoreFactory = TMS_Data::TMS_DataFactory::_instance();
    // For each item of the ListProgression
    for (int i = 0; i < arg3->getProgress().size() ; ++i) {
      // Getting the corresponding swig Progression    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("TMS_Data::Progression")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListProgression (because emf destroys its objects at the end)
      TMS_Data::Progression* object = ecoreFactory->createProgression();
      // Copying the object
      *object = *((*(&arg3))->getProgress().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListProgression
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListProgression to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listQueues(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  TMS_Data::ListQueues *arg3 = 0 ;
  std::string const &arg4_defvalue = std::string() ;
  std::string *arg4 = (std::string *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  TMS_Data::ListQueues temp3 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "queueName", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:listQueues",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listQueues" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listQueues" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "listQueues" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listQueues" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string(obj2, &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "listQueues" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listQueues" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
  }
  try {
    result = (int)vishnu::listQueues((std::string const &)*arg1,(std::string const &)*arg2,*arg3,(std::string const &)*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(TMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new TMSVishnuException(static_cast< const TMSVishnuException& >(_e))),SWIGTYPE_p_TMSVishnuException,SWIG_POINTER_OWN), "TMSVishnuException", SWIGTYPE_p_TMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListQueues)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListQueues to receive the object
    PyObject *mylist = PyList_New(arg3->getQueues().size());
    // Instanciating a ListQueues object
    TMS_Data::TMS_DataFactory * ecoreFactory = TMS_Data::TMS_DataFactory::_instance();
    // For each item of the ListQueues
    for (int i = 0; i < arg3->getQueues().size() ; ++i) {
      // Getting the corresponding swig Queue    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("TMS_Data::Queue")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListQueues (because emf destroys its objects at the end)
      TMS_Data::Queue* object = ecoreFactory->createQueue();
      // Copying the object
      *object = *((*(&arg3))->getQueues().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListQueues
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListQueues to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_getJobOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  TMS_Data::JobResult *arg4 = 0 ;
  std::string const &arg5_defvalue = std::string() ;
  std::string *arg5 = (std::string *) &arg5_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res5 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "jobId",(char *) "outputInfo",(char *) "outDir", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:getJobOutput",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getJobOutput" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobOutput" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getJobOutput" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobOutput" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getJobOutput" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobOutput" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_TMS_Data__JobResult,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "getJobOutput" "', argument " "4"" of type '" "TMS_Data::JobResult &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobOutput" "', argument " "4"" of type '" "TMS_Data::JobResult &""'"); 
  }
  arg4 = reinterpret_cast< TMS_Data::JobResult * >(argp4);
  if (obj4) {
    {
      std::string *ptr = (std::string *)0;
      res5 = SWIG_AsPtr_std_string(obj4, &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "getJobOutput" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getJobOutput" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      arg5 = ptr;
    }
  }
  try {
    result = (int)vishnu::getJobOutput((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,*arg4,(std::string const &)*arg5);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(TMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new TMSVishnuException(static_cast< const TMSVishnuException& >(_e))),SWIGTYPE_p_TMSVishnuException,SWIG_POINTER_OWN), "TMSVishnuException", SWIGTYPE_p_TMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res5)) delete arg5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_getCompletedJobsOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  TMS_Data::ListJobResults *arg3 = 0 ;
  std::string const &arg4_defvalue = std::string() ;
  std::string *arg4 = (std::string *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  TMS_Data::ListJobResults temp3 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "outDir", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:getCompletedJobsOutput",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getCompletedJobsOutput" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getCompletedJobsOutput" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getCompletedJobsOutput" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getCompletedJobsOutput" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string(obj2, &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "getCompletedJobsOutput" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getCompletedJobsOutput" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
  }
  try {
    result = (int)vishnu::getCompletedJobsOutput((std::string const &)*arg1,(std::string const &)*arg2,*arg3,(std::string const &)*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(TMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new TMSVishnuException(static_cast< const TMSVishnuException& >(_e))),SWIGTYPE_p_TMSVishnuException,SWIG_POINTER_OWN), "TMSVishnuException", SWIGTYPE_p_TMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListJobResults)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListJobResults to receive the object
    PyObject *mylist = PyList_New(arg3->getResults().size());
    // Instanciating a ListJobResults object
    TMS_Data::TMS_DataFactory * ecoreFactory = TMS_Data::TMS_DataFactory::_instance();
    // For each item of the ListJobResults
    for (int i = 0; i < arg3->getResults().size() ; ++i) {
      // Getting the corresponding swig JobResult    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("TMS_Data::JobResult")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListJobResults (because emf destroys its objects at the end)
      TMS_Data::JobResult* object = ecoreFactory->createJobResult();
      // Copying the object
      *object = *((*(&arg3))->getResults().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListJobResults
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListJobResults to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_exportCommands(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  std::string arg3 ;
  IMS_Data::ExportOp arg4 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "oldSessionId",(char *) "filename",(char *) "op", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:exportCommands",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "exportCommands" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "exportCommands" "', argument " "2"" of type '" "std::string const""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "exportCommands" "', argument " "3"" of type '" "std::string""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_IMS_Data__ExportOp,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "exportCommands" "', argument " "4"" of type '" "IMS_Data::ExportOp""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "exportCommands" "', argument " "4"" of type '" "IMS_Data::ExportOp""'");
    } else {
      IMS_Data::ExportOp * temp = reinterpret_cast< IMS_Data::ExportOp * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  try {
    result = (int)vishnu::exportCommands(arg1,arg2,arg3,arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_getMetricCurrentValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  IMS_Data::ListMetric *arg3 = 0 ;
  IMS_Data::CurMetricOp arg4 ;
  IMS_Data::ListMetric temp3 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "op", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:getMetricCurrentValue",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getMetricCurrentValue" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getMetricCurrentValue" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res4 = SWIG_ConvertPtr(obj2, &argp4, SWIGTYPE_p_IMS_Data__CurMetricOp,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "getMetricCurrentValue" "', argument " "4"" of type '" "IMS_Data::CurMetricOp""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getMetricCurrentValue" "', argument " "4"" of type '" "IMS_Data::CurMetricOp""'");
    } else {
      IMS_Data::CurMetricOp * temp = reinterpret_cast< IMS_Data::CurMetricOp * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  try {
    result = (int)vishnu::getMetricCurrentValue(arg1,arg2,*arg3,arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListMetric)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListMetric to receive the object
    PyObject *mylist = PyList_New(arg3->getMetric().size());
    // Instanciating a ListMetric object
    IMS_Data::IMS_DataFactory * ecoreFactory = IMS_Data::IMS_DataFactory::_instance();
    // For each item of the ListMetric
    for (int i = 0; i < arg3->getMetric().size() ; ++i) {
      // Getting the corresponding swig Metric    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("IMS_Data::Metric")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListMetric (because emf destroys its objects at the end)
      IMS_Data::Metric* object = ecoreFactory->createMetric();
      // Copying the object
      *object = *((*(&arg3))->getMetric().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListMetric
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListMetric to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_getMetricHistory(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  IMS_Data::ListMetric *arg3 = 0 ;
  IMS_Data::MetricHistOp arg4 ;
  IMS_Data::ListMetric temp3 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "op", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:getMetricHistory",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getMetricHistory" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getMetricHistory" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res4 = SWIG_ConvertPtr(obj2, &argp4, SWIGTYPE_p_IMS_Data__MetricHistOp,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "getMetricHistory" "', argument " "4"" of type '" "IMS_Data::MetricHistOp""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getMetricHistory" "', argument " "4"" of type '" "IMS_Data::MetricHistOp""'");
    } else {
      IMS_Data::MetricHistOp * temp = reinterpret_cast< IMS_Data::MetricHistOp * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  try {
    result = (int)vishnu::getMetricHistory(arg1,arg2,*arg3,arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListMetric)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListMetric to receive the object
    PyObject *mylist = PyList_New(arg3->getMetric().size());
    // Instanciating a ListMetric object
    IMS_Data::IMS_DataFactory * ecoreFactory = IMS_Data::IMS_DataFactory::_instance();
    // For each item of the ListMetric
    for (int i = 0; i < arg3->getMetric().size() ; ++i) {
      // Getting the corresponding swig Metric    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("IMS_Data::Metric")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListMetric (because emf destroys its objects at the end)
      IMS_Data::Metric* object = ecoreFactory->createMetric();
      // Copying the object
      *object = *((*(&arg3))->getMetric().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListMetric
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListMetric to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_getProcesses(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  IMS_Data::ListProcesses *arg2 = 0 ;
  IMS_Data::ProcessOp arg3 ;
  IMS_Data::ListProcesses temp2 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "op", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:getProcesses",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getProcesses" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_IMS_Data__ProcessOp,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getProcesses" "', argument " "3"" of type '" "IMS_Data::ProcessOp""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getProcesses" "', argument " "3"" of type '" "IMS_Data::ProcessOp""'");
    } else {
      IMS_Data::ProcessOp * temp = reinterpret_cast< IMS_Data::ProcessOp * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  try {
    result = (int)vishnu::getProcesses(arg1,*arg2,arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListProcesses)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListProcesses to receive the object
    PyObject *mylist = PyList_New(arg2->getProcess().size());
    // Instanciating a ListProcesses object
    IMS_Data::IMS_DataFactory * ecoreFactory = IMS_Data::IMS_DataFactory::_instance();
    // For each item of the ListProcesses
    for (int i = 0; i < arg2->getProcess().size() ; ++i) {
      // Getting the corresponding swig Process    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("IMS_Data::Process")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListProcesses (because emf destroys its objects at the end)
      IMS_Data::Process* object = ecoreFactory->createProcess();
      // Copying the object
      *object = *((*(&arg2))->getProcess().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListProcesses
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListProcesses to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_setSystemInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  IMS_Data::SystemInfo arg2 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "sys", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:setSystemInfo",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "setSystemInfo" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IMS_Data__SystemInfo,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "setSystemInfo" "', argument " "2"" of type '" "IMS_Data::SystemInfo""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setSystemInfo" "', argument " "2"" of type '" "IMS_Data::SystemInfo""'");
    } else {
      IMS_Data::SystemInfo * temp = reinterpret_cast< IMS_Data::SystemInfo * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  try {
    result = (int)vishnu::setSystemInfo(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_setSystemThreshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  IMS_Data::Threshold arg2 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "threshold", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:setSystemThreshold",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "setSystemThreshold" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IMS_Data__Threshold,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "setSystemThreshold" "', argument " "2"" of type '" "IMS_Data::Threshold""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setSystemThreshold" "', argument " "2"" of type '" "IMS_Data::Threshold""'");
    } else {
      IMS_Data::Threshold * temp = reinterpret_cast< IMS_Data::Threshold * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  try {
    result = (int)vishnu::setSystemThreshold(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_getSystemThreshold(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  IMS_Data::ListThreshold *arg2 = 0 ;
  IMS_Data::ThresholdOp arg3 ;
  IMS_Data::ListThreshold temp2 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "op", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:getSystemThreshold",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getSystemThreshold" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_IMS_Data__ThresholdOp,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getSystemThreshold" "', argument " "3"" of type '" "IMS_Data::ThresholdOp""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSystemThreshold" "', argument " "3"" of type '" "IMS_Data::ThresholdOp""'");
    } else {
      IMS_Data::ThresholdOp * temp = reinterpret_cast< IMS_Data::ThresholdOp * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  try {
    result = (int)vishnu::getSystemThreshold(arg1,*arg2,arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListThreshold)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListThreshold to receive the object
    PyObject *mylist = PyList_New(arg2->getThreshold().size());
    // Instanciating a ListThreshold object
    IMS_Data::IMS_DataFactory * ecoreFactory = IMS_Data::IMS_DataFactory::_instance();
    // For each item of the ListThreshold
    for (int i = 0; i < arg2->getThreshold().size() ; ++i) {
      // Getting the corresponding swig Threshold    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("IMS_Data::Threshold")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListThreshold (because emf destroys its objects at the end)
      IMS_Data::Threshold* object = ecoreFactory->createThreshold();
      // Copying the object
      *object = *((*(&arg2))->getThreshold().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListThreshold
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListThreshold to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_defineUserIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "fmt", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:defineUserIdentifier",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineUserIdentifier" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineUserIdentifier" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  try {
    result = (int)vishnu::defineUserIdentifier(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_defineMachineIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "fmt", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:defineMachineIdentifier",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineMachineIdentifier" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineMachineIdentifier" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  try {
    result = (int)vishnu::defineMachineIdentifier(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_defineJobIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "fmt", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:defineJobIdentifier",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineJobIdentifier" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineJobIdentifier" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  try {
    result = (int)vishnu::defineJobIdentifier(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_defineTransferIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "fmt", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:defineTransferIdentifier",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineTransferIdentifier" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineTransferIdentifier" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  try {
    result = (int)vishnu::defineTransferIdentifier(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_defineAuthIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "fmt", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:defineAuthIdentifier",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineAuthIdentifier" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineAuthIdentifier" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  try {
    result = (int)vishnu::defineAuthIdentifier(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_defineWorkIdentifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "fmt", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:defineWorkIdentifier",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineWorkIdentifier" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "defineWorkIdentifier" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  try {
    result = (int)vishnu::defineWorkIdentifier(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_loadShed(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  IMS_Data::LoadShedType arg3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "loadShedType", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:loadShed",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "loadShed" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "loadShed" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "loadShed" "', argument " "3"" of type '" "IMS_Data::LoadShedType""'");
  } 
  arg3 = static_cast< IMS_Data::LoadShedType >(val3);
  try {
    result = (int)vishnu::loadShed(arg1,arg2,arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_setUpdateFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  int arg2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "freq", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:setUpdateFrequency",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "setUpdateFrequency" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "setUpdateFrequency" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  try {
    result = (int)vishnu::setUpdateFrequency(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_getUpdateFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  int *arg2 = 0 ;
  int temp2 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:getUpdateFrequency",kwnames,&obj0)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getUpdateFrequency" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  try {
    result = (int)vishnu::getUpdateFrequency(arg1,*arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    PyObject *o = PyInt_FromLong(*arg2);
    resultobj = SWIG_Python_AppendOutput(resultobj, o);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  IMS_Data::Process arg2 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "proc", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:stop",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "stop" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IMS_Data__Process,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "stop" "', argument " "2"" of type '" "IMS_Data::Process""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "stop" "', argument " "2"" of type '" "IMS_Data::Process""'");
    } else {
      IMS_Data::Process * temp = reinterpret_cast< IMS_Data::Process * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  try {
    result = (int)vishnu::stop(arg1,arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_getSystemInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  IMS_Data::ListSysInfo *arg2 = 0 ;
  IMS_Data::SysInfoOp arg3 ;
  IMS_Data::ListSysInfo temp2 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "op", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:getSystemInfo",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "getSystemInfo" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_IMS_Data__SysInfoOp,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getSystemInfo" "', argument " "3"" of type '" "IMS_Data::SysInfoOp""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getSystemInfo" "', argument " "3"" of type '" "IMS_Data::SysInfoOp""'");
    } else {
      IMS_Data::SysInfoOp * temp = reinterpret_cast< IMS_Data::SysInfoOp * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  try {
    result = (int)vishnu::getSystemInfo(arg1,*arg2,arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + ListSysInfo)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the ListSysInfo to receive the object
    PyObject *mylist = PyList_New(arg2->getSysInfo().size());
    // Instanciating a ListSysInfo object
    IMS_Data::IMS_DataFactory * ecoreFactory = IMS_Data::IMS_DataFactory::_instance();
    // For each item of the ListSysInfo
    for (int i = 0; i < arg2->getSysInfo().size() ; ++i) {
      // Getting the corresponding swig SystemInfo    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("IMS_Data::SystemInfo")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ ListSysInfo (because emf destroys its objects at the end)
      IMS_Data::SystemInfo* object = ecoreFactory->createSystemInfo();
      // Copying the object
      *object = *((*(&arg2))->getSysInfo().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the ListSysInfo
      PyList_SetItem(mylist,i,o);
    }
    // Add the ListSysInfo to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_restart(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  IMS_Data::RestartOp arg3 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "machineId",(char *) "op", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:restart",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "restart" "', argument " "1"" of type '" "std::string const""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "restart" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_IMS_Data__RestartOp,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "restart" "', argument " "3"" of type '" "IMS_Data::RestartOp""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "restart" "', argument " "3"" of type '" "IMS_Data::RestartOp""'");
    } else {
      IMS_Data::RestartOp * temp = reinterpret_cast< IMS_Data::RestartOp * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  try {
    result = (int)vishnu::restart(arg1,arg2,arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(IMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new IMSVishnuException(static_cast< const IMSVishnuException& >(_e))),SWIGTYPE_p_IMSVishnuException,SWIG_POINTER_OWN), "IMSVishnuException", SWIGTYPE_p_IMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_createFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "path", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:createFile",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "createFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (int)vishnu::createFile((std::string const &)*arg1,(std::string const &)*arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_chGrp(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "group",(char *) "path", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:chGrp",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "chGrp" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chGrp" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "chGrp" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chGrp" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "chGrp" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chGrp" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    result = (int)vishnu::chGrp((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_chMod(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  mode_t *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  mode_t temp2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "mode",(char *) "path", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:chMod",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "chMod" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chMod" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "chMod" "', argument " "2"" of type '" "mode_t""'");
  } 
  temp2 = static_cast< mode_t >(val2);
  arg2 = &temp2;
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "chMod" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chMod" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    result = (int)vishnu::chMod((std::string const &)*arg1,(unsigned int const &)*arg2,(std::string const &)*arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_copyFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  FMS_Data::CpFileOptions const &arg4_defvalue = FMS_Data::CpFileOptions() ;
  FMS_Data::CpFileOptions *arg4 = (FMS_Data::CpFileOptions *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "src",(char *) "dest",(char *) "options", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:copyFile",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "copyFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "copyFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "copyFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "copyFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "copyFile" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "copyFile" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  if (obj3) {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_FMS_Data__CpFileOptions,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "copyFile" "', argument " "4"" of type '" "FMS_Data::CpFileOptions const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "copyFile" "', argument " "4"" of type '" "FMS_Data::CpFileOptions const &""'"); 
    }
    arg4 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp4);
  }
  try {
    result = (int)vishnu::copyFile((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(FMS_Data::CpFileOptions const &)*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_copyAsyncFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  FMS_Data::FileTransfer *arg4 = 0 ;
  FMS_Data::CpFileOptions const &arg5_defvalue = FMS_Data::CpFileOptions() ;
  FMS_Data::CpFileOptions *arg5 = (FMS_Data::CpFileOptions *) &arg5_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "src",(char *) "dest",(char *) "transferInfo",(char *) "options", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:copyAsyncFile",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "copyAsyncFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "copyAsyncFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "copyAsyncFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "copyAsyncFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "copyAsyncFile" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "copyAsyncFile" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_FMS_Data__FileTransfer,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "copyAsyncFile" "', argument " "4"" of type '" "FMS_Data::FileTransfer &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "copyAsyncFile" "', argument " "4"" of type '" "FMS_Data::FileTransfer &""'"); 
  }
  arg4 = reinterpret_cast< FMS_Data::FileTransfer * >(argp4);
  if (obj4) {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_FMS_Data__CpFileOptions,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "copyAsyncFile" "', argument " "5"" of type '" "FMS_Data::CpFileOptions const &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "copyAsyncFile" "', argument " "5"" of type '" "FMS_Data::CpFileOptions const &""'"); 
    }
    arg5 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp5);
  }
  try {
    result = (int)vishnu::copyAsyncFile((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,*arg4,(FMS_Data::CpFileOptions const &)*arg5);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_headOfFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  FMS_Data::HeadOfFileOptions const &arg4_defvalue = FMS_Data::HeadOfFileOptions() ;
  FMS_Data::HeadOfFileOptions *arg4 = (FMS_Data::HeadOfFileOptions *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  std::string temp3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "path",(char *) "options", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:headOfFile",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "headOfFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "headOfFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "headOfFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "headOfFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    res4 = SWIG_ConvertPtr(obj2, &argp4, SWIGTYPE_p_FMS_Data__HeadOfFileOptions,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "headOfFile" "', argument " "4"" of type '" "FMS_Data::HeadOfFileOptions const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "headOfFile" "', argument " "4"" of type '" "FMS_Data::HeadOfFileOptions const &""'"); 
    }
    arg4 = reinterpret_cast< FMS_Data::HeadOfFileOptions * >(argp4);
  }
  try {
    result = (int)vishnu::headOfFile((std::string const &)*arg1,(std::string const &)*arg2,*arg3,(FMS_Data::HeadOfFileOptions const &)*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    PyObject *o = PyString_FromString(arg3->c_str());
    resultobj = SWIG_Python_AppendOutput(resultobj, o);
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_contentOfFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  std::string temp3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "path", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:contentOfFile",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "contentOfFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "contentOfFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "contentOfFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "contentOfFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (int)vishnu::contentOfFile((std::string const &)*arg1,(std::string const &)*arg2,*arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    PyObject *o = PyString_FromString(arg3->c_str());
    resultobj = SWIG_Python_AppendOutput(resultobj, o);
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  FMS_Data::DirEntryList *arg3 = 0 ;
  FMS_Data::LsDirOptions const &arg4_defvalue = FMS_Data::LsDirOptions() ;
  FMS_Data::LsDirOptions *arg4 = (FMS_Data::LsDirOptions *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  FMS_Data::DirEntryList temp3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "path",(char *) "options", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:listDir",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listDir" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listDir" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "listDir" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listDir" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    res4 = SWIG_ConvertPtr(obj2, &argp4, SWIGTYPE_p_FMS_Data__LsDirOptions,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "listDir" "', argument " "4"" of type '" "FMS_Data::LsDirOptions const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listDir" "', argument " "4"" of type '" "FMS_Data::LsDirOptions const &""'"); 
    }
    arg4 = reinterpret_cast< FMS_Data::LsDirOptions * >(argp4);
  }
  try {
    result = (int)vishnu::listDir((std::string const &)*arg1,(std::string const &)*arg2,*arg3,(FMS_Data::LsDirOptions const &)*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + DirEntryList)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the DirEntryList to receive the object
    PyObject *mylist = PyList_New(arg3->getDirEntries().size());
    // Instanciating a DirEntryList object
    FMS_Data::FMS_DataFactory * ecoreFactory = FMS_Data::FMS_DataFactory::_instance();
    // For each item of the DirEntryList
    for (int i = 0; i < arg3->getDirEntries().size() ; ++i) {
      // Getting the corresponding swig DirEntry    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("FMS_Data::DirEntry")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ DirEntryList (because emf destroys its objects at the end)
      FMS_Data::DirEntry* object = ecoreFactory->createDirEntry();
      // Copying the object
      *object = *((*(&arg3))->getDirEntries().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the DirEntryList
      PyList_SetItem(mylist,i,o);
    }
    // Add the DirEntryList to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_createDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  FMS_Data::CreateDirOptions const &arg3_defvalue = FMS_Data::CreateDirOptions() ;
  FMS_Data::CreateDirOptions *arg3 = (FMS_Data::CreateDirOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "path",(char *) "options", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:createDir",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "createDir" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createDir" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "createDir" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createDir" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_FMS_Data__CreateDirOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "createDir" "', argument " "3"" of type '" "FMS_Data::CreateDirOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "createDir" "', argument " "3"" of type '" "FMS_Data::CreateDirOptions const &""'"); 
    }
    arg3 = reinterpret_cast< FMS_Data::CreateDirOptions * >(argp3);
  }
  try {
    result = (int)vishnu::createDir((std::string const &)*arg1,(std::string const &)*arg2,(FMS_Data::CreateDirOptions const &)*arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_moveFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  FMS_Data::CpFileOptions const &arg4_defvalue = FMS_Data::CpFileOptions() ;
  FMS_Data::CpFileOptions *arg4 = (FMS_Data::CpFileOptions *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "src",(char *) "dest",(char *) "options", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:moveFile",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "moveFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "moveFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "moveFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "moveFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "moveFile" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "moveFile" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  if (obj3) {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_FMS_Data__CpFileOptions,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "moveFile" "', argument " "4"" of type '" "FMS_Data::CpFileOptions const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "moveFile" "', argument " "4"" of type '" "FMS_Data::CpFileOptions const &""'"); 
    }
    arg4 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp4);
  }
  try {
    result = (int)vishnu::moveFile((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(FMS_Data::CpFileOptions const &)*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_moveAsyncFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  FMS_Data::FileTransfer *arg4 = 0 ;
  FMS_Data::CpFileOptions const &arg5_defvalue = FMS_Data::CpFileOptions() ;
  FMS_Data::CpFileOptions *arg5 = (FMS_Data::CpFileOptions *) &arg5_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "src",(char *) "dest",(char *) "transferInfo",(char *) "options", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:moveAsyncFile",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "moveAsyncFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "moveAsyncFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "moveAsyncFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "moveAsyncFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "moveAsyncFile" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "moveAsyncFile" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_FMS_Data__FileTransfer,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "moveAsyncFile" "', argument " "4"" of type '" "FMS_Data::FileTransfer &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "moveAsyncFile" "', argument " "4"" of type '" "FMS_Data::FileTransfer &""'"); 
  }
  arg4 = reinterpret_cast< FMS_Data::FileTransfer * >(argp4);
  if (obj4) {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_FMS_Data__CpFileOptions,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "moveAsyncFile" "', argument " "5"" of type '" "FMS_Data::CpFileOptions const &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "moveAsyncFile" "', argument " "5"" of type '" "FMS_Data::CpFileOptions const &""'"); 
    }
    arg5 = reinterpret_cast< FMS_Data::CpFileOptions * >(argp5);
  }
  try {
    result = (int)vishnu::moveAsyncFile((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,*arg4,(FMS_Data::CpFileOptions const &)*arg5);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_removeFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  FMS_Data::RmFileOptions const &arg3_defvalue = FMS_Data::RmFileOptions() ;
  FMS_Data::RmFileOptions *arg3 = (FMS_Data::RmFileOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "path",(char *) "options", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:removeFile",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "removeFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "removeFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "removeFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "removeFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_FMS_Data__RmFileOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "removeFile" "', argument " "3"" of type '" "FMS_Data::RmFileOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "removeFile" "', argument " "3"" of type '" "FMS_Data::RmFileOptions const &""'"); 
    }
    arg3 = reinterpret_cast< FMS_Data::RmFileOptions * >(argp3);
  }
  try {
    result = (int)vishnu::removeFile((std::string const &)*arg1,(std::string const &)*arg2,(FMS_Data::RmFileOptions const &)*arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_removeDir(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "path", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:removeDir",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "removeDir" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "removeDir" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "removeDir" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "removeDir" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (int)vishnu::removeDir((std::string const &)*arg1,(std::string const &)*arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_tailOfFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  FMS_Data::TailOfFileOptions const &arg4_defvalue = FMS_Data::TailOfFileOptions() ;
  FMS_Data::TailOfFileOptions *arg4 = (FMS_Data::TailOfFileOptions *) &arg4_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  std::string temp3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "path",(char *) "options", NULL 
  };
  int result;
  
  {
    arg3 = &temp3;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:tailOfFile",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tailOfFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tailOfFile" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tailOfFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tailOfFile" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (obj2) {
    res4 = SWIG_ConvertPtr(obj2, &argp4, SWIGTYPE_p_FMS_Data__TailOfFileOptions,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "tailOfFile" "', argument " "4"" of type '" "FMS_Data::TailOfFileOptions const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tailOfFile" "', argument " "4"" of type '" "FMS_Data::TailOfFileOptions const &""'"); 
    }
    arg4 = reinterpret_cast< FMS_Data::TailOfFileOptions * >(argp4);
  }
  try {
    result = (int)vishnu::tailOfFile((std::string const &)*arg1,(std::string const &)*arg2,*arg3,(FMS_Data::TailOfFileOptions const &)*arg4);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    PyObject *o = PyString_FromString(arg3->c_str());
    resultobj = SWIG_Python_AppendOutput(resultobj, o);
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_getFileInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  FMS_Data::FileStat *arg3 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "path",(char *) "filesInfo", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:getFileInfo",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getFileInfo" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getFileInfo" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "getFileInfo" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getFileInfo" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_FMS_Data__FileStat,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "getFileInfo" "', argument " "3"" of type '" "FMS_Data::FileStat &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "getFileInfo" "', argument " "3"" of type '" "FMS_Data::FileStat &""'"); 
  }
  arg3 = reinterpret_cast< FMS_Data::FileStat * >(argp3);
  try {
    result = (int)vishnu::getFileInfo((std::string const &)*arg1,(std::string const &)*arg2,*arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_stopFileTransfer(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  FMS_Data::StopTransferOptions const &arg2_defvalue = FMS_Data::StopTransferOptions() ;
  FMS_Data::StopTransferOptions *arg2 = (FMS_Data::StopTransferOptions *) &arg2_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "options", NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:stopFileTransfer",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "stopFileTransfer" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "stopFileTransfer" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_FMS_Data__StopTransferOptions,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "stopFileTransfer" "', argument " "2"" of type '" "FMS_Data::StopTransferOptions const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "stopFileTransfer" "', argument " "2"" of type '" "FMS_Data::StopTransferOptions const &""'"); 
    }
    arg2 = reinterpret_cast< FMS_Data::StopTransferOptions * >(argp2);
  }
  try {
    result = (int)vishnu::stopFileTransfer((std::string const &)*arg1,(FMS_Data::StopTransferOptions const &)*arg2);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_listFileTransfers(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  FMS_Data::FileTransferList *arg2 = 0 ;
  FMS_Data::LsTransferOptions const &arg3_defvalue = FMS_Data::LsTransferOptions() ;
  FMS_Data::LsTransferOptions *arg3 = (FMS_Data::LsTransferOptions *) &arg3_defvalue ;
  int res1 = SWIG_OLDOBJ ;
  FMS_Data::FileTransferList temp2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "sessionKey",(char *) "options", NULL 
  };
  int result;
  
  {
    arg2 = &temp2;
  }
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:listFileTransfers",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "listFileTransfers" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listFileTransfers" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    res3 = SWIG_ConvertPtr(obj1, &argp3, SWIGTYPE_p_FMS_Data__LsTransferOptions,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "listFileTransfers" "', argument " "3"" of type '" "FMS_Data::LsTransferOptions const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "listFileTransfers" "', argument " "3"" of type '" "FMS_Data::LsTransferOptions const &""'"); 
    }
    arg3 = reinterpret_cast< FMS_Data::LsTransferOptions * >(argp3);
  }
  try {
    result = (int)vishnu::listFileTransfers((std::string const &)*arg1,*arg2,(FMS_Data::LsTransferOptions const &)*arg3);
  }
  catch(UMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UMSVishnuException,SWIG_POINTER_OWN), "UMSVishnuException", SWIGTYPE_p_UMSVishnuException); SWIG_fail;
  }
  catch(FMSVishnuException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new FMSVishnuException(static_cast< const FMSVishnuException& >(_e))),SWIGTYPE_p_FMSVishnuException,SWIG_POINTER_OWN), "FMSVishnuException", SWIGTYPE_p_FMSVishnuException); SWIG_fail;
  }
  catch(UserException &_e) {
    {
      SWIG_Python_Raise(SWIG_NewPointerObj((new UMSVishnuException(static_cast< const UMSVishnuException& >(_e))),SWIGTYPE_p_UserException,SWIG_POINTER_OWN), "UserException", SWIGTYPE_p_UserException); SWIG_fail;
    }
  }
  catch(SystemException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new SystemException(static_cast< const SystemException& >(_e))),SWIGTYPE_p_SystemException,SWIG_POINTER_OWN), "SystemException", SWIGTYPE_p_SystemException); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    // Creating the out tupple (res code + FileTransferList)
    PyObject * tup = PyTuple_New(2);
    // Setting the result code of the function in the tupple
    PyTuple_SetItem(tup, 0, resultobj);
    // Creating the FileTransferList to receive the object
    PyObject *mylist = PyList_New(arg2->getFileTransfers().size());
    // Instanciating a FileTransferList object
    FMS_Data::FMS_DataFactory * ecoreFactory = FMS_Data::FMS_DataFactory::_instance();
    // For each item of the FileTransferList
    for (int i = 0; i < arg2->getFileTransfers().size() ; ++i) {
      // Getting the corresponding swig FileTransfer    
      swig_type_info* swig_type = SWIG_TypeQuery(string(string("FMS_Data::FileTransfer")+string(" *")).c_str());
      
      // Instanciating an object to copy each item of the C++ FileTransferList (because emf destroys its objects at the end)
      FMS_Data::FileTransfer* object = ecoreFactory->createFileTransfer();
      // Copying the object
      *object = *((*(&arg2))->getFileTransfers().get(i));
      // Convert it to a pyobject
      PyObject *o = SWIG_Python_NewPointerObj((void *)object, swig_type, 1);
      
      // Add it to the FileTransferList
      PyList_SetItem(mylist,i,o);
    }
    // Add the FileTransferList to the output tuples
    PyTuple_SetItem(tup, 1, mylist);
    // The result is the tupple
    resultobj = tup;
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, (char *)"delete_SwigPyIterator(SwigPyIterator self)"},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, (char *)"SwigPyIterator_value(SwigPyIterator self) -> PyObject"},
	 { (char *)"SwigPyIterator_incr", (PyCFunction) _wrap_SwigPyIterator_incr, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_incr(SwigPyIterator self, size_t n = 1) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator_decr", (PyCFunction) _wrap_SwigPyIterator_decr, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_decr(SwigPyIterator self, size_t n = 1) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator_distance", (PyCFunction) _wrap_SwigPyIterator_distance, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_distance(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t"},
	 { (char *)"SwigPyIterator_equal", (PyCFunction) _wrap_SwigPyIterator_equal, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_equal(SwigPyIterator self, SwigPyIterator x) -> bool"},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, (char *)"SwigPyIterator_copy(SwigPyIterator self) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, (char *)"SwigPyIterator_next(SwigPyIterator self) -> PyObject"},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, (char *)"SwigPyIterator___next__(SwigPyIterator self) -> PyObject"},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, (char *)"SwigPyIterator_previous(SwigPyIterator self) -> PyObject"},
	 { (char *)"SwigPyIterator_advance", (PyCFunction) _wrap_SwigPyIterator_advance, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_advance(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator___eq__", (PyCFunction) _wrap_SwigPyIterator___eq__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___eq__(SwigPyIterator self, SwigPyIterator x) -> bool"},
	 { (char *)"SwigPyIterator___ne__", (PyCFunction) _wrap_SwigPyIterator___ne__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___ne__(SwigPyIterator self, SwigPyIterator x) -> bool"},
	 { (char *)"SwigPyIterator___iadd__", (PyCFunction) _wrap_SwigPyIterator___iadd__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___iadd__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator___isub__", (PyCFunction) _wrap_SwigPyIterator___isub__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___isub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator___add__", (PyCFunction) _wrap_SwigPyIterator___add__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___add__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(ptrdiff_t n) -> SwigPyIterator\n"
		"SwigPyIterator___sub__(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t\n"
		""},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_EObject", _wrap_new_EObject, METH_VARARGS, (char *)"new_EObject() -> EObject"},
	 { (char *)"delete_EObject", _wrap_delete_EObject, METH_VARARGS, (char *)"delete_EObject(EObject self)"},
	 { (char *)"EObject__initialize", _wrap_EObject__initialize, METH_VARARGS, (char *)"EObject__initialize(EObject self)"},
	 { (char *)"EObject_eClass", _wrap_EObject_eClass, METH_VARARGS, (char *)"EObject_eClass(EObject self) -> EClass_ptr"},
	 { (char *)"EObject_eIsProxy", _wrap_EObject_eIsProxy, METH_VARARGS, (char *)"EObject_eIsProxy(EObject self) -> EBoolean"},
	 { (char *)"EObject_eResource", _wrap_EObject_eResource, METH_VARARGS, (char *)"EObject_eResource(EObject self) -> EResource"},
	 { (char *)"EObject_eContainer", _wrap_EObject_eContainer, METH_VARARGS, (char *)"EObject_eContainer(EObject self) -> EObject_ptr"},
	 { (char *)"EObject_eContainingFeature", _wrap_EObject_eContainingFeature, METH_VARARGS, (char *)"EObject_eContainingFeature(EObject self) -> EStructuralFeature_ptr"},
	 { (char *)"EObject_eContainmentFeature", _wrap_EObject_eContainmentFeature, METH_VARARGS, (char *)"EObject_eContainmentFeature(EObject self) -> EReference_ptr"},
	 { (char *)"EObject_eContents", _wrap_EObject_eContents, METH_VARARGS, (char *)"EObject_eContents(EObject self) -> std::list<(::ecore::EObject_ptr)>"},
	 { (char *)"EObject_eAllContents", _wrap_EObject_eAllContents, METH_VARARGS, (char *)"EObject_eAllContents(EObject self) -> int"},
	 { (char *)"EObject_eCrossReferences", _wrap_EObject_eCrossReferences, METH_VARARGS, (char *)"EObject_eCrossReferences(EObject self) -> std::list<(::ecore::EObject_ptr)>"},
	 { (char *)"EObject_eInvoke", (PyCFunction) _wrap_EObject_eInvoke, METH_VARARGS | METH_KEYWORDS, (char *)"EObject_eInvoke(EObject self, EOperation_ptr _operation, std::list<(::ecorecpp::mapping::any)> _arguments) -> EJavaObject"},
	 { (char *)"EObject_eGet", _wrap_EObject_eGet, METH_VARARGS, (char *)"\n"
		"eGet(EStructuralFeature_ptr _feature) -> EJavaObject\n"
		"eGet(EStructuralFeature_ptr _feature, EBoolean _resolve) -> EJavaObject\n"
		"EObject_eGet(EObject self, EInt _featureID, EBoolean _resolve) -> EJavaObject\n"
		""},
	 { (char *)"EObject_eSet", _wrap_EObject_eSet, METH_VARARGS, (char *)"\n"
		"eSet(EStructuralFeature_ptr _feature, EJavaObject _newValue)\n"
		"EObject_eSet(EObject self, EInt _featureID, EJavaObject _newValue)\n"
		""},
	 { (char *)"EObject_eIsSet", _wrap_EObject_eIsSet, METH_VARARGS, (char *)"\n"
		"eIsSet(EStructuralFeature_ptr _feature) -> EBoolean\n"
		"EObject_eIsSet(EObject self, EInt _featureID) -> EBoolean\n"
		""},
	 { (char *)"EObject_eUnset", _wrap_EObject_eUnset, METH_VARARGS, (char *)"\n"
		"eUnset(EStructuralFeature_ptr _feature)\n"
		"EObject_eUnset(EObject self, EInt _featureID)\n"
		""},
	 { (char *)"EObject__eClass", _wrap_EObject__eClass, METH_VARARGS, (char *)"EObject__eClass(EObject self) -> EClass_ptr"},
	 { (char *)"EObject__setEContainer", (PyCFunction) _wrap_EObject__setEContainer, METH_VARARGS | METH_KEYWORDS, (char *)"EObject__setEContainer(EObject self, EObject_ptr _eContainer, EStructuralFeature_ptr _eContainingFeature)"},
	 { (char *)"EObject_swigregister", EObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ConnectOptions", _wrap_new_ConnectOptions, METH_VARARGS, (char *)"new_ConnectOptions() -> ConnectOptions"},
	 { (char *)"delete_ConnectOptions", _wrap_delete_ConnectOptions, METH_VARARGS, (char *)"delete_ConnectOptions(ConnectOptions self)"},
	 { (char *)"ConnectOptions__initialize", _wrap_ConnectOptions__initialize, METH_VARARGS, (char *)"ConnectOptions__initialize(ConnectOptions self)"},
	 { (char *)"ConnectOptions_getClosePolicy", _wrap_ConnectOptions_getClosePolicy, METH_VARARGS, (char *)"ConnectOptions_getClosePolicy(ConnectOptions self) -> SessionCloseType"},
	 { (char *)"ConnectOptions_setClosePolicy", (PyCFunction) _wrap_ConnectOptions_setClosePolicy, METH_VARARGS | METH_KEYWORDS, (char *)"ConnectOptions_setClosePolicy(ConnectOptions self, SessionCloseType _closePolicy)"},
	 { (char *)"ConnectOptions_getSessionInactivityDelay", _wrap_ConnectOptions_getSessionInactivityDelay, METH_VARARGS, (char *)"ConnectOptions_getSessionInactivityDelay(ConnectOptions self) -> EInt"},
	 { (char *)"ConnectOptions_setSessionInactivityDelay", (PyCFunction) _wrap_ConnectOptions_setSessionInactivityDelay, METH_VARARGS | METH_KEYWORDS, (char *)"ConnectOptions_setSessionInactivityDelay(ConnectOptions self, EInt _sessionInactivityDelay)"},
	 { (char *)"ConnectOptions_getSubstituteUserId", _wrap_ConnectOptions_getSubstituteUserId, METH_VARARGS, (char *)"ConnectOptions_getSubstituteUserId(ConnectOptions self) -> EString"},
	 { (char *)"ConnectOptions_setSubstituteUserId", (PyCFunction) _wrap_ConnectOptions_setSubstituteUserId, METH_VARARGS | METH_KEYWORDS, (char *)"ConnectOptions_setSubstituteUserId(ConnectOptions self, EString _substituteUserId)"},
	 { (char *)"ConnectOptions_eGet", (PyCFunction) _wrap_ConnectOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ConnectOptions_eGet(ConnectOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ConnectOptions_eSet", (PyCFunction) _wrap_ConnectOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ConnectOptions_eSet(ConnectOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ConnectOptions_eIsSet", (PyCFunction) _wrap_ConnectOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ConnectOptions_eIsSet(ConnectOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ConnectOptions_eUnset", (PyCFunction) _wrap_ConnectOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ConnectOptions_eUnset(ConnectOptions self, EInt _featureID)"},
	 { (char *)"ConnectOptions__eClass", _wrap_ConnectOptions__eClass, METH_VARARGS, (char *)"ConnectOptions__eClass(ConnectOptions self) -> EClass_ptr"},
	 { (char *)"ConnectOptions_swigregister", ConnectOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Session", _wrap_new_Session, METH_VARARGS, (char *)"new_Session() -> Session"},
	 { (char *)"delete_Session", _wrap_delete_Session, METH_VARARGS, (char *)"delete_Session(Session self)"},
	 { (char *)"Session__initialize", _wrap_Session__initialize, METH_VARARGS, (char *)"Session__initialize(Session self)"},
	 { (char *)"Session_getSessionId", _wrap_Session_getSessionId, METH_VARARGS, (char *)"Session_getSessionId(Session self) -> EString"},
	 { (char *)"Session_setSessionId", (PyCFunction) _wrap_Session_setSessionId, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setSessionId(Session self, EString _sessionId)"},
	 { (char *)"Session_getUserId", _wrap_Session_getUserId, METH_VARARGS, (char *)"Session_getUserId(Session self) -> EString"},
	 { (char *)"Session_setUserId", (PyCFunction) _wrap_Session_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setUserId(Session self, EString _userId)"},
	 { (char *)"Session_getSessionKey", _wrap_Session_getSessionKey, METH_VARARGS, (char *)"Session_getSessionKey(Session self) -> EString"},
	 { (char *)"Session_setSessionKey", (PyCFunction) _wrap_Session_setSessionKey, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setSessionKey(Session self, EString _sessionKey)"},
	 { (char *)"Session_getDateLastConnect", _wrap_Session_getDateLastConnect, METH_VARARGS, (char *)"Session_getDateLastConnect(Session self) -> ELong"},
	 { (char *)"Session_setDateLastConnect", (PyCFunction) _wrap_Session_setDateLastConnect, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setDateLastConnect(Session self, ELong _dateLastConnect)"},
	 { (char *)"Session_getDateCreation", _wrap_Session_getDateCreation, METH_VARARGS, (char *)"Session_getDateCreation(Session self) -> ELong"},
	 { (char *)"Session_setDateCreation", (PyCFunction) _wrap_Session_setDateCreation, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setDateCreation(Session self, ELong _dateCreation)"},
	 { (char *)"Session_getDateClosure", _wrap_Session_getDateClosure, METH_VARARGS, (char *)"Session_getDateClosure(Session self) -> ELong"},
	 { (char *)"Session_setDateClosure", (PyCFunction) _wrap_Session_setDateClosure, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setDateClosure(Session self, ELong _dateClosure)"},
	 { (char *)"Session_getStatus", _wrap_Session_getStatus, METH_VARARGS, (char *)"Session_getStatus(Session self) -> StatusType"},
	 { (char *)"Session_setStatus", (PyCFunction) _wrap_Session_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setStatus(Session self, StatusType _status)"},
	 { (char *)"Session_getClosePolicy", _wrap_Session_getClosePolicy, METH_VARARGS, (char *)"Session_getClosePolicy(Session self) -> SessionCloseType"},
	 { (char *)"Session_setClosePolicy", (PyCFunction) _wrap_Session_setClosePolicy, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setClosePolicy(Session self, SessionCloseType _closePolicy)"},
	 { (char *)"Session_getTimeout", _wrap_Session_getTimeout, METH_VARARGS, (char *)"Session_getTimeout(Session self) -> ELong"},
	 { (char *)"Session_setTimeout", (PyCFunction) _wrap_Session_setTimeout, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setTimeout(Session self, ELong _timeout)"},
	 { (char *)"Session_getAuthenId", _wrap_Session_getAuthenId, METH_VARARGS, (char *)"Session_getAuthenId(Session self) -> EString"},
	 { (char *)"Session_setAuthenId", (PyCFunction) _wrap_Session_setAuthenId, METH_VARARGS | METH_KEYWORDS, (char *)"Session_setAuthenId(Session self, EString _authenId)"},
	 { (char *)"Session_eGet", (PyCFunction) _wrap_Session_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Session_eGet(Session self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Session_eSet", (PyCFunction) _wrap_Session_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Session_eSet(Session self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Session_eIsSet", (PyCFunction) _wrap_Session_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Session_eIsSet(Session self, EInt _featureID) -> EBoolean"},
	 { (char *)"Session_eUnset", (PyCFunction) _wrap_Session_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Session_eUnset(Session self, EInt _featureID)"},
	 { (char *)"Session__eClass", _wrap_Session__eClass, METH_VARARGS, (char *)"Session__eClass(Session self) -> EClass_ptr"},
	 { (char *)"Session_swigregister", Session_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ListUsersOptions", _wrap_new_ListUsersOptions, METH_VARARGS, (char *)"new_ListUsersOptions() -> ListUsersOptions"},
	 { (char *)"delete_ListUsersOptions", _wrap_delete_ListUsersOptions, METH_VARARGS, (char *)"delete_ListUsersOptions(ListUsersOptions self)"},
	 { (char *)"ListUsersOptions__initialize", _wrap_ListUsersOptions__initialize, METH_VARARGS, (char *)"ListUsersOptions__initialize(ListUsersOptions self)"},
	 { (char *)"ListUsersOptions_getUserId", _wrap_ListUsersOptions_getUserId, METH_VARARGS, (char *)"ListUsersOptions_getUserId(ListUsersOptions self) -> EString"},
	 { (char *)"ListUsersOptions_setUserId", (PyCFunction) _wrap_ListUsersOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"ListUsersOptions_setUserId(ListUsersOptions self, EString _userId)"},
	 { (char *)"ListUsersOptions_getAuthSystemId", _wrap_ListUsersOptions_getAuthSystemId, METH_VARARGS, (char *)"ListUsersOptions_getAuthSystemId(ListUsersOptions self) -> EString"},
	 { (char *)"ListUsersOptions_setAuthSystemId", (PyCFunction) _wrap_ListUsersOptions_setAuthSystemId, METH_VARARGS | METH_KEYWORDS, (char *)"ListUsersOptions_setAuthSystemId(ListUsersOptions self, EString _authSystemId)"},
	 { (char *)"ListUsersOptions_eGet", (PyCFunction) _wrap_ListUsersOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ListUsersOptions_eGet(ListUsersOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ListUsersOptions_eSet", (PyCFunction) _wrap_ListUsersOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListUsersOptions_eSet(ListUsersOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ListUsersOptions_eIsSet", (PyCFunction) _wrap_ListUsersOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListUsersOptions_eIsSet(ListUsersOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ListUsersOptions_eUnset", (PyCFunction) _wrap_ListUsersOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ListUsersOptions_eUnset(ListUsersOptions self, EInt _featureID)"},
	 { (char *)"ListUsersOptions__eClass", _wrap_ListUsersOptions__eClass, METH_VARARGS, (char *)"ListUsersOptions__eClass(ListUsersOptions self) -> EClass_ptr"},
	 { (char *)"ListUsersOptions_swigregister", ListUsersOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ListSessionOptions", _wrap_new_ListSessionOptions, METH_VARARGS, (char *)"new_ListSessionOptions() -> ListSessionOptions"},
	 { (char *)"delete_ListSessionOptions", _wrap_delete_ListSessionOptions, METH_VARARGS, (char *)"delete_ListSessionOptions(ListSessionOptions self)"},
	 { (char *)"ListSessionOptions__initialize", _wrap_ListSessionOptions__initialize, METH_VARARGS, (char *)"ListSessionOptions__initialize(ListSessionOptions self)"},
	 { (char *)"ListSessionOptions_getStatus", _wrap_ListSessionOptions_getStatus, METH_VARARGS, (char *)"ListSessionOptions_getStatus(ListSessionOptions self) -> StatusType"},
	 { (char *)"ListSessionOptions_setStatus", (PyCFunction) _wrap_ListSessionOptions_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_setStatus(ListSessionOptions self, StatusType _status)"},
	 { (char *)"ListSessionOptions_getSessionClosePolicy", _wrap_ListSessionOptions_getSessionClosePolicy, METH_VARARGS, (char *)"ListSessionOptions_getSessionClosePolicy(ListSessionOptions self) -> SessionCloseType"},
	 { (char *)"ListSessionOptions_setSessionClosePolicy", (PyCFunction) _wrap_ListSessionOptions_setSessionClosePolicy, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_setSessionClosePolicy(ListSessionOptions self, SessionCloseType _sessionClosePolicy)"},
	 { (char *)"ListSessionOptions_getSessionInactivityDelay", _wrap_ListSessionOptions_getSessionInactivityDelay, METH_VARARGS, (char *)"ListSessionOptions_getSessionInactivityDelay(ListSessionOptions self) -> EInt"},
	 { (char *)"ListSessionOptions_setSessionInactivityDelay", (PyCFunction) _wrap_ListSessionOptions_setSessionInactivityDelay, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_setSessionInactivityDelay(ListSessionOptions self, EInt _sessionInactivityDelay)"},
	 { (char *)"ListSessionOptions_getMachineId", _wrap_ListSessionOptions_getMachineId, METH_VARARGS, (char *)"ListSessionOptions_getMachineId(ListSessionOptions self) -> EString"},
	 { (char *)"ListSessionOptions_setMachineId", (PyCFunction) _wrap_ListSessionOptions_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_setMachineId(ListSessionOptions self, EString _machineId)"},
	 { (char *)"ListSessionOptions_isAdminListOption", _wrap_ListSessionOptions_isAdminListOption, METH_VARARGS, (char *)"ListSessionOptions_isAdminListOption(ListSessionOptions self) -> EBoolean"},
	 { (char *)"ListSessionOptions_setAdminListOption", (PyCFunction) _wrap_ListSessionOptions_setAdminListOption, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_setAdminListOption(ListSessionOptions self, EBoolean _adminListOption)"},
	 { (char *)"ListSessionOptions_getUserId", _wrap_ListSessionOptions_getUserId, METH_VARARGS, (char *)"ListSessionOptions_getUserId(ListSessionOptions self) -> EString"},
	 { (char *)"ListSessionOptions_setUserId", (PyCFunction) _wrap_ListSessionOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_setUserId(ListSessionOptions self, EString _userId)"},
	 { (char *)"ListSessionOptions_getSessionId", _wrap_ListSessionOptions_getSessionId, METH_VARARGS, (char *)"ListSessionOptions_getSessionId(ListSessionOptions self) -> EString"},
	 { (char *)"ListSessionOptions_setSessionId", (PyCFunction) _wrap_ListSessionOptions_setSessionId, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_setSessionId(ListSessionOptions self, EString _sessionId)"},
	 { (char *)"ListSessionOptions_getStartDateOption", _wrap_ListSessionOptions_getStartDateOption, METH_VARARGS, (char *)"ListSessionOptions_getStartDateOption(ListSessionOptions self) -> ELong"},
	 { (char *)"ListSessionOptions_setStartDateOption", (PyCFunction) _wrap_ListSessionOptions_setStartDateOption, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_setStartDateOption(ListSessionOptions self, ELong _startDateOption)"},
	 { (char *)"ListSessionOptions_getEndDateOption", _wrap_ListSessionOptions_getEndDateOption, METH_VARARGS, (char *)"ListSessionOptions_getEndDateOption(ListSessionOptions self) -> ELong"},
	 { (char *)"ListSessionOptions_setEndDateOption", (PyCFunction) _wrap_ListSessionOptions_setEndDateOption, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_setEndDateOption(ListSessionOptions self, ELong _endDateOption)"},
	 { (char *)"ListSessionOptions_eGet", (PyCFunction) _wrap_ListSessionOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_eGet(ListSessionOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ListSessionOptions_eSet", (PyCFunction) _wrap_ListSessionOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_eSet(ListSessionOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ListSessionOptions_eIsSet", (PyCFunction) _wrap_ListSessionOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_eIsSet(ListSessionOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ListSessionOptions_eUnset", (PyCFunction) _wrap_ListSessionOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ListSessionOptions_eUnset(ListSessionOptions self, EInt _featureID)"},
	 { (char *)"ListSessionOptions__eClass", _wrap_ListSessionOptions__eClass, METH_VARARGS, (char *)"ListSessionOptions__eClass(ListSessionOptions self) -> EClass_ptr"},
	 { (char *)"ListSessionOptions_swigregister", ListSessionOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_User", _wrap_new_User, METH_VARARGS, (char *)"new_User() -> User"},
	 { (char *)"delete_User", _wrap_delete_User, METH_VARARGS, (char *)"delete_User(User self)"},
	 { (char *)"User__initialize", _wrap_User__initialize, METH_VARARGS, (char *)"User__initialize(User self)"},
	 { (char *)"User_getUserId", _wrap_User_getUserId, METH_VARARGS, (char *)"User_getUserId(User self) -> EString"},
	 { (char *)"User_setUserId", (PyCFunction) _wrap_User_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"User_setUserId(User self, EString _userId)"},
	 { (char *)"User_getPassword", _wrap_User_getPassword, METH_VARARGS, (char *)"User_getPassword(User self) -> EString"},
	 { (char *)"User_setPassword", (PyCFunction) _wrap_User_setPassword, METH_VARARGS | METH_KEYWORDS, (char *)"User_setPassword(User self, EString _password)"},
	 { (char *)"User_getFirstname", _wrap_User_getFirstname, METH_VARARGS, (char *)"User_getFirstname(User self) -> EString"},
	 { (char *)"User_setFirstname", (PyCFunction) _wrap_User_setFirstname, METH_VARARGS | METH_KEYWORDS, (char *)"User_setFirstname(User self, EString _firstname)"},
	 { (char *)"User_getLastname", _wrap_User_getLastname, METH_VARARGS, (char *)"User_getLastname(User self) -> EString"},
	 { (char *)"User_setLastname", (PyCFunction) _wrap_User_setLastname, METH_VARARGS | METH_KEYWORDS, (char *)"User_setLastname(User self, EString _lastname)"},
	 { (char *)"User_getPrivilege", _wrap_User_getPrivilege, METH_VARARGS, (char *)"User_getPrivilege(User self) -> PrivilegeType"},
	 { (char *)"User_setPrivilege", (PyCFunction) _wrap_User_setPrivilege, METH_VARARGS | METH_KEYWORDS, (char *)"User_setPrivilege(User self, PrivilegeType _privilege)"},
	 { (char *)"User_getEmail", _wrap_User_getEmail, METH_VARARGS, (char *)"User_getEmail(User self) -> EString"},
	 { (char *)"User_setEmail", (PyCFunction) _wrap_User_setEmail, METH_VARARGS | METH_KEYWORDS, (char *)"User_setEmail(User self, EString _email)"},
	 { (char *)"User_getStatus", _wrap_User_getStatus, METH_VARARGS, (char *)"User_getStatus(User self) -> StatusType"},
	 { (char *)"User_setStatus", (PyCFunction) _wrap_User_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"User_setStatus(User self, StatusType _status)"},
	 { (char *)"User_eGet", (PyCFunction) _wrap_User_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"User_eGet(User self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"User_eSet", (PyCFunction) _wrap_User_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"User_eSet(User self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"User_eIsSet", (PyCFunction) _wrap_User_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"User_eIsSet(User self, EInt _featureID) -> EBoolean"},
	 { (char *)"User_eUnset", (PyCFunction) _wrap_User_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"User_eUnset(User self, EInt _featureID)"},
	 { (char *)"User__eClass", _wrap_User__eClass, METH_VARARGS, (char *)"User__eClass(User self) -> EClass_ptr"},
	 { (char *)"User_swigregister", User_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Command", _wrap_new_Command, METH_VARARGS, (char *)"new_Command() -> Command"},
	 { (char *)"delete_Command", _wrap_delete_Command, METH_VARARGS, (char *)"delete_Command(Command self)"},
	 { (char *)"Command__initialize", _wrap_Command__initialize, METH_VARARGS, (char *)"Command__initialize(Command self)"},
	 { (char *)"Command_getCommandId", _wrap_Command_getCommandId, METH_VARARGS, (char *)"Command_getCommandId(Command self) -> EString"},
	 { (char *)"Command_setCommandId", (PyCFunction) _wrap_Command_setCommandId, METH_VARARGS | METH_KEYWORDS, (char *)"Command_setCommandId(Command self, EString _commandId)"},
	 { (char *)"Command_getSessionId", _wrap_Command_getSessionId, METH_VARARGS, (char *)"Command_getSessionId(Command self) -> EString"},
	 { (char *)"Command_setSessionId", (PyCFunction) _wrap_Command_setSessionId, METH_VARARGS | METH_KEYWORDS, (char *)"Command_setSessionId(Command self, EString _sessionId)"},
	 { (char *)"Command_getMachineId", _wrap_Command_getMachineId, METH_VARARGS, (char *)"Command_getMachineId(Command self) -> EString"},
	 { (char *)"Command_setMachineId", (PyCFunction) _wrap_Command_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"Command_setMachineId(Command self, EString _machineId)"},
	 { (char *)"Command_getCmdDescription", _wrap_Command_getCmdDescription, METH_VARARGS, (char *)"Command_getCmdDescription(Command self) -> EString"},
	 { (char *)"Command_setCmdDescription", (PyCFunction) _wrap_Command_setCmdDescription, METH_VARARGS | METH_KEYWORDS, (char *)"Command_setCmdDescription(Command self, EString _cmdDescription)"},
	 { (char *)"Command_getCmdStartTime", _wrap_Command_getCmdStartTime, METH_VARARGS, (char *)"Command_getCmdStartTime(Command self) -> ELong"},
	 { (char *)"Command_setCmdStartTime", (PyCFunction) _wrap_Command_setCmdStartTime, METH_VARARGS | METH_KEYWORDS, (char *)"Command_setCmdStartTime(Command self, ELong _cmdStartTime)"},
	 { (char *)"Command_getCmdEndTime", _wrap_Command_getCmdEndTime, METH_VARARGS, (char *)"Command_getCmdEndTime(Command self) -> ELong"},
	 { (char *)"Command_setCmdEndTime", (PyCFunction) _wrap_Command_setCmdEndTime, METH_VARARGS | METH_KEYWORDS, (char *)"Command_setCmdEndTime(Command self, ELong _cmdEndTime)"},
	 { (char *)"Command_getStatus", _wrap_Command_getStatus, METH_VARARGS, (char *)"Command_getStatus(Command self) -> CommandStatusType"},
	 { (char *)"Command_setStatus", (PyCFunction) _wrap_Command_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"Command_setStatus(Command self, CommandStatusType _status)"},
	 { (char *)"Command_eGet", (PyCFunction) _wrap_Command_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Command_eGet(Command self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Command_eSet", (PyCFunction) _wrap_Command_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Command_eSet(Command self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Command_eIsSet", (PyCFunction) _wrap_Command_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Command_eIsSet(Command self, EInt _featureID) -> EBoolean"},
	 { (char *)"Command_eUnset", (PyCFunction) _wrap_Command_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Command_eUnset(Command self, EInt _featureID)"},
	 { (char *)"Command__eClass", _wrap_Command__eClass, METH_VARARGS, (char *)"Command__eClass(Command self) -> EClass_ptr"},
	 { (char *)"Command_swigregister", Command_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ListCmdOptions", _wrap_new_ListCmdOptions, METH_VARARGS, (char *)"new_ListCmdOptions() -> ListCmdOptions"},
	 { (char *)"delete_ListCmdOptions", _wrap_delete_ListCmdOptions, METH_VARARGS, (char *)"delete_ListCmdOptions(ListCmdOptions self)"},
	 { (char *)"ListCmdOptions__initialize", _wrap_ListCmdOptions__initialize, METH_VARARGS, (char *)"ListCmdOptions__initialize(ListCmdOptions self)"},
	 { (char *)"ListCmdOptions_isAdminListOption", _wrap_ListCmdOptions_isAdminListOption, METH_VARARGS, (char *)"ListCmdOptions_isAdminListOption(ListCmdOptions self) -> EBoolean"},
	 { (char *)"ListCmdOptions_setAdminListOption", (PyCFunction) _wrap_ListCmdOptions_setAdminListOption, METH_VARARGS | METH_KEYWORDS, (char *)"ListCmdOptions_setAdminListOption(ListCmdOptions self, EBoolean _adminListOption)"},
	 { (char *)"ListCmdOptions_getUserId", _wrap_ListCmdOptions_getUserId, METH_VARARGS, (char *)"ListCmdOptions_getUserId(ListCmdOptions self) -> EString"},
	 { (char *)"ListCmdOptions_setUserId", (PyCFunction) _wrap_ListCmdOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"ListCmdOptions_setUserId(ListCmdOptions self, EString _userId)"},
	 { (char *)"ListCmdOptions_getSessionId", _wrap_ListCmdOptions_getSessionId, METH_VARARGS, (char *)"ListCmdOptions_getSessionId(ListCmdOptions self) -> EString"},
	 { (char *)"ListCmdOptions_setSessionId", (PyCFunction) _wrap_ListCmdOptions_setSessionId, METH_VARARGS | METH_KEYWORDS, (char *)"ListCmdOptions_setSessionId(ListCmdOptions self, EString _sessionId)"},
	 { (char *)"ListCmdOptions_getStartDateOption", _wrap_ListCmdOptions_getStartDateOption, METH_VARARGS, (char *)"ListCmdOptions_getStartDateOption(ListCmdOptions self) -> ELong"},
	 { (char *)"ListCmdOptions_setStartDateOption", (PyCFunction) _wrap_ListCmdOptions_setStartDateOption, METH_VARARGS | METH_KEYWORDS, (char *)"ListCmdOptions_setStartDateOption(ListCmdOptions self, ELong _startDateOption)"},
	 { (char *)"ListCmdOptions_getEndDateOption", _wrap_ListCmdOptions_getEndDateOption, METH_VARARGS, (char *)"ListCmdOptions_getEndDateOption(ListCmdOptions self) -> ELong"},
	 { (char *)"ListCmdOptions_setEndDateOption", (PyCFunction) _wrap_ListCmdOptions_setEndDateOption, METH_VARARGS | METH_KEYWORDS, (char *)"ListCmdOptions_setEndDateOption(ListCmdOptions self, ELong _endDateOption)"},
	 { (char *)"ListCmdOptions_eGet", (PyCFunction) _wrap_ListCmdOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ListCmdOptions_eGet(ListCmdOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ListCmdOptions_eSet", (PyCFunction) _wrap_ListCmdOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListCmdOptions_eSet(ListCmdOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ListCmdOptions_eIsSet", (PyCFunction) _wrap_ListCmdOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListCmdOptions_eIsSet(ListCmdOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ListCmdOptions_eUnset", (PyCFunction) _wrap_ListCmdOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ListCmdOptions_eUnset(ListCmdOptions self, EInt _featureID)"},
	 { (char *)"ListCmdOptions__eClass", _wrap_ListCmdOptions__eClass, METH_VARARGS, (char *)"ListCmdOptions__eClass(ListCmdOptions self) -> EClass_ptr"},
	 { (char *)"ListCmdOptions_swigregister", ListCmdOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LocalAccount", _wrap_new_LocalAccount, METH_VARARGS, (char *)"new_LocalAccount() -> LocalAccount"},
	 { (char *)"delete_LocalAccount", _wrap_delete_LocalAccount, METH_VARARGS, (char *)"delete_LocalAccount(LocalAccount self)"},
	 { (char *)"LocalAccount__initialize", _wrap_LocalAccount__initialize, METH_VARARGS, (char *)"LocalAccount__initialize(LocalAccount self)"},
	 { (char *)"LocalAccount_getUserId", _wrap_LocalAccount_getUserId, METH_VARARGS, (char *)"LocalAccount_getUserId(LocalAccount self) -> EString"},
	 { (char *)"LocalAccount_setUserId", (PyCFunction) _wrap_LocalAccount_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"LocalAccount_setUserId(LocalAccount self, EString _userId)"},
	 { (char *)"LocalAccount_getMachineId", _wrap_LocalAccount_getMachineId, METH_VARARGS, (char *)"LocalAccount_getMachineId(LocalAccount self) -> EString"},
	 { (char *)"LocalAccount_setMachineId", (PyCFunction) _wrap_LocalAccount_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"LocalAccount_setMachineId(LocalAccount self, EString _machineId)"},
	 { (char *)"LocalAccount_getAcLogin", _wrap_LocalAccount_getAcLogin, METH_VARARGS, (char *)"LocalAccount_getAcLogin(LocalAccount self) -> EString"},
	 { (char *)"LocalAccount_setAcLogin", (PyCFunction) _wrap_LocalAccount_setAcLogin, METH_VARARGS | METH_KEYWORDS, (char *)"LocalAccount_setAcLogin(LocalAccount self, EString _acLogin)"},
	 { (char *)"LocalAccount_getSshKeyPath", _wrap_LocalAccount_getSshKeyPath, METH_VARARGS, (char *)"LocalAccount_getSshKeyPath(LocalAccount self) -> EString"},
	 { (char *)"LocalAccount_setSshKeyPath", (PyCFunction) _wrap_LocalAccount_setSshKeyPath, METH_VARARGS | METH_KEYWORDS, (char *)"LocalAccount_setSshKeyPath(LocalAccount self, EString _sshKeyPath)"},
	 { (char *)"LocalAccount_getHomeDirectory", _wrap_LocalAccount_getHomeDirectory, METH_VARARGS, (char *)"LocalAccount_getHomeDirectory(LocalAccount self) -> EString"},
	 { (char *)"LocalAccount_setHomeDirectory", (PyCFunction) _wrap_LocalAccount_setHomeDirectory, METH_VARARGS | METH_KEYWORDS, (char *)"LocalAccount_setHomeDirectory(LocalAccount self, EString _homeDirectory)"},
	 { (char *)"LocalAccount_eGet", (PyCFunction) _wrap_LocalAccount_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"LocalAccount_eGet(LocalAccount self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"LocalAccount_eSet", (PyCFunction) _wrap_LocalAccount_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"LocalAccount_eSet(LocalAccount self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"LocalAccount_eIsSet", (PyCFunction) _wrap_LocalAccount_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"LocalAccount_eIsSet(LocalAccount self, EInt _featureID) -> EBoolean"},
	 { (char *)"LocalAccount_eUnset", (PyCFunction) _wrap_LocalAccount_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"LocalAccount_eUnset(LocalAccount self, EInt _featureID)"},
	 { (char *)"LocalAccount__eClass", _wrap_LocalAccount__eClass, METH_VARARGS, (char *)"LocalAccount__eClass(LocalAccount self) -> EClass_ptr"},
	 { (char *)"LocalAccount_swigregister", LocalAccount_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ListLocalAccOptions", _wrap_new_ListLocalAccOptions, METH_VARARGS, (char *)"new_ListLocalAccOptions() -> ListLocalAccOptions"},
	 { (char *)"delete_ListLocalAccOptions", _wrap_delete_ListLocalAccOptions, METH_VARARGS, (char *)"delete_ListLocalAccOptions(ListLocalAccOptions self)"},
	 { (char *)"ListLocalAccOptions__initialize", _wrap_ListLocalAccOptions__initialize, METH_VARARGS, (char *)"ListLocalAccOptions__initialize(ListLocalAccOptions self)"},
	 { (char *)"ListLocalAccOptions_isAdminListOption", _wrap_ListLocalAccOptions_isAdminListOption, METH_VARARGS, (char *)"ListLocalAccOptions_isAdminListOption(ListLocalAccOptions self) -> EBoolean"},
	 { (char *)"ListLocalAccOptions_setAdminListOption", (PyCFunction) _wrap_ListLocalAccOptions_setAdminListOption, METH_VARARGS | METH_KEYWORDS, (char *)"ListLocalAccOptions_setAdminListOption(ListLocalAccOptions self, EBoolean _adminListOption)"},
	 { (char *)"ListLocalAccOptions_getUserId", _wrap_ListLocalAccOptions_getUserId, METH_VARARGS, (char *)"ListLocalAccOptions_getUserId(ListLocalAccOptions self) -> EString"},
	 { (char *)"ListLocalAccOptions_setUserId", (PyCFunction) _wrap_ListLocalAccOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"ListLocalAccOptions_setUserId(ListLocalAccOptions self, EString _userId)"},
	 { (char *)"ListLocalAccOptions_getMachineId", _wrap_ListLocalAccOptions_getMachineId, METH_VARARGS, (char *)"ListLocalAccOptions_getMachineId(ListLocalAccOptions self) -> EString"},
	 { (char *)"ListLocalAccOptions_setMachineId", (PyCFunction) _wrap_ListLocalAccOptions_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"ListLocalAccOptions_setMachineId(ListLocalAccOptions self, EString _machineId)"},
	 { (char *)"ListLocalAccOptions_eGet", (PyCFunction) _wrap_ListLocalAccOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ListLocalAccOptions_eGet(ListLocalAccOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ListLocalAccOptions_eSet", (PyCFunction) _wrap_ListLocalAccOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListLocalAccOptions_eSet(ListLocalAccOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ListLocalAccOptions_eIsSet", (PyCFunction) _wrap_ListLocalAccOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListLocalAccOptions_eIsSet(ListLocalAccOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ListLocalAccOptions_eUnset", (PyCFunction) _wrap_ListLocalAccOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ListLocalAccOptions_eUnset(ListLocalAccOptions self, EInt _featureID)"},
	 { (char *)"ListLocalAccOptions__eClass", _wrap_ListLocalAccOptions__eClass, METH_VARARGS, (char *)"ListLocalAccOptions__eClass(ListLocalAccOptions self) -> EClass_ptr"},
	 { (char *)"ListLocalAccOptions_swigregister", ListLocalAccOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Machine", _wrap_new_Machine, METH_VARARGS, (char *)"new_Machine() -> Machine"},
	 { (char *)"delete_Machine", _wrap_delete_Machine, METH_VARARGS, (char *)"delete_Machine(Machine self)"},
	 { (char *)"Machine__initialize", _wrap_Machine__initialize, METH_VARARGS, (char *)"Machine__initialize(Machine self)"},
	 { (char *)"Machine_getMachineId", _wrap_Machine_getMachineId, METH_VARARGS, (char *)"Machine_getMachineId(Machine self) -> EString"},
	 { (char *)"Machine_setMachineId", (PyCFunction) _wrap_Machine_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_setMachineId(Machine self, EString _machineId)"},
	 { (char *)"Machine_getName", _wrap_Machine_getName, METH_VARARGS, (char *)"Machine_getName(Machine self) -> EString"},
	 { (char *)"Machine_setName", (PyCFunction) _wrap_Machine_setName, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_setName(Machine self, EString _name)"},
	 { (char *)"Machine_getSite", _wrap_Machine_getSite, METH_VARARGS, (char *)"Machine_getSite(Machine self) -> EString"},
	 { (char *)"Machine_setSite", (PyCFunction) _wrap_Machine_setSite, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_setSite(Machine self, EString _site)"},
	 { (char *)"Machine_getMachineDescription", _wrap_Machine_getMachineDescription, METH_VARARGS, (char *)"Machine_getMachineDescription(Machine self) -> EString"},
	 { (char *)"Machine_setMachineDescription", (PyCFunction) _wrap_Machine_setMachineDescription, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_setMachineDescription(Machine self, EString _machineDescription)"},
	 { (char *)"Machine_getLanguage", _wrap_Machine_getLanguage, METH_VARARGS, (char *)"Machine_getLanguage(Machine self) -> EString"},
	 { (char *)"Machine_setLanguage", (PyCFunction) _wrap_Machine_setLanguage, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_setLanguage(Machine self, EString _language)"},
	 { (char *)"Machine_getStatus", _wrap_Machine_getStatus, METH_VARARGS, (char *)"Machine_getStatus(Machine self) -> StatusType"},
	 { (char *)"Machine_setStatus", (PyCFunction) _wrap_Machine_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_setStatus(Machine self, StatusType _status)"},
	 { (char *)"Machine_getSshPublicKey", _wrap_Machine_getSshPublicKey, METH_VARARGS, (char *)"Machine_getSshPublicKey(Machine self) -> EString"},
	 { (char *)"Machine_setSshPublicKey", (PyCFunction) _wrap_Machine_setSshPublicKey, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_setSshPublicKey(Machine self, EString _sshPublicKey)"},
	 { (char *)"Machine_eGet", (PyCFunction) _wrap_Machine_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_eGet(Machine self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Machine_eSet", (PyCFunction) _wrap_Machine_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_eSet(Machine self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Machine_eIsSet", (PyCFunction) _wrap_Machine_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_eIsSet(Machine self, EInt _featureID) -> EBoolean"},
	 { (char *)"Machine_eUnset", (PyCFunction) _wrap_Machine_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Machine_eUnset(Machine self, EInt _featureID)"},
	 { (char *)"Machine__eClass", _wrap_Machine__eClass, METH_VARARGS, (char *)"Machine__eClass(Machine self) -> EClass_ptr"},
	 { (char *)"Machine_swigregister", Machine_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ListMachineOptions", _wrap_new_ListMachineOptions, METH_VARARGS, (char *)"new_ListMachineOptions() -> ListMachineOptions"},
	 { (char *)"delete_ListMachineOptions", _wrap_delete_ListMachineOptions, METH_VARARGS, (char *)"delete_ListMachineOptions(ListMachineOptions self)"},
	 { (char *)"ListMachineOptions__initialize", _wrap_ListMachineOptions__initialize, METH_VARARGS, (char *)"ListMachineOptions__initialize(ListMachineOptions self)"},
	 { (char *)"ListMachineOptions_getUserId", _wrap_ListMachineOptions_getUserId, METH_VARARGS, (char *)"ListMachineOptions_getUserId(ListMachineOptions self) -> EString"},
	 { (char *)"ListMachineOptions_setUserId", (PyCFunction) _wrap_ListMachineOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"ListMachineOptions_setUserId(ListMachineOptions self, EString _userId)"},
	 { (char *)"ListMachineOptions_isListAllMachine", _wrap_ListMachineOptions_isListAllMachine, METH_VARARGS, (char *)"ListMachineOptions_isListAllMachine(ListMachineOptions self) -> EBoolean"},
	 { (char *)"ListMachineOptions_setListAllMachine", (PyCFunction) _wrap_ListMachineOptions_setListAllMachine, METH_VARARGS | METH_KEYWORDS, (char *)"ListMachineOptions_setListAllMachine(ListMachineOptions self, EBoolean _listAllMachine)"},
	 { (char *)"ListMachineOptions_getMachineId", _wrap_ListMachineOptions_getMachineId, METH_VARARGS, (char *)"ListMachineOptions_getMachineId(ListMachineOptions self) -> EString"},
	 { (char *)"ListMachineOptions_setMachineId", (PyCFunction) _wrap_ListMachineOptions_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"ListMachineOptions_setMachineId(ListMachineOptions self, EString _machineId)"},
	 { (char *)"ListMachineOptions_eGet", (PyCFunction) _wrap_ListMachineOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ListMachineOptions_eGet(ListMachineOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ListMachineOptions_eSet", (PyCFunction) _wrap_ListMachineOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListMachineOptions_eSet(ListMachineOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ListMachineOptions_eIsSet", (PyCFunction) _wrap_ListMachineOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListMachineOptions_eIsSet(ListMachineOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ListMachineOptions_eUnset", (PyCFunction) _wrap_ListMachineOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ListMachineOptions_eUnset(ListMachineOptions self, EInt _featureID)"},
	 { (char *)"ListMachineOptions__eClass", _wrap_ListMachineOptions__eClass, METH_VARARGS, (char *)"ListMachineOptions__eClass(ListMachineOptions self) -> EClass_ptr"},
	 { (char *)"ListMachineOptions_swigregister", ListMachineOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Configuration", _wrap_new_Configuration, METH_VARARGS, (char *)"new_Configuration() -> Configuration"},
	 { (char *)"delete_Configuration", _wrap_delete_Configuration, METH_VARARGS, (char *)"delete_Configuration(Configuration self)"},
	 { (char *)"Configuration__initialize", _wrap_Configuration__initialize, METH_VARARGS, (char *)"Configuration__initialize(Configuration self)"},
	 { (char *)"Configuration_getFilePath", _wrap_Configuration_getFilePath, METH_VARARGS, (char *)"Configuration_getFilePath(Configuration self) -> EString"},
	 { (char *)"Configuration_setFilePath", (PyCFunction) _wrap_Configuration_setFilePath, METH_VARARGS | METH_KEYWORDS, (char *)"Configuration_setFilePath(Configuration self, EString _filePath)"},
	 { (char *)"Configuration_getListConfUsers", _wrap_Configuration_getListConfUsers, METH_VARARGS, (char *)"Configuration_getListConfUsers(Configuration self) -> ::ecorecpp::mapping::EList<(::UMS_Data::User)>"},
	 { (char *)"Configuration_getListConfMachines", _wrap_Configuration_getListConfMachines, METH_VARARGS, (char *)"Configuration_getListConfMachines(Configuration self) -> ::ecorecpp::mapping::EList<(::UMS_Data::Machine)>"},
	 { (char *)"Configuration_getListConfLocalAccounts", _wrap_Configuration_getListConfLocalAccounts, METH_VARARGS, (char *)"Configuration_getListConfLocalAccounts(Configuration self) -> ::ecorecpp::mapping::EList<(::UMS_Data::LocalAccount)>"},
	 { (char *)"Configuration_getListConfAuthSystems", _wrap_Configuration_getListConfAuthSystems, METH_VARARGS, (char *)"Configuration_getListConfAuthSystems(Configuration self) -> ::ecorecpp::mapping::EList<(::UMS_Data::AuthSystem)>"},
	 { (char *)"Configuration_getListConfAuthAccounts", _wrap_Configuration_getListConfAuthAccounts, METH_VARARGS, (char *)"Configuration_getListConfAuthAccounts(Configuration self) -> ::ecorecpp::mapping::EList<(::UMS_Data::AuthAccount)>"},
	 { (char *)"Configuration_eGet", (PyCFunction) _wrap_Configuration_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Configuration_eGet(Configuration self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Configuration_eSet", (PyCFunction) _wrap_Configuration_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Configuration_eSet(Configuration self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Configuration_eIsSet", (PyCFunction) _wrap_Configuration_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Configuration_eIsSet(Configuration self, EInt _featureID) -> EBoolean"},
	 { (char *)"Configuration_eUnset", (PyCFunction) _wrap_Configuration_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Configuration_eUnset(Configuration self, EInt _featureID)"},
	 { (char *)"Configuration__eClass", _wrap_Configuration__eClass, METH_VARARGS, (char *)"Configuration__eClass(Configuration self) -> EClass_ptr"},
	 { (char *)"Configuration_swigregister", Configuration_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_OptionValue", _wrap_new_OptionValue, METH_VARARGS, (char *)"new_OptionValue() -> OptionValue"},
	 { (char *)"delete_OptionValue", _wrap_delete_OptionValue, METH_VARARGS, (char *)"delete_OptionValue(OptionValue self)"},
	 { (char *)"OptionValue__initialize", _wrap_OptionValue__initialize, METH_VARARGS, (char *)"OptionValue__initialize(OptionValue self)"},
	 { (char *)"OptionValue_getOptionName", _wrap_OptionValue_getOptionName, METH_VARARGS, (char *)"OptionValue_getOptionName(OptionValue self) -> EString"},
	 { (char *)"OptionValue_setOptionName", (PyCFunction) _wrap_OptionValue_setOptionName, METH_VARARGS | METH_KEYWORDS, (char *)"OptionValue_setOptionName(OptionValue self, EString _optionName)"},
	 { (char *)"OptionValue_getValue", _wrap_OptionValue_getValue, METH_VARARGS, (char *)"OptionValue_getValue(OptionValue self) -> EString"},
	 { (char *)"OptionValue_setValue", (PyCFunction) _wrap_OptionValue_setValue, METH_VARARGS | METH_KEYWORDS, (char *)"OptionValue_setValue(OptionValue self, EString _value)"},
	 { (char *)"OptionValue_eGet", (PyCFunction) _wrap_OptionValue_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"OptionValue_eGet(OptionValue self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"OptionValue_eSet", (PyCFunction) _wrap_OptionValue_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"OptionValue_eSet(OptionValue self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"OptionValue_eIsSet", (PyCFunction) _wrap_OptionValue_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"OptionValue_eIsSet(OptionValue self, EInt _featureID) -> EBoolean"},
	 { (char *)"OptionValue_eUnset", (PyCFunction) _wrap_OptionValue_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"OptionValue_eUnset(OptionValue self, EInt _featureID)"},
	 { (char *)"OptionValue__eClass", _wrap_OptionValue__eClass, METH_VARARGS, (char *)"OptionValue__eClass(OptionValue self) -> EClass_ptr"},
	 { (char *)"OptionValue_swigregister", OptionValue_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ListOptOptions", _wrap_new_ListOptOptions, METH_VARARGS, (char *)"new_ListOptOptions() -> ListOptOptions"},
	 { (char *)"delete_ListOptOptions", _wrap_delete_ListOptOptions, METH_VARARGS, (char *)"delete_ListOptOptions(ListOptOptions self)"},
	 { (char *)"ListOptOptions__initialize", _wrap_ListOptOptions__initialize, METH_VARARGS, (char *)"ListOptOptions__initialize(ListOptOptions self)"},
	 { (char *)"ListOptOptions_isListAllDeftValue", _wrap_ListOptOptions_isListAllDeftValue, METH_VARARGS, (char *)"ListOptOptions_isListAllDeftValue(ListOptOptions self) -> EBoolean"},
	 { (char *)"ListOptOptions_setListAllDeftValue", (PyCFunction) _wrap_ListOptOptions_setListAllDeftValue, METH_VARARGS | METH_KEYWORDS, (char *)"ListOptOptions_setListAllDeftValue(ListOptOptions self, EBoolean _listAllDeftValue)"},
	 { (char *)"ListOptOptions_getUserId", _wrap_ListOptOptions_getUserId, METH_VARARGS, (char *)"ListOptOptions_getUserId(ListOptOptions self) -> EString"},
	 { (char *)"ListOptOptions_setUserId", (PyCFunction) _wrap_ListOptOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"ListOptOptions_setUserId(ListOptOptions self, EString _userId)"},
	 { (char *)"ListOptOptions_getOptionName", _wrap_ListOptOptions_getOptionName, METH_VARARGS, (char *)"ListOptOptions_getOptionName(ListOptOptions self) -> EString"},
	 { (char *)"ListOptOptions_setOptionName", (PyCFunction) _wrap_ListOptOptions_setOptionName, METH_VARARGS | METH_KEYWORDS, (char *)"ListOptOptions_setOptionName(ListOptOptions self, EString _optionName)"},
	 { (char *)"ListOptOptions_eGet", (PyCFunction) _wrap_ListOptOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ListOptOptions_eGet(ListOptOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ListOptOptions_eSet", (PyCFunction) _wrap_ListOptOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListOptOptions_eSet(ListOptOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ListOptOptions_eIsSet", (PyCFunction) _wrap_ListOptOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListOptOptions_eIsSet(ListOptOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ListOptOptions_eUnset", (PyCFunction) _wrap_ListOptOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ListOptOptions_eUnset(ListOptOptions self, EInt _featureID)"},
	 { (char *)"ListOptOptions__eClass", _wrap_ListOptOptions__eClass, METH_VARARGS, (char *)"ListOptOptions__eClass(ListOptOptions self) -> EClass_ptr"},
	 { (char *)"ListOptOptions_swigregister", ListOptOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AuthAccount", _wrap_new_AuthAccount, METH_VARARGS, (char *)"new_AuthAccount() -> AuthAccount"},
	 { (char *)"delete_AuthAccount", _wrap_delete_AuthAccount, METH_VARARGS, (char *)"delete_AuthAccount(AuthAccount self)"},
	 { (char *)"AuthAccount__initialize", _wrap_AuthAccount__initialize, METH_VARARGS, (char *)"AuthAccount__initialize(AuthAccount self)"},
	 { (char *)"AuthAccount_getAuthSystemId", _wrap_AuthAccount_getAuthSystemId, METH_VARARGS, (char *)"AuthAccount_getAuthSystemId(AuthAccount self) -> EString"},
	 { (char *)"AuthAccount_setAuthSystemId", (PyCFunction) _wrap_AuthAccount_setAuthSystemId, METH_VARARGS | METH_KEYWORDS, (char *)"AuthAccount_setAuthSystemId(AuthAccount self, EString _authSystemId)"},
	 { (char *)"AuthAccount_getUserId", _wrap_AuthAccount_getUserId, METH_VARARGS, (char *)"AuthAccount_getUserId(AuthAccount self) -> EString"},
	 { (char *)"AuthAccount_setUserId", (PyCFunction) _wrap_AuthAccount_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"AuthAccount_setUserId(AuthAccount self, EString _userId)"},
	 { (char *)"AuthAccount_getAcLogin", _wrap_AuthAccount_getAcLogin, METH_VARARGS, (char *)"AuthAccount_getAcLogin(AuthAccount self) -> EString"},
	 { (char *)"AuthAccount_setAcLogin", (PyCFunction) _wrap_AuthAccount_setAcLogin, METH_VARARGS | METH_KEYWORDS, (char *)"AuthAccount_setAcLogin(AuthAccount self, EString _acLogin)"},
	 { (char *)"AuthAccount_eGet", (PyCFunction) _wrap_AuthAccount_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"AuthAccount_eGet(AuthAccount self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"AuthAccount_eSet", (PyCFunction) _wrap_AuthAccount_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"AuthAccount_eSet(AuthAccount self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"AuthAccount_eIsSet", (PyCFunction) _wrap_AuthAccount_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"AuthAccount_eIsSet(AuthAccount self, EInt _featureID) -> EBoolean"},
	 { (char *)"AuthAccount_eUnset", (PyCFunction) _wrap_AuthAccount_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"AuthAccount_eUnset(AuthAccount self, EInt _featureID)"},
	 { (char *)"AuthAccount__eClass", _wrap_AuthAccount__eClass, METH_VARARGS, (char *)"AuthAccount__eClass(AuthAccount self) -> EClass_ptr"},
	 { (char *)"AuthAccount_swigregister", AuthAccount_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AuthSystem", _wrap_new_AuthSystem, METH_VARARGS, (char *)"new_AuthSystem() -> AuthSystem"},
	 { (char *)"delete_AuthSystem", _wrap_delete_AuthSystem, METH_VARARGS, (char *)"delete_AuthSystem(AuthSystem self)"},
	 { (char *)"AuthSystem__initialize", _wrap_AuthSystem__initialize, METH_VARARGS, (char *)"AuthSystem__initialize(AuthSystem self)"},
	 { (char *)"AuthSystem_getAuthSystemId", _wrap_AuthSystem_getAuthSystemId, METH_VARARGS, (char *)"AuthSystem_getAuthSystemId(AuthSystem self) -> EString"},
	 { (char *)"AuthSystem_setAuthSystemId", (PyCFunction) _wrap_AuthSystem_setAuthSystemId, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_setAuthSystemId(AuthSystem self, EString _authSystemId)"},
	 { (char *)"AuthSystem_getName", _wrap_AuthSystem_getName, METH_VARARGS, (char *)"AuthSystem_getName(AuthSystem self) -> EString"},
	 { (char *)"AuthSystem_setName", (PyCFunction) _wrap_AuthSystem_setName, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_setName(AuthSystem self, EString _name)"},
	 { (char *)"AuthSystem_getURI", _wrap_AuthSystem_getURI, METH_VARARGS, (char *)"AuthSystem_getURI(AuthSystem self) -> EString"},
	 { (char *)"AuthSystem_setURI", (PyCFunction) _wrap_AuthSystem_setURI, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_setURI(AuthSystem self, EString _URI)"},
	 { (char *)"AuthSystem_getAuthLogin", _wrap_AuthSystem_getAuthLogin, METH_VARARGS, (char *)"AuthSystem_getAuthLogin(AuthSystem self) -> EString"},
	 { (char *)"AuthSystem_setAuthLogin", (PyCFunction) _wrap_AuthSystem_setAuthLogin, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_setAuthLogin(AuthSystem self, EString _authLogin)"},
	 { (char *)"AuthSystem_getAuthPassword", _wrap_AuthSystem_getAuthPassword, METH_VARARGS, (char *)"AuthSystem_getAuthPassword(AuthSystem self) -> EString"},
	 { (char *)"AuthSystem_setAuthPassword", (PyCFunction) _wrap_AuthSystem_setAuthPassword, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_setAuthPassword(AuthSystem self, EString _authPassword)"},
	 { (char *)"AuthSystem_getUserPasswordEncryption", _wrap_AuthSystem_getUserPasswordEncryption, METH_VARARGS, (char *)"AuthSystem_getUserPasswordEncryption(AuthSystem self) -> EncryptionMethod"},
	 { (char *)"AuthSystem_setUserPasswordEncryption", (PyCFunction) _wrap_AuthSystem_setUserPasswordEncryption, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_setUserPasswordEncryption(AuthSystem self, EncryptionMethod _userPasswordEncryption)"},
	 { (char *)"AuthSystem_getType", _wrap_AuthSystem_getType, METH_VARARGS, (char *)"AuthSystem_getType(AuthSystem self) -> AuthType"},
	 { (char *)"AuthSystem_setType", (PyCFunction) _wrap_AuthSystem_setType, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_setType(AuthSystem self, AuthType _type)"},
	 { (char *)"AuthSystem_getStatus", _wrap_AuthSystem_getStatus, METH_VARARGS, (char *)"AuthSystem_getStatus(AuthSystem self) -> StatusType"},
	 { (char *)"AuthSystem_setStatus", (PyCFunction) _wrap_AuthSystem_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_setStatus(AuthSystem self, StatusType _status)"},
	 { (char *)"AuthSystem_getLdapBase", _wrap_AuthSystem_getLdapBase, METH_VARARGS, (char *)"AuthSystem_getLdapBase(AuthSystem self) -> EString"},
	 { (char *)"AuthSystem_setLdapBase", (PyCFunction) _wrap_AuthSystem_setLdapBase, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_setLdapBase(AuthSystem self, EString _ldapBase)"},
	 { (char *)"AuthSystem_eGet", (PyCFunction) _wrap_AuthSystem_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_eGet(AuthSystem self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"AuthSystem_eSet", (PyCFunction) _wrap_AuthSystem_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_eSet(AuthSystem self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"AuthSystem_eIsSet", (PyCFunction) _wrap_AuthSystem_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_eIsSet(AuthSystem self, EInt _featureID) -> EBoolean"},
	 { (char *)"AuthSystem_eUnset", (PyCFunction) _wrap_AuthSystem_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"AuthSystem_eUnset(AuthSystem self, EInt _featureID)"},
	 { (char *)"AuthSystem__eClass", _wrap_AuthSystem__eClass, METH_VARARGS, (char *)"AuthSystem__eClass(AuthSystem self) -> EClass_ptr"},
	 { (char *)"AuthSystem_swigregister", AuthSystem_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ListAuthSysOptions", _wrap_new_ListAuthSysOptions, METH_VARARGS, (char *)"new_ListAuthSysOptions() -> ListAuthSysOptions"},
	 { (char *)"delete_ListAuthSysOptions", _wrap_delete_ListAuthSysOptions, METH_VARARGS, (char *)"delete_ListAuthSysOptions(ListAuthSysOptions self)"},
	 { (char *)"ListAuthSysOptions__initialize", _wrap_ListAuthSysOptions__initialize, METH_VARARGS, (char *)"ListAuthSysOptions__initialize(ListAuthSysOptions self)"},
	 { (char *)"ListAuthSysOptions_isListAllAuthSystems", _wrap_ListAuthSysOptions_isListAllAuthSystems, METH_VARARGS, (char *)"ListAuthSysOptions_isListAllAuthSystems(ListAuthSysOptions self) -> EBoolean"},
	 { (char *)"ListAuthSysOptions_setListAllAuthSystems", (PyCFunction) _wrap_ListAuthSysOptions_setListAllAuthSystems, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthSysOptions_setListAllAuthSystems(ListAuthSysOptions self, EBoolean _listAllAuthSystems)"},
	 { (char *)"ListAuthSysOptions_isListFullInfo", _wrap_ListAuthSysOptions_isListFullInfo, METH_VARARGS, (char *)"ListAuthSysOptions_isListFullInfo(ListAuthSysOptions self) -> EBoolean"},
	 { (char *)"ListAuthSysOptions_setListFullInfo", (PyCFunction) _wrap_ListAuthSysOptions_setListFullInfo, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthSysOptions_setListFullInfo(ListAuthSysOptions self, EBoolean _listFullInfo)"},
	 { (char *)"ListAuthSysOptions_getUserId", _wrap_ListAuthSysOptions_getUserId, METH_VARARGS, (char *)"ListAuthSysOptions_getUserId(ListAuthSysOptions self) -> EString"},
	 { (char *)"ListAuthSysOptions_setUserId", (PyCFunction) _wrap_ListAuthSysOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthSysOptions_setUserId(ListAuthSysOptions self, EString _userId)"},
	 { (char *)"ListAuthSysOptions_getAuthSystemId", _wrap_ListAuthSysOptions_getAuthSystemId, METH_VARARGS, (char *)"ListAuthSysOptions_getAuthSystemId(ListAuthSysOptions self) -> EString"},
	 { (char *)"ListAuthSysOptions_setAuthSystemId", (PyCFunction) _wrap_ListAuthSysOptions_setAuthSystemId, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthSysOptions_setAuthSystemId(ListAuthSysOptions self, EString _authSystemId)"},
	 { (char *)"ListAuthSysOptions_eGet", (PyCFunction) _wrap_ListAuthSysOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthSysOptions_eGet(ListAuthSysOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ListAuthSysOptions_eSet", (PyCFunction) _wrap_ListAuthSysOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthSysOptions_eSet(ListAuthSysOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ListAuthSysOptions_eIsSet", (PyCFunction) _wrap_ListAuthSysOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthSysOptions_eIsSet(ListAuthSysOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ListAuthSysOptions_eUnset", (PyCFunction) _wrap_ListAuthSysOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthSysOptions_eUnset(ListAuthSysOptions self, EInt _featureID)"},
	 { (char *)"ListAuthSysOptions__eClass", _wrap_ListAuthSysOptions__eClass, METH_VARARGS, (char *)"ListAuthSysOptions__eClass(ListAuthSysOptions self) -> EClass_ptr"},
	 { (char *)"ListAuthSysOptions_swigregister", ListAuthSysOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ListAuthAccOptions", _wrap_new_ListAuthAccOptions, METH_VARARGS, (char *)"new_ListAuthAccOptions() -> ListAuthAccOptions"},
	 { (char *)"delete_ListAuthAccOptions", _wrap_delete_ListAuthAccOptions, METH_VARARGS, (char *)"delete_ListAuthAccOptions(ListAuthAccOptions self)"},
	 { (char *)"ListAuthAccOptions__initialize", _wrap_ListAuthAccOptions__initialize, METH_VARARGS, (char *)"ListAuthAccOptions__initialize(ListAuthAccOptions self)"},
	 { (char *)"ListAuthAccOptions_isListAll", _wrap_ListAuthAccOptions_isListAll, METH_VARARGS, (char *)"ListAuthAccOptions_isListAll(ListAuthAccOptions self) -> EBoolean"},
	 { (char *)"ListAuthAccOptions_setListAll", (PyCFunction) _wrap_ListAuthAccOptions_setListAll, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthAccOptions_setListAll(ListAuthAccOptions self, EBoolean _listAll)"},
	 { (char *)"ListAuthAccOptions_getUserId", _wrap_ListAuthAccOptions_getUserId, METH_VARARGS, (char *)"ListAuthAccOptions_getUserId(ListAuthAccOptions self) -> EString"},
	 { (char *)"ListAuthAccOptions_setUserId", (PyCFunction) _wrap_ListAuthAccOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthAccOptions_setUserId(ListAuthAccOptions self, EString _userId)"},
	 { (char *)"ListAuthAccOptions_getAuthSystemId", _wrap_ListAuthAccOptions_getAuthSystemId, METH_VARARGS, (char *)"ListAuthAccOptions_getAuthSystemId(ListAuthAccOptions self) -> EString"},
	 { (char *)"ListAuthAccOptions_setAuthSystemId", (PyCFunction) _wrap_ListAuthAccOptions_setAuthSystemId, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthAccOptions_setAuthSystemId(ListAuthAccOptions self, EString _authSystemId)"},
	 { (char *)"ListAuthAccOptions_eGet", (PyCFunction) _wrap_ListAuthAccOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthAccOptions_eGet(ListAuthAccOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ListAuthAccOptions_eSet", (PyCFunction) _wrap_ListAuthAccOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthAccOptions_eSet(ListAuthAccOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ListAuthAccOptions_eIsSet", (PyCFunction) _wrap_ListAuthAccOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthAccOptions_eIsSet(ListAuthAccOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ListAuthAccOptions_eUnset", (PyCFunction) _wrap_ListAuthAccOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ListAuthAccOptions_eUnset(ListAuthAccOptions self, EInt _featureID)"},
	 { (char *)"ListAuthAccOptions__eClass", _wrap_ListAuthAccOptions__eClass, METH_VARARGS, (char *)"ListAuthAccOptions__eClass(ListAuthAccOptions self) -> EClass_ptr"},
	 { (char *)"ListAuthAccOptions_swigregister", ListAuthAccOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Job", _wrap_new_Job, METH_VARARGS, (char *)"new_Job() -> Job"},
	 { (char *)"delete_Job", _wrap_delete_Job, METH_VARARGS, (char *)"delete_Job(Job self)"},
	 { (char *)"Job__initialize", _wrap_Job__initialize, METH_VARARGS, (char *)"Job__initialize(Job self)"},
	 { (char *)"Job_getSessionId", _wrap_Job_getSessionId, METH_VARARGS, (char *)"Job_getSessionId(Job self) -> EString"},
	 { (char *)"Job_setSessionId", (PyCFunction) _wrap_Job_setSessionId, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setSessionId(Job self, EString _sessionId)"},
	 { (char *)"Job_getSubmitMachineId", _wrap_Job_getSubmitMachineId, METH_VARARGS, (char *)"Job_getSubmitMachineId(Job self) -> EString"},
	 { (char *)"Job_setSubmitMachineId", (PyCFunction) _wrap_Job_setSubmitMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setSubmitMachineId(Job self, EString _submitMachineId)"},
	 { (char *)"Job_getSubmitMachineName", _wrap_Job_getSubmitMachineName, METH_VARARGS, (char *)"Job_getSubmitMachineName(Job self) -> EString"},
	 { (char *)"Job_setSubmitMachineName", (PyCFunction) _wrap_Job_setSubmitMachineName, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setSubmitMachineName(Job self, EString _submitMachineName)"},
	 { (char *)"Job_getJobId", _wrap_Job_getJobId, METH_VARARGS, (char *)"Job_getJobId(Job self) -> EString"},
	 { (char *)"Job_setJobId", (PyCFunction) _wrap_Job_setJobId, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setJobId(Job self, EString _jobId)"},
	 { (char *)"Job_getJobName", _wrap_Job_getJobName, METH_VARARGS, (char *)"Job_getJobName(Job self) -> EString"},
	 { (char *)"Job_setJobName", (PyCFunction) _wrap_Job_setJobName, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setJobName(Job self, EString _jobName)"},
	 { (char *)"Job_getJobPath", _wrap_Job_getJobPath, METH_VARARGS, (char *)"Job_getJobPath(Job self) -> EString"},
	 { (char *)"Job_setJobPath", (PyCFunction) _wrap_Job_setJobPath, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setJobPath(Job self, EString _jobPath)"},
	 { (char *)"Job_getOutputPath", _wrap_Job_getOutputPath, METH_VARARGS, (char *)"Job_getOutputPath(Job self) -> EString"},
	 { (char *)"Job_setOutputPath", (PyCFunction) _wrap_Job_setOutputPath, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setOutputPath(Job self, EString _outputPath)"},
	 { (char *)"Job_getErrorPath", _wrap_Job_getErrorPath, METH_VARARGS, (char *)"Job_getErrorPath(Job self) -> EString"},
	 { (char *)"Job_setErrorPath", (PyCFunction) _wrap_Job_setErrorPath, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setErrorPath(Job self, EString _errorPath)"},
	 { (char *)"Job_getJobPrio", _wrap_Job_getJobPrio, METH_VARARGS, (char *)"Job_getJobPrio(Job self) -> JobPriority"},
	 { (char *)"Job_setJobPrio", (PyCFunction) _wrap_Job_setJobPrio, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setJobPrio(Job self, JobPriority _jobPrio)"},
	 { (char *)"Job_getNbCpus", _wrap_Job_getNbCpus, METH_VARARGS, (char *)"Job_getNbCpus(Job self) -> EInt"},
	 { (char *)"Job_setNbCpus", (PyCFunction) _wrap_Job_setNbCpus, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setNbCpus(Job self, EInt _nbCpus)"},
	 { (char *)"Job_getJobWorkingDir", _wrap_Job_getJobWorkingDir, METH_VARARGS, (char *)"Job_getJobWorkingDir(Job self) -> EString"},
	 { (char *)"Job_setJobWorkingDir", (PyCFunction) _wrap_Job_setJobWorkingDir, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setJobWorkingDir(Job self, EString _jobWorkingDir)"},
	 { (char *)"Job_getStatus", _wrap_Job_getStatus, METH_VARARGS, (char *)"Job_getStatus(Job self) -> JobStatus"},
	 { (char *)"Job_setStatus", (PyCFunction) _wrap_Job_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setStatus(Job self, JobStatus _status)"},
	 { (char *)"Job_getSubmitDate", _wrap_Job_getSubmitDate, METH_VARARGS, (char *)"Job_getSubmitDate(Job self) -> ELong"},
	 { (char *)"Job_setSubmitDate", (PyCFunction) _wrap_Job_setSubmitDate, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setSubmitDate(Job self, ELong _submitDate)"},
	 { (char *)"Job_getEndDate", _wrap_Job_getEndDate, METH_VARARGS, (char *)"Job_getEndDate(Job self) -> ELong"},
	 { (char *)"Job_setEndDate", (PyCFunction) _wrap_Job_setEndDate, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setEndDate(Job self, ELong _endDate)"},
	 { (char *)"Job_getOwner", _wrap_Job_getOwner, METH_VARARGS, (char *)"Job_getOwner(Job self) -> EString"},
	 { (char *)"Job_setOwner", (PyCFunction) _wrap_Job_setOwner, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setOwner(Job self, EString _owner)"},
	 { (char *)"Job_getJobQueue", _wrap_Job_getJobQueue, METH_VARARGS, (char *)"Job_getJobQueue(Job self) -> EString"},
	 { (char *)"Job_setJobQueue", (PyCFunction) _wrap_Job_setJobQueue, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setJobQueue(Job self, EString _jobQueue)"},
	 { (char *)"Job_getWallClockLimit", _wrap_Job_getWallClockLimit, METH_VARARGS, (char *)"Job_getWallClockLimit(Job self) -> ELong"},
	 { (char *)"Job_setWallClockLimit", (PyCFunction) _wrap_Job_setWallClockLimit, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setWallClockLimit(Job self, ELong _wallClockLimit)"},
	 { (char *)"Job_getGroupName", _wrap_Job_getGroupName, METH_VARARGS, (char *)"Job_getGroupName(Job self) -> EString"},
	 { (char *)"Job_setGroupName", (PyCFunction) _wrap_Job_setGroupName, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setGroupName(Job self, EString _groupName)"},
	 { (char *)"Job_getJobDescription", _wrap_Job_getJobDescription, METH_VARARGS, (char *)"Job_getJobDescription(Job self) -> EString"},
	 { (char *)"Job_setJobDescription", (PyCFunction) _wrap_Job_setJobDescription, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setJobDescription(Job self, EString _jobDescription)"},
	 { (char *)"Job_getMemLimit", _wrap_Job_getMemLimit, METH_VARARGS, (char *)"Job_getMemLimit(Job self) -> EInt"},
	 { (char *)"Job_setMemLimit", (PyCFunction) _wrap_Job_setMemLimit, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setMemLimit(Job self, EInt _memLimit)"},
	 { (char *)"Job_getNbNodes", _wrap_Job_getNbNodes, METH_VARARGS, (char *)"Job_getNbNodes(Job self) -> EInt"},
	 { (char *)"Job_setNbNodes", (PyCFunction) _wrap_Job_setNbNodes, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setNbNodes(Job self, EInt _nbNodes)"},
	 { (char *)"Job_getNbNodesAndCpuPerNode", _wrap_Job_getNbNodesAndCpuPerNode, METH_VARARGS, (char *)"Job_getNbNodesAndCpuPerNode(Job self) -> EString"},
	 { (char *)"Job_setNbNodesAndCpuPerNode", (PyCFunction) _wrap_Job_setNbNodesAndCpuPerNode, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setNbNodesAndCpuPerNode(Job self, EString _nbNodesAndCpuPerNode)"},
	 { (char *)"Job_getBatchJobId", _wrap_Job_getBatchJobId, METH_VARARGS, (char *)"Job_getBatchJobId(Job self) -> EString"},
	 { (char *)"Job_setBatchJobId", (PyCFunction) _wrap_Job_setBatchJobId, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setBatchJobId(Job self, EString _batchJobId)"},
	 { (char *)"Job_getOutputDir", _wrap_Job_getOutputDir, METH_VARARGS, (char *)"Job_getOutputDir(Job self) -> EString"},
	 { (char *)"Job_setOutputDir", (PyCFunction) _wrap_Job_setOutputDir, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setOutputDir(Job self, EString _outputDir)"},
	 { (char *)"Job_getWorkId", _wrap_Job_getWorkId, METH_VARARGS, (char *)"Job_getWorkId(Job self) -> ELong"},
	 { (char *)"Job_setWorkId", (PyCFunction) _wrap_Job_setWorkId, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setWorkId(Job self, ELong _workId)"},
	 { (char *)"Job_getUserId", _wrap_Job_getUserId, METH_VARARGS, (char *)"Job_getUserId(Job self) -> EString"},
	 { (char *)"Job_setUserId", (PyCFunction) _wrap_Job_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"Job_setUserId(Job self, EString _userId)"},
	 { (char *)"Job_eGet", (PyCFunction) _wrap_Job_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Job_eGet(Job self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Job_eSet", (PyCFunction) _wrap_Job_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Job_eSet(Job self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Job_eIsSet", (PyCFunction) _wrap_Job_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Job_eIsSet(Job self, EInt _featureID) -> EBoolean"},
	 { (char *)"Job_eUnset", (PyCFunction) _wrap_Job_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Job_eUnset(Job self, EInt _featureID)"},
	 { (char *)"Job__eClass", _wrap_Job__eClass, METH_VARARGS, (char *)"Job__eClass(Job self) -> EClass_ptr"},
	 { (char *)"Job_swigregister", Job_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_JobResult", _wrap_new_JobResult, METH_VARARGS, (char *)"new_JobResult() -> JobResult"},
	 { (char *)"delete_JobResult", _wrap_delete_JobResult, METH_VARARGS, (char *)"delete_JobResult(JobResult self)"},
	 { (char *)"JobResult__initialize", _wrap_JobResult__initialize, METH_VARARGS, (char *)"JobResult__initialize(JobResult self)"},
	 { (char *)"JobResult_getJobId", _wrap_JobResult_getJobId, METH_VARARGS, (char *)"JobResult_getJobId(JobResult self) -> EString"},
	 { (char *)"JobResult_setJobId", (PyCFunction) _wrap_JobResult_setJobId, METH_VARARGS | METH_KEYWORDS, (char *)"JobResult_setJobId(JobResult self, EString _jobId)"},
	 { (char *)"JobResult_getOutputPath", _wrap_JobResult_getOutputPath, METH_VARARGS, (char *)"JobResult_getOutputPath(JobResult self) -> EString"},
	 { (char *)"JobResult_setOutputPath", (PyCFunction) _wrap_JobResult_setOutputPath, METH_VARARGS | METH_KEYWORDS, (char *)"JobResult_setOutputPath(JobResult self, EString _outputPath)"},
	 { (char *)"JobResult_getErrorPath", _wrap_JobResult_getErrorPath, METH_VARARGS, (char *)"JobResult_getErrorPath(JobResult self) -> EString"},
	 { (char *)"JobResult_setErrorPath", (PyCFunction) _wrap_JobResult_setErrorPath, METH_VARARGS | METH_KEYWORDS, (char *)"JobResult_setErrorPath(JobResult self, EString _errorPath)"},
	 { (char *)"JobResult_getOutputDir", _wrap_JobResult_getOutputDir, METH_VARARGS, (char *)"JobResult_getOutputDir(JobResult self) -> EString"},
	 { (char *)"JobResult_setOutputDir", (PyCFunction) _wrap_JobResult_setOutputDir, METH_VARARGS | METH_KEYWORDS, (char *)"JobResult_setOutputDir(JobResult self, EString _outputDir)"},
	 { (char *)"JobResult_eGet", (PyCFunction) _wrap_JobResult_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"JobResult_eGet(JobResult self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"JobResult_eSet", (PyCFunction) _wrap_JobResult_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"JobResult_eSet(JobResult self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"JobResult_eIsSet", (PyCFunction) _wrap_JobResult_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"JobResult_eIsSet(JobResult self, EInt _featureID) -> EBoolean"},
	 { (char *)"JobResult_eUnset", (PyCFunction) _wrap_JobResult_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"JobResult_eUnset(JobResult self, EInt _featureID)"},
	 { (char *)"JobResult__eClass", _wrap_JobResult__eClass, METH_VARARGS, (char *)"JobResult__eClass(JobResult self) -> EClass_ptr"},
	 { (char *)"JobResult_swigregister", JobResult_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ListJobsOptions", _wrap_new_ListJobsOptions, METH_VARARGS, (char *)"new_ListJobsOptions() -> ListJobsOptions"},
	 { (char *)"delete_ListJobsOptions", _wrap_delete_ListJobsOptions, METH_VARARGS, (char *)"delete_ListJobsOptions(ListJobsOptions self)"},
	 { (char *)"ListJobsOptions__initialize", _wrap_ListJobsOptions__initialize, METH_VARARGS, (char *)"ListJobsOptions__initialize(ListJobsOptions self)"},
	 { (char *)"ListJobsOptions_getJobId", _wrap_ListJobsOptions_getJobId, METH_VARARGS, (char *)"ListJobsOptions_getJobId(ListJobsOptions self) -> EString"},
	 { (char *)"ListJobsOptions_setJobId", (PyCFunction) _wrap_ListJobsOptions_setJobId, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setJobId(ListJobsOptions self, EString _jobId)"},
	 { (char *)"ListJobsOptions_getNbCpu", _wrap_ListJobsOptions_getNbCpu, METH_VARARGS, (char *)"ListJobsOptions_getNbCpu(ListJobsOptions self) -> EInt"},
	 { (char *)"ListJobsOptions_setNbCpu", (PyCFunction) _wrap_ListJobsOptions_setNbCpu, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setNbCpu(ListJobsOptions self, EInt _nbCpu)"},
	 { (char *)"ListJobsOptions_getFromSubmitDate", _wrap_ListJobsOptions_getFromSubmitDate, METH_VARARGS, (char *)"ListJobsOptions_getFromSubmitDate(ListJobsOptions self) -> ELong"},
	 { (char *)"ListJobsOptions_setFromSubmitDate", (PyCFunction) _wrap_ListJobsOptions_setFromSubmitDate, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setFromSubmitDate(ListJobsOptions self, ELong _fromSubmitDate)"},
	 { (char *)"ListJobsOptions_getToSubmitDate", _wrap_ListJobsOptions_getToSubmitDate, METH_VARARGS, (char *)"ListJobsOptions_getToSubmitDate(ListJobsOptions self) -> ELong"},
	 { (char *)"ListJobsOptions_setToSubmitDate", (PyCFunction) _wrap_ListJobsOptions_setToSubmitDate, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setToSubmitDate(ListJobsOptions self, ELong _toSubmitDate)"},
	 { (char *)"ListJobsOptions_getOwner", _wrap_ListJobsOptions_getOwner, METH_VARARGS, (char *)"ListJobsOptions_getOwner(ListJobsOptions self) -> EString"},
	 { (char *)"ListJobsOptions_setOwner", (PyCFunction) _wrap_ListJobsOptions_setOwner, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setOwner(ListJobsOptions self, EString _owner)"},
	 { (char *)"ListJobsOptions_getStatus", _wrap_ListJobsOptions_getStatus, METH_VARARGS, (char *)"ListJobsOptions_getStatus(ListJobsOptions self) -> JobStatus"},
	 { (char *)"ListJobsOptions_setStatus", (PyCFunction) _wrap_ListJobsOptions_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setStatus(ListJobsOptions self, JobStatus _status)"},
	 { (char *)"ListJobsOptions_getPriority", _wrap_ListJobsOptions_getPriority, METH_VARARGS, (char *)"ListJobsOptions_getPriority(ListJobsOptions self) -> JobPriority"},
	 { (char *)"ListJobsOptions_setPriority", (PyCFunction) _wrap_ListJobsOptions_setPriority, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setPriority(ListJobsOptions self, JobPriority _priority)"},
	 { (char *)"ListJobsOptions_getQueue", _wrap_ListJobsOptions_getQueue, METH_VARARGS, (char *)"ListJobsOptions_getQueue(ListJobsOptions self) -> EString"},
	 { (char *)"ListJobsOptions_setQueue", (PyCFunction) _wrap_ListJobsOptions_setQueue, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setQueue(ListJobsOptions self, EString _queue)"},
	 { (char *)"ListJobsOptions_getMultipleStatus", _wrap_ListJobsOptions_getMultipleStatus, METH_VARARGS, (char *)"ListJobsOptions_getMultipleStatus(ListJobsOptions self) -> EString"},
	 { (char *)"ListJobsOptions_setMultipleStatus", (PyCFunction) _wrap_ListJobsOptions_setMultipleStatus, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setMultipleStatus(ListJobsOptions self, EString _multipleStatus)"},
	 { (char *)"ListJobsOptions_isBatchJob", _wrap_ListJobsOptions_isBatchJob, METH_VARARGS, (char *)"ListJobsOptions_isBatchJob(ListJobsOptions self) -> EBoolean"},
	 { (char *)"ListJobsOptions_setBatchJob", (PyCFunction) _wrap_ListJobsOptions_setBatchJob, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setBatchJob(ListJobsOptions self, EBoolean _batchJob)"},
	 { (char *)"ListJobsOptions_getWorkId", _wrap_ListJobsOptions_getWorkId, METH_VARARGS, (char *)"ListJobsOptions_getWorkId(ListJobsOptions self) -> ELong"},
	 { (char *)"ListJobsOptions_setWorkId", (PyCFunction) _wrap_ListJobsOptions_setWorkId, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setWorkId(ListJobsOptions self, ELong _workId)"},
	 { (char *)"ListJobsOptions_isListAll", _wrap_ListJobsOptions_isListAll, METH_VARARGS, (char *)"ListJobsOptions_isListAll(ListJobsOptions self) -> EBoolean"},
	 { (char *)"ListJobsOptions_setListAll", (PyCFunction) _wrap_ListJobsOptions_setListAll, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_setListAll(ListJobsOptions self, EBoolean _listAll)"},
	 { (char *)"ListJobsOptions_eGet", (PyCFunction) _wrap_ListJobsOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_eGet(ListJobsOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ListJobsOptions_eSet", (PyCFunction) _wrap_ListJobsOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_eSet(ListJobsOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ListJobsOptions_eIsSet", (PyCFunction) _wrap_ListJobsOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_eIsSet(ListJobsOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ListJobsOptions_eUnset", (PyCFunction) _wrap_ListJobsOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ListJobsOptions_eUnset(ListJobsOptions self, EInt _featureID)"},
	 { (char *)"ListJobsOptions__eClass", _wrap_ListJobsOptions__eClass, METH_VARARGS, (char *)"ListJobsOptions__eClass(ListJobsOptions self) -> EClass_ptr"},
	 { (char *)"ListJobsOptions_swigregister", ListJobsOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ProgressOptions", _wrap_new_ProgressOptions, METH_VARARGS, (char *)"new_ProgressOptions() -> ProgressOptions"},
	 { (char *)"delete_ProgressOptions", _wrap_delete_ProgressOptions, METH_VARARGS, (char *)"delete_ProgressOptions(ProgressOptions self)"},
	 { (char *)"ProgressOptions__initialize", _wrap_ProgressOptions__initialize, METH_VARARGS, (char *)"ProgressOptions__initialize(ProgressOptions self)"},
	 { (char *)"ProgressOptions_getJobId", _wrap_ProgressOptions_getJobId, METH_VARARGS, (char *)"ProgressOptions_getJobId(ProgressOptions self) -> EString"},
	 { (char *)"ProgressOptions_setJobId", (PyCFunction) _wrap_ProgressOptions_setJobId, METH_VARARGS | METH_KEYWORDS, (char *)"ProgressOptions_setJobId(ProgressOptions self, EString _jobId)"},
	 { (char *)"ProgressOptions_getJobOwner", _wrap_ProgressOptions_getJobOwner, METH_VARARGS, (char *)"ProgressOptions_getJobOwner(ProgressOptions self) -> EString"},
	 { (char *)"ProgressOptions_setJobOwner", (PyCFunction) _wrap_ProgressOptions_setJobOwner, METH_VARARGS | METH_KEYWORDS, (char *)"ProgressOptions_setJobOwner(ProgressOptions self, EString _jobOwner)"},
	 { (char *)"ProgressOptions_eGet", (PyCFunction) _wrap_ProgressOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ProgressOptions_eGet(ProgressOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ProgressOptions_eSet", (PyCFunction) _wrap_ProgressOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ProgressOptions_eSet(ProgressOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ProgressOptions_eIsSet", (PyCFunction) _wrap_ProgressOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ProgressOptions_eIsSet(ProgressOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"ProgressOptions_eUnset", (PyCFunction) _wrap_ProgressOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ProgressOptions_eUnset(ProgressOptions self, EInt _featureID)"},
	 { (char *)"ProgressOptions__eClass", _wrap_ProgressOptions__eClass, METH_VARARGS, (char *)"ProgressOptions__eClass(ProgressOptions self) -> EClass_ptr"},
	 { (char *)"ProgressOptions_swigregister", ProgressOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Progression", _wrap_new_Progression, METH_VARARGS, (char *)"new_Progression() -> Progression"},
	 { (char *)"delete_Progression", _wrap_delete_Progression, METH_VARARGS, (char *)"delete_Progression(Progression self)"},
	 { (char *)"Progression__initialize", _wrap_Progression__initialize, METH_VARARGS, (char *)"Progression__initialize(Progression self)"},
	 { (char *)"Progression_getJobId", _wrap_Progression_getJobId, METH_VARARGS, (char *)"Progression_getJobId(Progression self) -> EString"},
	 { (char *)"Progression_setJobId", (PyCFunction) _wrap_Progression_setJobId, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_setJobId(Progression self, EString _jobId)"},
	 { (char *)"Progression_getJobName", _wrap_Progression_getJobName, METH_VARARGS, (char *)"Progression_getJobName(Progression self) -> EString"},
	 { (char *)"Progression_setJobName", (PyCFunction) _wrap_Progression_setJobName, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_setJobName(Progression self, EString _jobName)"},
	 { (char *)"Progression_getWallTime", _wrap_Progression_getWallTime, METH_VARARGS, (char *)"Progression_getWallTime(Progression self) -> EInt"},
	 { (char *)"Progression_setWallTime", (PyCFunction) _wrap_Progression_setWallTime, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_setWallTime(Progression self, EInt _wallTime)"},
	 { (char *)"Progression_getStartTime", _wrap_Progression_getStartTime, METH_VARARGS, (char *)"Progression_getStartTime(Progression self) -> ELong"},
	 { (char *)"Progression_setStartTime", (PyCFunction) _wrap_Progression_setStartTime, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_setStartTime(Progression self, ELong _startTime)"},
	 { (char *)"Progression_getEndTime", _wrap_Progression_getEndTime, METH_VARARGS, (char *)"Progression_getEndTime(Progression self) -> ELong"},
	 { (char *)"Progression_setEndTime", (PyCFunction) _wrap_Progression_setEndTime, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_setEndTime(Progression self, ELong _endTime)"},
	 { (char *)"Progression_getPercent", _wrap_Progression_getPercent, METH_VARARGS, (char *)"Progression_getPercent(Progression self) -> EInt"},
	 { (char *)"Progression_setPercent", (PyCFunction) _wrap_Progression_setPercent, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_setPercent(Progression self, EInt _percent)"},
	 { (char *)"Progression_getStatus", _wrap_Progression_getStatus, METH_VARARGS, (char *)"Progression_getStatus(Progression self) -> JobStatus"},
	 { (char *)"Progression_setStatus", (PyCFunction) _wrap_Progression_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_setStatus(Progression self, JobStatus _status)"},
	 { (char *)"Progression_eGet", (PyCFunction) _wrap_Progression_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_eGet(Progression self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Progression_eSet", (PyCFunction) _wrap_Progression_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_eSet(Progression self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Progression_eIsSet", (PyCFunction) _wrap_Progression_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_eIsSet(Progression self, EInt _featureID) -> EBoolean"},
	 { (char *)"Progression_eUnset", (PyCFunction) _wrap_Progression_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Progression_eUnset(Progression self, EInt _featureID)"},
	 { (char *)"Progression__eClass", _wrap_Progression__eClass, METH_VARARGS, (char *)"Progression__eClass(Progression self) -> EClass_ptr"},
	 { (char *)"Progression_swigregister", Progression_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Queue", _wrap_new_Queue, METH_VARARGS, (char *)"new_Queue() -> Queue"},
	 { (char *)"delete_Queue", _wrap_delete_Queue, METH_VARARGS, (char *)"delete_Queue(Queue self)"},
	 { (char *)"Queue__initialize", _wrap_Queue__initialize, METH_VARARGS, (char *)"Queue__initialize(Queue self)"},
	 { (char *)"Queue_getName", _wrap_Queue_getName, METH_VARARGS, (char *)"Queue_getName(Queue self) -> EString"},
	 { (char *)"Queue_setName", (PyCFunction) _wrap_Queue_setName, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setName(Queue self, EString _name)"},
	 { (char *)"Queue_getMaxJobCpu", _wrap_Queue_getMaxJobCpu, METH_VARARGS, (char *)"Queue_getMaxJobCpu(Queue self) -> EInt"},
	 { (char *)"Queue_setMaxJobCpu", (PyCFunction) _wrap_Queue_setMaxJobCpu, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setMaxJobCpu(Queue self, EInt _maxJobCpu)"},
	 { (char *)"Queue_getMaxProcCpu", _wrap_Queue_getMaxProcCpu, METH_VARARGS, (char *)"Queue_getMaxProcCpu(Queue self) -> EInt"},
	 { (char *)"Queue_setMaxProcCpu", (PyCFunction) _wrap_Queue_setMaxProcCpu, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setMaxProcCpu(Queue self, EInt _maxProcCpu)"},
	 { (char *)"Queue_getMemory", _wrap_Queue_getMemory, METH_VARARGS, (char *)"Queue_getMemory(Queue self) -> EInt"},
	 { (char *)"Queue_setMemory", (PyCFunction) _wrap_Queue_setMemory, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setMemory(Queue self, EInt _memory)"},
	 { (char *)"Queue_getWallTime", _wrap_Queue_getWallTime, METH_VARARGS, (char *)"Queue_getWallTime(Queue self) -> ELong"},
	 { (char *)"Queue_setWallTime", (PyCFunction) _wrap_Queue_setWallTime, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setWallTime(Queue self, ELong _wallTime)"},
	 { (char *)"Queue_getNode", _wrap_Queue_getNode, METH_VARARGS, (char *)"Queue_getNode(Queue self) -> EInt"},
	 { (char *)"Queue_setNode", (PyCFunction) _wrap_Queue_setNode, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setNode(Queue self, EInt _node)"},
	 { (char *)"Queue_getNbRunningJobs", _wrap_Queue_getNbRunningJobs, METH_VARARGS, (char *)"Queue_getNbRunningJobs(Queue self) -> EInt"},
	 { (char *)"Queue_setNbRunningJobs", (PyCFunction) _wrap_Queue_setNbRunningJobs, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setNbRunningJobs(Queue self, EInt _nbRunningJobs)"},
	 { (char *)"Queue_getNbJobsInQueue", _wrap_Queue_getNbJobsInQueue, METH_VARARGS, (char *)"Queue_getNbJobsInQueue(Queue self) -> EInt"},
	 { (char *)"Queue_setNbJobsInQueue", (PyCFunction) _wrap_Queue_setNbJobsInQueue, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setNbJobsInQueue(Queue self, EInt _nbJobsInQueue)"},
	 { (char *)"Queue_getState", _wrap_Queue_getState, METH_VARARGS, (char *)"Queue_getState(Queue self) -> QueueStatus"},
	 { (char *)"Queue_setState", (PyCFunction) _wrap_Queue_setState, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setState(Queue self, QueueStatus _state)"},
	 { (char *)"Queue_getPriority", _wrap_Queue_getPriority, METH_VARARGS, (char *)"Queue_getPriority(Queue self) -> QueuePriority"},
	 { (char *)"Queue_setPriority", (PyCFunction) _wrap_Queue_setPriority, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setPriority(Queue self, QueuePriority _priority)"},
	 { (char *)"Queue_getDescription", _wrap_Queue_getDescription, METH_VARARGS, (char *)"Queue_getDescription(Queue self) -> EString"},
	 { (char *)"Queue_setDescription", (PyCFunction) _wrap_Queue_setDescription, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_setDescription(Queue self, EString _description)"},
	 { (char *)"Queue_eGet", (PyCFunction) _wrap_Queue_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_eGet(Queue self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Queue_eSet", (PyCFunction) _wrap_Queue_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_eSet(Queue self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Queue_eIsSet", (PyCFunction) _wrap_Queue_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_eIsSet(Queue self, EInt _featureID) -> EBoolean"},
	 { (char *)"Queue_eUnset", (PyCFunction) _wrap_Queue_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Queue_eUnset(Queue self, EInt _featureID)"},
	 { (char *)"Queue__eClass", _wrap_Queue__eClass, METH_VARARGS, (char *)"Queue__eClass(Queue self) -> EClass_ptr"},
	 { (char *)"Queue_swigregister", Queue_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SubmitOptions", _wrap_new_SubmitOptions, METH_VARARGS, (char *)"new_SubmitOptions() -> SubmitOptions"},
	 { (char *)"delete_SubmitOptions", _wrap_delete_SubmitOptions, METH_VARARGS, (char *)"delete_SubmitOptions(SubmitOptions self)"},
	 { (char *)"SubmitOptions__initialize", _wrap_SubmitOptions__initialize, METH_VARARGS, (char *)"SubmitOptions__initialize(SubmitOptions self)"},
	 { (char *)"SubmitOptions_getName", _wrap_SubmitOptions_getName, METH_VARARGS, (char *)"SubmitOptions_getName(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setName", (PyCFunction) _wrap_SubmitOptions_setName, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setName(SubmitOptions self, EString _name)"},
	 { (char *)"SubmitOptions_getQueue", _wrap_SubmitOptions_getQueue, METH_VARARGS, (char *)"SubmitOptions_getQueue(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setQueue", (PyCFunction) _wrap_SubmitOptions_setQueue, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setQueue(SubmitOptions self, EString _queue)"},
	 { (char *)"SubmitOptions_getWallTime", _wrap_SubmitOptions_getWallTime, METH_VARARGS, (char *)"SubmitOptions_getWallTime(SubmitOptions self) -> EInt"},
	 { (char *)"SubmitOptions_setWallTime", (PyCFunction) _wrap_SubmitOptions_setWallTime, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setWallTime(SubmitOptions self, EInt _wallTime)"},
	 { (char *)"SubmitOptions_getMemory", _wrap_SubmitOptions_getMemory, METH_VARARGS, (char *)"SubmitOptions_getMemory(SubmitOptions self) -> EInt"},
	 { (char *)"SubmitOptions_setMemory", (PyCFunction) _wrap_SubmitOptions_setMemory, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setMemory(SubmitOptions self, EInt _memory)"},
	 { (char *)"SubmitOptions_getNbCpu", _wrap_SubmitOptions_getNbCpu, METH_VARARGS, (char *)"SubmitOptions_getNbCpu(SubmitOptions self) -> EInt"},
	 { (char *)"SubmitOptions_setNbCpu", (PyCFunction) _wrap_SubmitOptions_setNbCpu, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setNbCpu(SubmitOptions self, EInt _nbCpu)"},
	 { (char *)"SubmitOptions_getNbNodesAndCpuPerNode", _wrap_SubmitOptions_getNbNodesAndCpuPerNode, METH_VARARGS, (char *)"SubmitOptions_getNbNodesAndCpuPerNode(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setNbNodesAndCpuPerNode", (PyCFunction) _wrap_SubmitOptions_setNbNodesAndCpuPerNode, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setNbNodesAndCpuPerNode(SubmitOptions self, EString _nbNodesAndCpuPerNode)"},
	 { (char *)"SubmitOptions_getOutputPath", _wrap_SubmitOptions_getOutputPath, METH_VARARGS, (char *)"SubmitOptions_getOutputPath(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setOutputPath", (PyCFunction) _wrap_SubmitOptions_setOutputPath, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setOutputPath(SubmitOptions self, EString _outputPath)"},
	 { (char *)"SubmitOptions_getErrorPath", _wrap_SubmitOptions_getErrorPath, METH_VARARGS, (char *)"SubmitOptions_getErrorPath(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setErrorPath", (PyCFunction) _wrap_SubmitOptions_setErrorPath, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setErrorPath(SubmitOptions self, EString _errorPath)"},
	 { (char *)"SubmitOptions_getMailNotification", _wrap_SubmitOptions_getMailNotification, METH_VARARGS, (char *)"SubmitOptions_getMailNotification(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setMailNotification", (PyCFunction) _wrap_SubmitOptions_setMailNotification, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setMailNotification(SubmitOptions self, EString _mailNotification)"},
	 { (char *)"SubmitOptions_getMailNotifyUser", _wrap_SubmitOptions_getMailNotifyUser, METH_VARARGS, (char *)"SubmitOptions_getMailNotifyUser(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setMailNotifyUser", (PyCFunction) _wrap_SubmitOptions_setMailNotifyUser, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setMailNotifyUser(SubmitOptions self, EString _mailNotifyUser)"},
	 { (char *)"SubmitOptions_getGroup", _wrap_SubmitOptions_getGroup, METH_VARARGS, (char *)"SubmitOptions_getGroup(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setGroup", (PyCFunction) _wrap_SubmitOptions_setGroup, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setGroup(SubmitOptions self, EString _group)"},
	 { (char *)"SubmitOptions_getWorkingDir", _wrap_SubmitOptions_getWorkingDir, METH_VARARGS, (char *)"SubmitOptions_getWorkingDir(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setWorkingDir", (PyCFunction) _wrap_SubmitOptions_setWorkingDir, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setWorkingDir(SubmitOptions self, EString _workingDir)"},
	 { (char *)"SubmitOptions_getCpuTime", _wrap_SubmitOptions_getCpuTime, METH_VARARGS, (char *)"SubmitOptions_getCpuTime(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setCpuTime", (PyCFunction) _wrap_SubmitOptions_setCpuTime, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setCpuTime(SubmitOptions self, EString _cpuTime)"},
	 { (char *)"SubmitOptions_isSelectQueueAutom", _wrap_SubmitOptions_isSelectQueueAutom, METH_VARARGS, (char *)"SubmitOptions_isSelectQueueAutom(SubmitOptions self) -> EBoolean"},
	 { (char *)"SubmitOptions_setSelectQueueAutom", (PyCFunction) _wrap_SubmitOptions_setSelectQueueAutom, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setSelectQueueAutom(SubmitOptions self, EBoolean _selectQueueAutom)"},
	 { (char *)"SubmitOptions_getFileParams", _wrap_SubmitOptions_getFileParams, METH_VARARGS, (char *)"SubmitOptions_getFileParams(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setFileParams", (PyCFunction) _wrap_SubmitOptions_setFileParams, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setFileParams(SubmitOptions self, EString _fileParams)"},
	 { (char *)"SubmitOptions_getTextParams", _wrap_SubmitOptions_getTextParams, METH_VARARGS, (char *)"SubmitOptions_getTextParams(SubmitOptions self) -> EString"},
	 { (char *)"SubmitOptions_setTextParams", (PyCFunction) _wrap_SubmitOptions_setTextParams, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setTextParams(SubmitOptions self, EString _textParams)"},
	 { (char *)"SubmitOptions_getWorkId", _wrap_SubmitOptions_getWorkId, METH_VARARGS, (char *)"SubmitOptions_getWorkId(SubmitOptions self) -> ELong"},
	 { (char *)"SubmitOptions_setWorkId", (PyCFunction) _wrap_SubmitOptions_setWorkId, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setWorkId(SubmitOptions self, ELong _workId)"},
	 { (char *)"SubmitOptions_getCriterion", _wrap_SubmitOptions_getCriterion, METH_VARARGS, (char *)"SubmitOptions_getCriterion(SubmitOptions self) -> LoadCriterion_ptr"},
	 { (char *)"SubmitOptions_setCriterion", (PyCFunction) _wrap_SubmitOptions_setCriterion, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_setCriterion(SubmitOptions self, LoadCriterion_ptr _criterion)"},
	 { (char *)"SubmitOptions_eGet", (PyCFunction) _wrap_SubmitOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_eGet(SubmitOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"SubmitOptions_eSet", (PyCFunction) _wrap_SubmitOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_eSet(SubmitOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"SubmitOptions_eIsSet", (PyCFunction) _wrap_SubmitOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_eIsSet(SubmitOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"SubmitOptions_eUnset", (PyCFunction) _wrap_SubmitOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"SubmitOptions_eUnset(SubmitOptions self, EInt _featureID)"},
	 { (char *)"SubmitOptions__eClass", _wrap_SubmitOptions__eClass, METH_VARARGS, (char *)"SubmitOptions__eClass(SubmitOptions self) -> EClass_ptr"},
	 { (char *)"SubmitOptions_swigregister", SubmitOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LoadCriterion", _wrap_new_LoadCriterion, METH_VARARGS, (char *)"new_LoadCriterion() -> LoadCriterion"},
	 { (char *)"delete_LoadCriterion", _wrap_delete_LoadCriterion, METH_VARARGS, (char *)"delete_LoadCriterion(LoadCriterion self)"},
	 { (char *)"LoadCriterion__initialize", _wrap_LoadCriterion__initialize, METH_VARARGS, (char *)"LoadCriterion__initialize(LoadCriterion self)"},
	 { (char *)"LoadCriterion_getLoadType", _wrap_LoadCriterion_getLoadType, METH_VARARGS, (char *)"LoadCriterion_getLoadType(LoadCriterion self) -> LoadType"},
	 { (char *)"LoadCriterion_setLoadType", (PyCFunction) _wrap_LoadCriterion_setLoadType, METH_VARARGS | METH_KEYWORDS, (char *)"LoadCriterion_setLoadType(LoadCriterion self, LoadType _loadType)"},
	 { (char *)"LoadCriterion_eGet", (PyCFunction) _wrap_LoadCriterion_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"LoadCriterion_eGet(LoadCriterion self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"LoadCriterion_eSet", (PyCFunction) _wrap_LoadCriterion_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"LoadCriterion_eSet(LoadCriterion self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"LoadCriterion_eIsSet", (PyCFunction) _wrap_LoadCriterion_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"LoadCriterion_eIsSet(LoadCriterion self, EInt _featureID) -> EBoolean"},
	 { (char *)"LoadCriterion_eUnset", (PyCFunction) _wrap_LoadCriterion_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"LoadCriterion_eUnset(LoadCriterion self, EInt _featureID)"},
	 { (char *)"LoadCriterion__eClass", _wrap_LoadCriterion__eClass, METH_VARARGS, (char *)"LoadCriterion__eClass(LoadCriterion self) -> EClass_ptr"},
	 { (char *)"LoadCriterion_swigregister", LoadCriterion_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Work", _wrap_new_Work, METH_VARARGS, (char *)"new_Work() -> Work"},
	 { (char *)"delete_Work", _wrap_delete_Work, METH_VARARGS, (char *)"delete_Work(Work self)"},
	 { (char *)"Work__initialize", _wrap_Work__initialize, METH_VARARGS, (char *)"Work__initialize(Work self)"},
	 { (char *)"Work_getSessionId", _wrap_Work_getSessionId, METH_VARARGS, (char *)"Work_getSessionId(Work self) -> EString"},
	 { (char *)"Work_setSessionId", (PyCFunction) _wrap_Work_setSessionId, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setSessionId(Work self, EString _sessionId)"},
	 { (char *)"Work_getApplicationId", _wrap_Work_getApplicationId, METH_VARARGS, (char *)"Work_getApplicationId(Work self) -> EString"},
	 { (char *)"Work_setApplicationId", (PyCFunction) _wrap_Work_setApplicationId, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setApplicationId(Work self, EString _applicationId)"},
	 { (char *)"Work_getSubject", _wrap_Work_getSubject, METH_VARARGS, (char *)"Work_getSubject(Work self) -> EString"},
	 { (char *)"Work_setSubject", (PyCFunction) _wrap_Work_setSubject, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setSubject(Work self, EString _subject)"},
	 { (char *)"Work_getPriority", _wrap_Work_getPriority, METH_VARARGS, (char *)"Work_getPriority(Work self) -> EInt"},
	 { (char *)"Work_setPriority", (PyCFunction) _wrap_Work_setPriority, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setPriority(Work self, EInt _priority)"},
	 { (char *)"Work_getStatus", _wrap_Work_getStatus, METH_VARARGS, (char *)"Work_getStatus(Work self) -> EInt"},
	 { (char *)"Work_setStatus", (PyCFunction) _wrap_Work_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setStatus(Work self, EInt _status)"},
	 { (char *)"Work_getEndDate", _wrap_Work_getEndDate, METH_VARARGS, (char *)"Work_getEndDate(Work self) -> ELong"},
	 { (char *)"Work_setEndDate", (PyCFunction) _wrap_Work_setEndDate, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setEndDate(Work self, ELong _endDate)"},
	 { (char *)"Work_getOwner", _wrap_Work_getOwner, METH_VARARGS, (char *)"Work_getOwner(Work self) -> EString"},
	 { (char *)"Work_setOwner", (PyCFunction) _wrap_Work_setOwner, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setOwner(Work self, EString _owner)"},
	 { (char *)"Work_getEstimatedHour", _wrap_Work_getEstimatedHour, METH_VARARGS, (char *)"Work_getEstimatedHour(Work self) -> ELong"},
	 { (char *)"Work_setEstimatedHour", (PyCFunction) _wrap_Work_setEstimatedHour, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setEstimatedHour(Work self, ELong _estimatedHour)"},
	 { (char *)"Work_getDoneRatio", _wrap_Work_getDoneRatio, METH_VARARGS, (char *)"Work_getDoneRatio(Work self) -> EInt"},
	 { (char *)"Work_setDoneRatio", (PyCFunction) _wrap_Work_setDoneRatio, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setDoneRatio(Work self, EInt _doneRatio)"},
	 { (char *)"Work_getDescription", _wrap_Work_getDescription, METH_VARARGS, (char *)"Work_getDescription(Work self) -> EString"},
	 { (char *)"Work_setDescription", (PyCFunction) _wrap_Work_setDescription, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setDescription(Work self, EString _description)"},
	 { (char *)"Work_getDateCreated", _wrap_Work_getDateCreated, METH_VARARGS, (char *)"Work_getDateCreated(Work self) -> ELong"},
	 { (char *)"Work_setDateCreated", (PyCFunction) _wrap_Work_setDateCreated, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setDateCreated(Work self, ELong _dateCreated)"},
	 { (char *)"Work_getDateEnded", _wrap_Work_getDateEnded, METH_VARARGS, (char *)"Work_getDateEnded(Work self) -> ELong"},
	 { (char *)"Work_setDateEnded", (PyCFunction) _wrap_Work_setDateEnded, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setDateEnded(Work self, ELong _dateEnded)"},
	 { (char *)"Work_getDateStarted", _wrap_Work_getDateStarted, METH_VARARGS, (char *)"Work_getDateStarted(Work self) -> ELong"},
	 { (char *)"Work_setDateStarted", (PyCFunction) _wrap_Work_setDateStarted, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setDateStarted(Work self, ELong _dateStarted)"},
	 { (char *)"Work_getLastUpdated", _wrap_Work_getLastUpdated, METH_VARARGS, (char *)"Work_getLastUpdated(Work self) -> ELong"},
	 { (char *)"Work_setLastUpdated", (PyCFunction) _wrap_Work_setLastUpdated, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setLastUpdated(Work self, ELong _lastUpdated)"},
	 { (char *)"Work_getWorkId", _wrap_Work_getWorkId, METH_VARARGS, (char *)"Work_getWorkId(Work self) -> EString"},
	 { (char *)"Work_setWorkId", (PyCFunction) _wrap_Work_setWorkId, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setWorkId(Work self, EString _workId)"},
	 { (char *)"Work_getProjectId", _wrap_Work_getProjectId, METH_VARARGS, (char *)"Work_getProjectId(Work self) -> EString"},
	 { (char *)"Work_setProjectId", (PyCFunction) _wrap_Work_setProjectId, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setProjectId(Work self, EString _projectId)"},
	 { (char *)"Work_getSubmitDate", _wrap_Work_getSubmitDate, METH_VARARGS, (char *)"Work_getSubmitDate(Work self) -> ELong"},
	 { (char *)"Work_setSubmitDate", (PyCFunction) _wrap_Work_setSubmitDate, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setSubmitDate(Work self, ELong _submitDate)"},
	 { (char *)"Work_getMachineId", _wrap_Work_getMachineId, METH_VARARGS, (char *)"Work_getMachineId(Work self) -> EString"},
	 { (char *)"Work_setMachineId", (PyCFunction) _wrap_Work_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setMachineId(Work self, EString _machineId)"},
	 { (char *)"Work_getNbCPU", _wrap_Work_getNbCPU, METH_VARARGS, (char *)"Work_getNbCPU(Work self) -> EInt"},
	 { (char *)"Work_setNbCPU", (PyCFunction) _wrap_Work_setNbCPU, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setNbCPU(Work self, EInt _nbCPU)"},
	 { (char *)"Work_getDueDate", _wrap_Work_getDueDate, METH_VARARGS, (char *)"Work_getDueDate(Work self) -> ELong"},
	 { (char *)"Work_setDueDate", (PyCFunction) _wrap_Work_setDueDate, METH_VARARGS | METH_KEYWORDS, (char *)"Work_setDueDate(Work self, ELong _dueDate)"},
	 { (char *)"Work_eGet", (PyCFunction) _wrap_Work_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Work_eGet(Work self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Work_eSet", (PyCFunction) _wrap_Work_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Work_eSet(Work self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Work_eIsSet", (PyCFunction) _wrap_Work_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Work_eIsSet(Work self, EInt _featureID) -> EBoolean"},
	 { (char *)"Work_eUnset", (PyCFunction) _wrap_Work_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Work_eUnset(Work self, EInt _featureID)"},
	 { (char *)"Work__eClass", _wrap_Work__eClass, METH_VARARGS, (char *)"Work__eClass(Work self) -> EClass_ptr"},
	 { (char *)"Work_swigregister", Work_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AddWorkOptions", _wrap_new_AddWorkOptions, METH_VARARGS, (char *)"new_AddWorkOptions() -> AddWorkOptions"},
	 { (char *)"delete_AddWorkOptions", _wrap_delete_AddWorkOptions, METH_VARARGS, (char *)"delete_AddWorkOptions(AddWorkOptions self)"},
	 { (char *)"AddWorkOptions__initialize", _wrap_AddWorkOptions__initialize, METH_VARARGS, (char *)"AddWorkOptions__initialize(AddWorkOptions self)"},
	 { (char *)"AddWorkOptions_getApplicationId", _wrap_AddWorkOptions_getApplicationId, METH_VARARGS, (char *)"AddWorkOptions_getApplicationId(AddWorkOptions self) -> EString"},
	 { (char *)"AddWorkOptions_setApplicationId", (PyCFunction) _wrap_AddWorkOptions_setApplicationId, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_setApplicationId(AddWorkOptions self, EString _applicationId)"},
	 { (char *)"AddWorkOptions_getSubject", _wrap_AddWorkOptions_getSubject, METH_VARARGS, (char *)"AddWorkOptions_getSubject(AddWorkOptions self) -> EString"},
	 { (char *)"AddWorkOptions_setSubject", (PyCFunction) _wrap_AddWorkOptions_setSubject, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_setSubject(AddWorkOptions self, EString _subject)"},
	 { (char *)"AddWorkOptions_getPriority", _wrap_AddWorkOptions_getPriority, METH_VARARGS, (char *)"AddWorkOptions_getPriority(AddWorkOptions self) -> EInt"},
	 { (char *)"AddWorkOptions_setPriority", (PyCFunction) _wrap_AddWorkOptions_setPriority, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_setPriority(AddWorkOptions self, EInt _priority)"},
	 { (char *)"AddWorkOptions_getOwner", _wrap_AddWorkOptions_getOwner, METH_VARARGS, (char *)"AddWorkOptions_getOwner(AddWorkOptions self) -> EString"},
	 { (char *)"AddWorkOptions_setOwner", (PyCFunction) _wrap_AddWorkOptions_setOwner, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_setOwner(AddWorkOptions self, EString _owner)"},
	 { (char *)"AddWorkOptions_getEstimatedHour", _wrap_AddWorkOptions_getEstimatedHour, METH_VARARGS, (char *)"AddWorkOptions_getEstimatedHour(AddWorkOptions self) -> ELong"},
	 { (char *)"AddWorkOptions_setEstimatedHour", (PyCFunction) _wrap_AddWorkOptions_setEstimatedHour, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_setEstimatedHour(AddWorkOptions self, ELong _estimatedHour)"},
	 { (char *)"AddWorkOptions_getDescription", _wrap_AddWorkOptions_getDescription, METH_VARARGS, (char *)"AddWorkOptions_getDescription(AddWorkOptions self) -> EString"},
	 { (char *)"AddWorkOptions_setDescription", (PyCFunction) _wrap_AddWorkOptions_setDescription, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_setDescription(AddWorkOptions self, EString _description)"},
	 { (char *)"AddWorkOptions_getProjectId", _wrap_AddWorkOptions_getProjectId, METH_VARARGS, (char *)"AddWorkOptions_getProjectId(AddWorkOptions self) -> EString"},
	 { (char *)"AddWorkOptions_setProjectId", (PyCFunction) _wrap_AddWorkOptions_setProjectId, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_setProjectId(AddWorkOptions self, EString _projectId)"},
	 { (char *)"AddWorkOptions_getMachineId", _wrap_AddWorkOptions_getMachineId, METH_VARARGS, (char *)"AddWorkOptions_getMachineId(AddWorkOptions self) -> EString"},
	 { (char *)"AddWorkOptions_setMachineId", (PyCFunction) _wrap_AddWorkOptions_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_setMachineId(AddWorkOptions self, EString _machineId)"},
	 { (char *)"AddWorkOptions_getNbCPU", _wrap_AddWorkOptions_getNbCPU, METH_VARARGS, (char *)"AddWorkOptions_getNbCPU(AddWorkOptions self) -> EInt"},
	 { (char *)"AddWorkOptions_setNbCPU", (PyCFunction) _wrap_AddWorkOptions_setNbCPU, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_setNbCPU(AddWorkOptions self, EInt _nbCPU)"},
	 { (char *)"AddWorkOptions_eGet", (PyCFunction) _wrap_AddWorkOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_eGet(AddWorkOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"AddWorkOptions_eSet", (PyCFunction) _wrap_AddWorkOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_eSet(AddWorkOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"AddWorkOptions_eIsSet", (PyCFunction) _wrap_AddWorkOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_eIsSet(AddWorkOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"AddWorkOptions_eUnset", (PyCFunction) _wrap_AddWorkOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"AddWorkOptions_eUnset(AddWorkOptions self, EInt _featureID)"},
	 { (char *)"AddWorkOptions__eClass", _wrap_AddWorkOptions__eClass, METH_VARARGS, (char *)"AddWorkOptions__eClass(AddWorkOptions self) -> EClass_ptr"},
	 { (char *)"AddWorkOptions_swigregister", AddWorkOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ExportOp", _wrap_new_ExportOp, METH_VARARGS, (char *)"new_ExportOp() -> ExportOp"},
	 { (char *)"delete_ExportOp", _wrap_delete_ExportOp, METH_VARARGS, (char *)"delete_ExportOp(ExportOp self)"},
	 { (char *)"ExportOp__initialize", _wrap_ExportOp__initialize, METH_VARARGS, (char *)"ExportOp__initialize(ExportOp self)"},
	 { (char *)"ExportOp_getExportType", _wrap_ExportOp_getExportType, METH_VARARGS, (char *)"ExportOp_getExportType(ExportOp self) -> ExportType"},
	 { (char *)"ExportOp_setExportType", (PyCFunction) _wrap_ExportOp_setExportType, METH_VARARGS | METH_KEYWORDS, (char *)"ExportOp_setExportType(ExportOp self, ExportType _exportType)"},
	 { (char *)"ExportOp_eGet", (PyCFunction) _wrap_ExportOp_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ExportOp_eGet(ExportOp self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ExportOp_eSet", (PyCFunction) _wrap_ExportOp_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ExportOp_eSet(ExportOp self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ExportOp_eIsSet", (PyCFunction) _wrap_ExportOp_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ExportOp_eIsSet(ExportOp self, EInt _featureID) -> EBoolean"},
	 { (char *)"ExportOp_eUnset", (PyCFunction) _wrap_ExportOp_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ExportOp_eUnset(ExportOp self, EInt _featureID)"},
	 { (char *)"ExportOp__eClass", _wrap_ExportOp__eClass, METH_VARARGS, (char *)"ExportOp__eClass(ExportOp self) -> EClass_ptr"},
	 { (char *)"ExportOp_swigregister", ExportOp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CurMetricOp", _wrap_new_CurMetricOp, METH_VARARGS, (char *)"new_CurMetricOp() -> CurMetricOp"},
	 { (char *)"delete_CurMetricOp", _wrap_delete_CurMetricOp, METH_VARARGS, (char *)"delete_CurMetricOp(CurMetricOp self)"},
	 { (char *)"CurMetricOp__initialize", _wrap_CurMetricOp__initialize, METH_VARARGS, (char *)"CurMetricOp__initialize(CurMetricOp self)"},
	 { (char *)"CurMetricOp_getMetricType", _wrap_CurMetricOp_getMetricType, METH_VARARGS, (char *)"CurMetricOp_getMetricType(CurMetricOp self) -> MetricType"},
	 { (char *)"CurMetricOp_setMetricType", (PyCFunction) _wrap_CurMetricOp_setMetricType, METH_VARARGS | METH_KEYWORDS, (char *)"CurMetricOp_setMetricType(CurMetricOp self, MetricType _metricType)"},
	 { (char *)"CurMetricOp_eGet", (PyCFunction) _wrap_CurMetricOp_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"CurMetricOp_eGet(CurMetricOp self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"CurMetricOp_eSet", (PyCFunction) _wrap_CurMetricOp_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"CurMetricOp_eSet(CurMetricOp self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"CurMetricOp_eIsSet", (PyCFunction) _wrap_CurMetricOp_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"CurMetricOp_eIsSet(CurMetricOp self, EInt _featureID) -> EBoolean"},
	 { (char *)"CurMetricOp_eUnset", (PyCFunction) _wrap_CurMetricOp_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"CurMetricOp_eUnset(CurMetricOp self, EInt _featureID)"},
	 { (char *)"CurMetricOp__eClass", _wrap_CurMetricOp__eClass, METH_VARARGS, (char *)"CurMetricOp__eClass(CurMetricOp self) -> EClass_ptr"},
	 { (char *)"CurMetricOp_swigregister", CurMetricOp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Metric", _wrap_new_Metric, METH_VARARGS, (char *)"new_Metric() -> Metric"},
	 { (char *)"delete_Metric", _wrap_delete_Metric, METH_VARARGS, (char *)"delete_Metric(Metric self)"},
	 { (char *)"Metric__initialize", _wrap_Metric__initialize, METH_VARARGS, (char *)"Metric__initialize(Metric self)"},
	 { (char *)"Metric_getType", _wrap_Metric_getType, METH_VARARGS, (char *)"Metric_getType(Metric self) -> MetricType"},
	 { (char *)"Metric_setType", (PyCFunction) _wrap_Metric_setType, METH_VARARGS | METH_KEYWORDS, (char *)"Metric_setType(Metric self, MetricType _type)"},
	 { (char *)"Metric_getValue", _wrap_Metric_getValue, METH_VARARGS, (char *)"Metric_getValue(Metric self) -> ELong"},
	 { (char *)"Metric_setValue", (PyCFunction) _wrap_Metric_setValue, METH_VARARGS | METH_KEYWORDS, (char *)"Metric_setValue(Metric self, ELong _value)"},
	 { (char *)"Metric_getTime", _wrap_Metric_getTime, METH_VARARGS, (char *)"Metric_getTime(Metric self) -> ELong"},
	 { (char *)"Metric_setTime", (PyCFunction) _wrap_Metric_setTime, METH_VARARGS | METH_KEYWORDS, (char *)"Metric_setTime(Metric self, ELong _time)"},
	 { (char *)"Metric_eGet", (PyCFunction) _wrap_Metric_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Metric_eGet(Metric self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Metric_eSet", (PyCFunction) _wrap_Metric_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Metric_eSet(Metric self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Metric_eIsSet", (PyCFunction) _wrap_Metric_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Metric_eIsSet(Metric self, EInt _featureID) -> EBoolean"},
	 { (char *)"Metric_eUnset", (PyCFunction) _wrap_Metric_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Metric_eUnset(Metric self, EInt _featureID)"},
	 { (char *)"Metric__eClass", _wrap_Metric__eClass, METH_VARARGS, (char *)"Metric__eClass(Metric self) -> EClass_ptr"},
	 { (char *)"Metric_swigregister", Metric_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_MetricHistOp", _wrap_new_MetricHistOp, METH_VARARGS, (char *)"new_MetricHistOp() -> MetricHistOp"},
	 { (char *)"delete_MetricHistOp", _wrap_delete_MetricHistOp, METH_VARARGS, (char *)"delete_MetricHistOp(MetricHistOp self)"},
	 { (char *)"MetricHistOp__initialize", _wrap_MetricHistOp__initialize, METH_VARARGS, (char *)"MetricHistOp__initialize(MetricHistOp self)"},
	 { (char *)"MetricHistOp_getStartTime", _wrap_MetricHistOp_getStartTime, METH_VARARGS, (char *)"MetricHistOp_getStartTime(MetricHistOp self) -> ELong"},
	 { (char *)"MetricHistOp_setStartTime", (PyCFunction) _wrap_MetricHistOp_setStartTime, METH_VARARGS | METH_KEYWORDS, (char *)"MetricHistOp_setStartTime(MetricHistOp self, ELong _startTime)"},
	 { (char *)"MetricHistOp_getEndTime", _wrap_MetricHistOp_getEndTime, METH_VARARGS, (char *)"MetricHistOp_getEndTime(MetricHistOp self) -> ELong"},
	 { (char *)"MetricHistOp_setEndTime", (PyCFunction) _wrap_MetricHistOp_setEndTime, METH_VARARGS | METH_KEYWORDS, (char *)"MetricHistOp_setEndTime(MetricHistOp self, ELong _endTime)"},
	 { (char *)"MetricHistOp_getType", _wrap_MetricHistOp_getType, METH_VARARGS, (char *)"MetricHistOp_getType(MetricHistOp self) -> MetricType"},
	 { (char *)"MetricHistOp_setType", (PyCFunction) _wrap_MetricHistOp_setType, METH_VARARGS | METH_KEYWORDS, (char *)"MetricHistOp_setType(MetricHistOp self, MetricType _type)"},
	 { (char *)"MetricHistOp_eGet", (PyCFunction) _wrap_MetricHistOp_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"MetricHistOp_eGet(MetricHistOp self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"MetricHistOp_eSet", (PyCFunction) _wrap_MetricHistOp_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"MetricHistOp_eSet(MetricHistOp self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"MetricHistOp_eIsSet", (PyCFunction) _wrap_MetricHistOp_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"MetricHistOp_eIsSet(MetricHistOp self, EInt _featureID) -> EBoolean"},
	 { (char *)"MetricHistOp_eUnset", (PyCFunction) _wrap_MetricHistOp_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"MetricHistOp_eUnset(MetricHistOp self, EInt _featureID)"},
	 { (char *)"MetricHistOp__eClass", _wrap_MetricHistOp__eClass, METH_VARARGS, (char *)"MetricHistOp__eClass(MetricHistOp self) -> EClass_ptr"},
	 { (char *)"MetricHistOp_swigregister", MetricHistOp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Process", _wrap_new_Process, METH_VARARGS, (char *)"new_Process() -> Process"},
	 { (char *)"delete_Process", _wrap_delete_Process, METH_VARARGS, (char *)"delete_Process(Process self)"},
	 { (char *)"Process__initialize", _wrap_Process__initialize, METH_VARARGS, (char *)"Process__initialize(Process self)"},
	 { (char *)"Process_getProcessName", _wrap_Process_getProcessName, METH_VARARGS, (char *)"Process_getProcessName(Process self) -> EString"},
	 { (char *)"Process_setProcessName", (PyCFunction) _wrap_Process_setProcessName, METH_VARARGS | METH_KEYWORDS, (char *)"Process_setProcessName(Process self, EString _processName)"},
	 { (char *)"Process_getMachineId", _wrap_Process_getMachineId, METH_VARARGS, (char *)"Process_getMachineId(Process self) -> EString"},
	 { (char *)"Process_setMachineId", (PyCFunction) _wrap_Process_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"Process_setMachineId(Process self, EString _machineId)"},
	 { (char *)"Process_getDietId", _wrap_Process_getDietId, METH_VARARGS, (char *)"Process_getDietId(Process self) -> EString"},
	 { (char *)"Process_setDietId", (PyCFunction) _wrap_Process_setDietId, METH_VARARGS | METH_KEYWORDS, (char *)"Process_setDietId(Process self, EString _dietId)"},
	 { (char *)"Process_getState", _wrap_Process_getState, METH_VARARGS, (char *)"Process_getState(Process self) -> ProcessState"},
	 { (char *)"Process_setState", (PyCFunction) _wrap_Process_setState, METH_VARARGS | METH_KEYWORDS, (char *)"Process_setState(Process self, ProcessState _state)"},
	 { (char *)"Process_getTimestamp", _wrap_Process_getTimestamp, METH_VARARGS, (char *)"Process_getTimestamp(Process self) -> ELong"},
	 { (char *)"Process_setTimestamp", (PyCFunction) _wrap_Process_setTimestamp, METH_VARARGS | METH_KEYWORDS, (char *)"Process_setTimestamp(Process self, ELong _timestamp)"},
	 { (char *)"Process_getScript", _wrap_Process_getScript, METH_VARARGS, (char *)"Process_getScript(Process self) -> EString"},
	 { (char *)"Process_setScript", (PyCFunction) _wrap_Process_setScript, METH_VARARGS | METH_KEYWORDS, (char *)"Process_setScript(Process self, EString _script)"},
	 { (char *)"Process_eGet", (PyCFunction) _wrap_Process_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Process_eGet(Process self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Process_eSet", (PyCFunction) _wrap_Process_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Process_eSet(Process self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Process_eIsSet", (PyCFunction) _wrap_Process_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Process_eIsSet(Process self, EInt _featureID) -> EBoolean"},
	 { (char *)"Process_eUnset", (PyCFunction) _wrap_Process_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Process_eUnset(Process self, EInt _featureID)"},
	 { (char *)"Process__eClass", _wrap_Process__eClass, METH_VARARGS, (char *)"Process__eClass(Process self) -> EClass_ptr"},
	 { (char *)"Process_swigregister", Process_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ProcessOp", _wrap_new_ProcessOp, METH_VARARGS, (char *)"new_ProcessOp() -> ProcessOp"},
	 { (char *)"delete_ProcessOp", _wrap_delete_ProcessOp, METH_VARARGS, (char *)"delete_ProcessOp(ProcessOp self)"},
	 { (char *)"ProcessOp__initialize", _wrap_ProcessOp__initialize, METH_VARARGS, (char *)"ProcessOp__initialize(ProcessOp self)"},
	 { (char *)"ProcessOp_getMachineId", _wrap_ProcessOp_getMachineId, METH_VARARGS, (char *)"ProcessOp_getMachineId(ProcessOp self) -> EString"},
	 { (char *)"ProcessOp_setMachineId", (PyCFunction) _wrap_ProcessOp_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"ProcessOp_setMachineId(ProcessOp self, EString _machineId)"},
	 { (char *)"ProcessOp_eGet", (PyCFunction) _wrap_ProcessOp_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ProcessOp_eGet(ProcessOp self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ProcessOp_eSet", (PyCFunction) _wrap_ProcessOp_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ProcessOp_eSet(ProcessOp self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ProcessOp_eIsSet", (PyCFunction) _wrap_ProcessOp_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ProcessOp_eIsSet(ProcessOp self, EInt _featureID) -> EBoolean"},
	 { (char *)"ProcessOp_eUnset", (PyCFunction) _wrap_ProcessOp_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ProcessOp_eUnset(ProcessOp self, EInt _featureID)"},
	 { (char *)"ProcessOp__eClass", _wrap_ProcessOp__eClass, METH_VARARGS, (char *)"ProcessOp__eClass(ProcessOp self) -> EClass_ptr"},
	 { (char *)"ProcessOp_swigregister", ProcessOp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RestartOp", _wrap_new_RestartOp, METH_VARARGS, (char *)"new_RestartOp() -> RestartOp"},
	 { (char *)"delete_RestartOp", _wrap_delete_RestartOp, METH_VARARGS, (char *)"delete_RestartOp(RestartOp self)"},
	 { (char *)"RestartOp__initialize", _wrap_RestartOp__initialize, METH_VARARGS, (char *)"RestartOp__initialize(RestartOp self)"},
	 { (char *)"RestartOp_getVishnuConf", _wrap_RestartOp_getVishnuConf, METH_VARARGS, (char *)"RestartOp_getVishnuConf(RestartOp self) -> EString"},
	 { (char *)"RestartOp_setVishnuConf", (PyCFunction) _wrap_RestartOp_setVishnuConf, METH_VARARGS | METH_KEYWORDS, (char *)"RestartOp_setVishnuConf(RestartOp self, EString _vishnuConf)"},
	 { (char *)"RestartOp_getSedType", _wrap_RestartOp_getSedType, METH_VARARGS, (char *)"RestartOp_getSedType(RestartOp self) -> SeDType"},
	 { (char *)"RestartOp_setSedType", (PyCFunction) _wrap_RestartOp_setSedType, METH_VARARGS | METH_KEYWORDS, (char *)"RestartOp_setSedType(RestartOp self, SeDType _sedType)"},
	 { (char *)"RestartOp_eGet", (PyCFunction) _wrap_RestartOp_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"RestartOp_eGet(RestartOp self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"RestartOp_eSet", (PyCFunction) _wrap_RestartOp_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"RestartOp_eSet(RestartOp self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"RestartOp_eIsSet", (PyCFunction) _wrap_RestartOp_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"RestartOp_eIsSet(RestartOp self, EInt _featureID) -> EBoolean"},
	 { (char *)"RestartOp_eUnset", (PyCFunction) _wrap_RestartOp_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"RestartOp_eUnset(RestartOp self, EInt _featureID)"},
	 { (char *)"RestartOp__eClass", _wrap_RestartOp__eClass, METH_VARARGS, (char *)"RestartOp__eClass(RestartOp self) -> EClass_ptr"},
	 { (char *)"RestartOp_swigregister", RestartOp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SysInfoOp", _wrap_new_SysInfoOp, METH_VARARGS, (char *)"new_SysInfoOp() -> SysInfoOp"},
	 { (char *)"delete_SysInfoOp", _wrap_delete_SysInfoOp, METH_VARARGS, (char *)"delete_SysInfoOp(SysInfoOp self)"},
	 { (char *)"SysInfoOp__initialize", _wrap_SysInfoOp__initialize, METH_VARARGS, (char *)"SysInfoOp__initialize(SysInfoOp self)"},
	 { (char *)"SysInfoOp_getMachineId", _wrap_SysInfoOp_getMachineId, METH_VARARGS, (char *)"SysInfoOp_getMachineId(SysInfoOp self) -> EString"},
	 { (char *)"SysInfoOp_setMachineId", (PyCFunction) _wrap_SysInfoOp_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"SysInfoOp_setMachineId(SysInfoOp self, EString _machineId)"},
	 { (char *)"SysInfoOp_eGet", (PyCFunction) _wrap_SysInfoOp_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"SysInfoOp_eGet(SysInfoOp self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"SysInfoOp_eSet", (PyCFunction) _wrap_SysInfoOp_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"SysInfoOp_eSet(SysInfoOp self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"SysInfoOp_eIsSet", (PyCFunction) _wrap_SysInfoOp_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"SysInfoOp_eIsSet(SysInfoOp self, EInt _featureID) -> EBoolean"},
	 { (char *)"SysInfoOp_eUnset", (PyCFunction) _wrap_SysInfoOp_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"SysInfoOp_eUnset(SysInfoOp self, EInt _featureID)"},
	 { (char *)"SysInfoOp__eClass", _wrap_SysInfoOp__eClass, METH_VARARGS, (char *)"SysInfoOp__eClass(SysInfoOp self) -> EClass_ptr"},
	 { (char *)"SysInfoOp_swigregister", SysInfoOp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SystemInfo", _wrap_new_SystemInfo, METH_VARARGS, (char *)"new_SystemInfo() -> SystemInfo"},
	 { (char *)"delete_SystemInfo", _wrap_delete_SystemInfo, METH_VARARGS, (char *)"delete_SystemInfo(SystemInfo self)"},
	 { (char *)"SystemInfo__initialize", _wrap_SystemInfo__initialize, METH_VARARGS, (char *)"SystemInfo__initialize(SystemInfo self)"},
	 { (char *)"SystemInfo_getMemory", _wrap_SystemInfo_getMemory, METH_VARARGS, (char *)"SystemInfo_getMemory(SystemInfo self) -> ELong"},
	 { (char *)"SystemInfo_setMemory", (PyCFunction) _wrap_SystemInfo_setMemory, METH_VARARGS | METH_KEYWORDS, (char *)"SystemInfo_setMemory(SystemInfo self, ELong _memory)"},
	 { (char *)"SystemInfo_getDiskSpace", _wrap_SystemInfo_getDiskSpace, METH_VARARGS, (char *)"SystemInfo_getDiskSpace(SystemInfo self) -> ELong"},
	 { (char *)"SystemInfo_setDiskSpace", (PyCFunction) _wrap_SystemInfo_setDiskSpace, METH_VARARGS | METH_KEYWORDS, (char *)"SystemInfo_setDiskSpace(SystemInfo self, ELong _diskSpace)"},
	 { (char *)"SystemInfo_getMachineId", _wrap_SystemInfo_getMachineId, METH_VARARGS, (char *)"SystemInfo_getMachineId(SystemInfo self) -> EString"},
	 { (char *)"SystemInfo_setMachineId", (PyCFunction) _wrap_SystemInfo_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"SystemInfo_setMachineId(SystemInfo self, EString _machineId)"},
	 { (char *)"SystemInfo_eGet", (PyCFunction) _wrap_SystemInfo_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"SystemInfo_eGet(SystemInfo self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"SystemInfo_eSet", (PyCFunction) _wrap_SystemInfo_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"SystemInfo_eSet(SystemInfo self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"SystemInfo_eIsSet", (PyCFunction) _wrap_SystemInfo_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"SystemInfo_eIsSet(SystemInfo self, EInt _featureID) -> EBoolean"},
	 { (char *)"SystemInfo_eUnset", (PyCFunction) _wrap_SystemInfo_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"SystemInfo_eUnset(SystemInfo self, EInt _featureID)"},
	 { (char *)"SystemInfo__eClass", _wrap_SystemInfo__eClass, METH_VARARGS, (char *)"SystemInfo__eClass(SystemInfo self) -> EClass_ptr"},
	 { (char *)"SystemInfo_swigregister", SystemInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Threshold", _wrap_new_Threshold, METH_VARARGS, (char *)"new_Threshold() -> Threshold"},
	 { (char *)"delete_Threshold", _wrap_delete_Threshold, METH_VARARGS, (char *)"delete_Threshold(Threshold self)"},
	 { (char *)"Threshold__initialize", _wrap_Threshold__initialize, METH_VARARGS, (char *)"Threshold__initialize(Threshold self)"},
	 { (char *)"Threshold_getValue", _wrap_Threshold_getValue, METH_VARARGS, (char *)"Threshold_getValue(Threshold self) -> ELong"},
	 { (char *)"Threshold_setValue", (PyCFunction) _wrap_Threshold_setValue, METH_VARARGS | METH_KEYWORDS, (char *)"Threshold_setValue(Threshold self, ELong _value)"},
	 { (char *)"Threshold_getMachineId", _wrap_Threshold_getMachineId, METH_VARARGS, (char *)"Threshold_getMachineId(Threshold self) -> EString"},
	 { (char *)"Threshold_setMachineId", (PyCFunction) _wrap_Threshold_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"Threshold_setMachineId(Threshold self, EString _machineId)"},
	 { (char *)"Threshold_getType", _wrap_Threshold_getType, METH_VARARGS, (char *)"Threshold_getType(Threshold self) -> MetricType"},
	 { (char *)"Threshold_setType", (PyCFunction) _wrap_Threshold_setType, METH_VARARGS | METH_KEYWORDS, (char *)"Threshold_setType(Threshold self, MetricType _type)"},
	 { (char *)"Threshold_getHandler", _wrap_Threshold_getHandler, METH_VARARGS, (char *)"Threshold_getHandler(Threshold self) -> EString"},
	 { (char *)"Threshold_setHandler", (PyCFunction) _wrap_Threshold_setHandler, METH_VARARGS | METH_KEYWORDS, (char *)"Threshold_setHandler(Threshold self, EString _handler)"},
	 { (char *)"Threshold_eGet", (PyCFunction) _wrap_Threshold_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"Threshold_eGet(Threshold self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"Threshold_eSet", (PyCFunction) _wrap_Threshold_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"Threshold_eSet(Threshold self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"Threshold_eIsSet", (PyCFunction) _wrap_Threshold_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"Threshold_eIsSet(Threshold self, EInt _featureID) -> EBoolean"},
	 { (char *)"Threshold_eUnset", (PyCFunction) _wrap_Threshold_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"Threshold_eUnset(Threshold self, EInt _featureID)"},
	 { (char *)"Threshold__eClass", _wrap_Threshold__eClass, METH_VARARGS, (char *)"Threshold__eClass(Threshold self) -> EClass_ptr"},
	 { (char *)"Threshold_swigregister", Threshold_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ThresholdOp", _wrap_new_ThresholdOp, METH_VARARGS, (char *)"new_ThresholdOp() -> ThresholdOp"},
	 { (char *)"delete_ThresholdOp", _wrap_delete_ThresholdOp, METH_VARARGS, (char *)"delete_ThresholdOp(ThresholdOp self)"},
	 { (char *)"ThresholdOp__initialize", _wrap_ThresholdOp__initialize, METH_VARARGS, (char *)"ThresholdOp__initialize(ThresholdOp self)"},
	 { (char *)"ThresholdOp_getMachineId", _wrap_ThresholdOp_getMachineId, METH_VARARGS, (char *)"ThresholdOp_getMachineId(ThresholdOp self) -> EString"},
	 { (char *)"ThresholdOp_setMachineId", (PyCFunction) _wrap_ThresholdOp_setMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"ThresholdOp_setMachineId(ThresholdOp self, EString _machineId)"},
	 { (char *)"ThresholdOp_getMetricType", _wrap_ThresholdOp_getMetricType, METH_VARARGS, (char *)"ThresholdOp_getMetricType(ThresholdOp self) -> MetricType"},
	 { (char *)"ThresholdOp_setMetricType", (PyCFunction) _wrap_ThresholdOp_setMetricType, METH_VARARGS | METH_KEYWORDS, (char *)"ThresholdOp_setMetricType(ThresholdOp self, MetricType _metricType)"},
	 { (char *)"ThresholdOp_eGet", (PyCFunction) _wrap_ThresholdOp_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"ThresholdOp_eGet(ThresholdOp self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"ThresholdOp_eSet", (PyCFunction) _wrap_ThresholdOp_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"ThresholdOp_eSet(ThresholdOp self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"ThresholdOp_eIsSet", (PyCFunction) _wrap_ThresholdOp_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"ThresholdOp_eIsSet(ThresholdOp self, EInt _featureID) -> EBoolean"},
	 { (char *)"ThresholdOp_eUnset", (PyCFunction) _wrap_ThresholdOp_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"ThresholdOp_eUnset(ThresholdOp self, EInt _featureID)"},
	 { (char *)"ThresholdOp__eClass", _wrap_ThresholdOp__eClass, METH_VARARGS, (char *)"ThresholdOp__eClass(ThresholdOp self) -> EClass_ptr"},
	 { (char *)"ThresholdOp_swigregister", ThresholdOp_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CpFileOptions", _wrap_new_CpFileOptions, METH_VARARGS, (char *)"new_CpFileOptions() -> CpFileOptions"},
	 { (char *)"delete_CpFileOptions", _wrap_delete_CpFileOptions, METH_VARARGS, (char *)"delete_CpFileOptions(CpFileOptions self)"},
	 { (char *)"CpFileOptions__initialize", _wrap_CpFileOptions__initialize, METH_VARARGS, (char *)"CpFileOptions__initialize(CpFileOptions self)"},
	 { (char *)"CpFileOptions_isIsRecursive", _wrap_CpFileOptions_isIsRecursive, METH_VARARGS, (char *)"CpFileOptions_isIsRecursive(CpFileOptions self) -> EBoolean"},
	 { (char *)"CpFileOptions_setIsRecursive", (PyCFunction) _wrap_CpFileOptions_setIsRecursive, METH_VARARGS | METH_KEYWORDS, (char *)"CpFileOptions_setIsRecursive(CpFileOptions self, EBoolean _isRecursive)"},
	 { (char *)"CpFileOptions_getTrCommand", _wrap_CpFileOptions_getTrCommand, METH_VARARGS, (char *)"CpFileOptions_getTrCommand(CpFileOptions self) -> TransferCommand"},
	 { (char *)"CpFileOptions_setTrCommand", (PyCFunction) _wrap_CpFileOptions_setTrCommand, METH_VARARGS | METH_KEYWORDS, (char *)"CpFileOptions_setTrCommand(CpFileOptions self, TransferCommand _trCommand)"},
	 { (char *)"CpFileOptions_eGet", (PyCFunction) _wrap_CpFileOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"CpFileOptions_eGet(CpFileOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"CpFileOptions_eSet", (PyCFunction) _wrap_CpFileOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"CpFileOptions_eSet(CpFileOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"CpFileOptions_eIsSet", (PyCFunction) _wrap_CpFileOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"CpFileOptions_eIsSet(CpFileOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"CpFileOptions_eUnset", (PyCFunction) _wrap_CpFileOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"CpFileOptions_eUnset(CpFileOptions self, EInt _featureID)"},
	 { (char *)"CpFileOptions__eClass", _wrap_CpFileOptions__eClass, METH_VARARGS, (char *)"CpFileOptions__eClass(CpFileOptions self) -> EClass_ptr"},
	 { (char *)"CpFileOptions_swigregister", CpFileOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_FileStat", _wrap_new_FileStat, METH_VARARGS, (char *)"new_FileStat() -> FileStat"},
	 { (char *)"delete_FileStat", _wrap_delete_FileStat, METH_VARARGS, (char *)"delete_FileStat(FileStat self)"},
	 { (char *)"FileStat__initialize", _wrap_FileStat__initialize, METH_VARARGS, (char *)"FileStat__initialize(FileStat self)"},
	 { (char *)"FileStat_getPath", _wrap_FileStat_getPath, METH_VARARGS, (char *)"FileStat_getPath(FileStat self) -> EString"},
	 { (char *)"FileStat_setPath", (PyCFunction) _wrap_FileStat_setPath, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setPath(FileStat self, EString _path)"},
	 { (char *)"FileStat_getOwner", _wrap_FileStat_getOwner, METH_VARARGS, (char *)"FileStat_getOwner(FileStat self) -> EString"},
	 { (char *)"FileStat_setOwner", (PyCFunction) _wrap_FileStat_setOwner, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setOwner(FileStat self, EString _owner)"},
	 { (char *)"FileStat_getGroup", _wrap_FileStat_getGroup, METH_VARARGS, (char *)"FileStat_getGroup(FileStat self) -> EString"},
	 { (char *)"FileStat_setGroup", (PyCFunction) _wrap_FileStat_setGroup, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setGroup(FileStat self, EString _group)"},
	 { (char *)"FileStat_getPerms", _wrap_FileStat_getPerms, METH_VARARGS, (char *)"FileStat_getPerms(FileStat self) -> EInt"},
	 { (char *)"FileStat_setPerms", (PyCFunction) _wrap_FileStat_setPerms, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setPerms(FileStat self, EInt _perms)"},
	 { (char *)"FileStat_getUid", _wrap_FileStat_getUid, METH_VARARGS, (char *)"FileStat_getUid(FileStat self) -> ELong"},
	 { (char *)"FileStat_setUid", (PyCFunction) _wrap_FileStat_setUid, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setUid(FileStat self, ELong _uid)"},
	 { (char *)"FileStat_getGid", _wrap_FileStat_getGid, METH_VARARGS, (char *)"FileStat_getGid(FileStat self) -> ELong"},
	 { (char *)"FileStat_setGid", (PyCFunction) _wrap_FileStat_setGid, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setGid(FileStat self, ELong _gid)"},
	 { (char *)"FileStat_getSize", _wrap_FileStat_getSize, METH_VARARGS, (char *)"FileStat_getSize(FileStat self) -> EBigInteger"},
	 { (char *)"FileStat_setSize", (PyCFunction) _wrap_FileStat_setSize, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setSize(FileStat self, EBigInteger _size)"},
	 { (char *)"FileStat_getAtime", _wrap_FileStat_getAtime, METH_VARARGS, (char *)"FileStat_getAtime(FileStat self) -> ELong"},
	 { (char *)"FileStat_setAtime", (PyCFunction) _wrap_FileStat_setAtime, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setAtime(FileStat self, ELong _atime)"},
	 { (char *)"FileStat_getMtime", _wrap_FileStat_getMtime, METH_VARARGS, (char *)"FileStat_getMtime(FileStat self) -> ELong"},
	 { (char *)"FileStat_setMtime", (PyCFunction) _wrap_FileStat_setMtime, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setMtime(FileStat self, ELong _mtime)"},
	 { (char *)"FileStat_getCtime", _wrap_FileStat_getCtime, METH_VARARGS, (char *)"FileStat_getCtime(FileStat self) -> ELong"},
	 { (char *)"FileStat_setCtime", (PyCFunction) _wrap_FileStat_setCtime, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setCtime(FileStat self, ELong _ctime)"},
	 { (char *)"FileStat_getType", _wrap_FileStat_getType, METH_VARARGS, (char *)"FileStat_getType(FileStat self) -> FileType"},
	 { (char *)"FileStat_setType", (PyCFunction) _wrap_FileStat_setType, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_setType(FileStat self, FileType _type)"},
	 { (char *)"FileStat_eGet", (PyCFunction) _wrap_FileStat_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_eGet(FileStat self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"FileStat_eSet", (PyCFunction) _wrap_FileStat_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_eSet(FileStat self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"FileStat_eIsSet", (PyCFunction) _wrap_FileStat_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_eIsSet(FileStat self, EInt _featureID) -> EBoolean"},
	 { (char *)"FileStat_eUnset", (PyCFunction) _wrap_FileStat_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"FileStat_eUnset(FileStat self, EInt _featureID)"},
	 { (char *)"FileStat__eClass", _wrap_FileStat__eClass, METH_VARARGS, (char *)"FileStat__eClass(FileStat self) -> EClass_ptr"},
	 { (char *)"FileStat_swigregister", FileStat_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_FileTransfer", _wrap_new_FileTransfer, METH_VARARGS, (char *)"new_FileTransfer() -> FileTransfer"},
	 { (char *)"delete_FileTransfer", _wrap_delete_FileTransfer, METH_VARARGS, (char *)"delete_FileTransfer(FileTransfer self)"},
	 { (char *)"FileTransfer__initialize", _wrap_FileTransfer__initialize, METH_VARARGS, (char *)"FileTransfer__initialize(FileTransfer self)"},
	 { (char *)"FileTransfer_getTransferId", _wrap_FileTransfer_getTransferId, METH_VARARGS, (char *)"FileTransfer_getTransferId(FileTransfer self) -> EString"},
	 { (char *)"FileTransfer_setTransferId", (PyCFunction) _wrap_FileTransfer_setTransferId, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setTransferId(FileTransfer self, EString _transferId)"},
	 { (char *)"FileTransfer_getStatus", _wrap_FileTransfer_getStatus, METH_VARARGS, (char *)"FileTransfer_getStatus(FileTransfer self) -> Status"},
	 { (char *)"FileTransfer_setStatus", (PyCFunction) _wrap_FileTransfer_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setStatus(FileTransfer self, Status _status)"},
	 { (char *)"FileTransfer_getUserId", _wrap_FileTransfer_getUserId, METH_VARARGS, (char *)"FileTransfer_getUserId(FileTransfer self) -> EString"},
	 { (char *)"FileTransfer_setUserId", (PyCFunction) _wrap_FileTransfer_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setUserId(FileTransfer self, EString _userId)"},
	 { (char *)"FileTransfer_getClientMachineId", _wrap_FileTransfer_getClientMachineId, METH_VARARGS, (char *)"FileTransfer_getClientMachineId(FileTransfer self) -> EString"},
	 { (char *)"FileTransfer_setClientMachineId", (PyCFunction) _wrap_FileTransfer_setClientMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setClientMachineId(FileTransfer self, EString _clientMachineId)"},
	 { (char *)"FileTransfer_getSourceMachineId", _wrap_FileTransfer_getSourceMachineId, METH_VARARGS, (char *)"FileTransfer_getSourceMachineId(FileTransfer self) -> EString"},
	 { (char *)"FileTransfer_setSourceMachineId", (PyCFunction) _wrap_FileTransfer_setSourceMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setSourceMachineId(FileTransfer self, EString _sourceMachineId)"},
	 { (char *)"FileTransfer_getDestinationMachineId", _wrap_FileTransfer_getDestinationMachineId, METH_VARARGS, (char *)"FileTransfer_getDestinationMachineId(FileTransfer self) -> EString"},
	 { (char *)"FileTransfer_setDestinationMachineId", (PyCFunction) _wrap_FileTransfer_setDestinationMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setDestinationMachineId(FileTransfer self, EString _destinationMachineId)"},
	 { (char *)"FileTransfer_getSourceFilePath", _wrap_FileTransfer_getSourceFilePath, METH_VARARGS, (char *)"FileTransfer_getSourceFilePath(FileTransfer self) -> EString"},
	 { (char *)"FileTransfer_setSourceFilePath", (PyCFunction) _wrap_FileTransfer_setSourceFilePath, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setSourceFilePath(FileTransfer self, EString _sourceFilePath)"},
	 { (char *)"FileTransfer_getDestinationFilePath", _wrap_FileTransfer_getDestinationFilePath, METH_VARARGS, (char *)"FileTransfer_getDestinationFilePath(FileTransfer self) -> EString"},
	 { (char *)"FileTransfer_setDestinationFilePath", (PyCFunction) _wrap_FileTransfer_setDestinationFilePath, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setDestinationFilePath(FileTransfer self, EString _destinationFilePath)"},
	 { (char *)"FileTransfer_getSize", _wrap_FileTransfer_getSize, METH_VARARGS, (char *)"FileTransfer_getSize(FileTransfer self) -> EBigInteger"},
	 { (char *)"FileTransfer_setSize", (PyCFunction) _wrap_FileTransfer_setSize, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setSize(FileTransfer self, EBigInteger _size)"},
	 { (char *)"FileTransfer_getStart_time", _wrap_FileTransfer_getStart_time, METH_VARARGS, (char *)"FileTransfer_getStart_time(FileTransfer self) -> ELong"},
	 { (char *)"FileTransfer_setStart_time", (PyCFunction) _wrap_FileTransfer_setStart_time, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setStart_time(FileTransfer self, ELong _start_time)"},
	 { (char *)"FileTransfer_getTrCommand", _wrap_FileTransfer_getTrCommand, METH_VARARGS, (char *)"FileTransfer_getTrCommand(FileTransfer self) -> TransferCommand"},
	 { (char *)"FileTransfer_setTrCommand", (PyCFunction) _wrap_FileTransfer_setTrCommand, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setTrCommand(FileTransfer self, TransferCommand _trCommand)"},
	 { (char *)"FileTransfer_getErrorMsg", _wrap_FileTransfer_getErrorMsg, METH_VARARGS, (char *)"FileTransfer_getErrorMsg(FileTransfer self) -> EString"},
	 { (char *)"FileTransfer_setErrorMsg", (PyCFunction) _wrap_FileTransfer_setErrorMsg, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_setErrorMsg(FileTransfer self, EString _errorMsg)"},
	 { (char *)"FileTransfer_eGet", (PyCFunction) _wrap_FileTransfer_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_eGet(FileTransfer self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"FileTransfer_eSet", (PyCFunction) _wrap_FileTransfer_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_eSet(FileTransfer self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"FileTransfer_eIsSet", (PyCFunction) _wrap_FileTransfer_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_eIsSet(FileTransfer self, EInt _featureID) -> EBoolean"},
	 { (char *)"FileTransfer_eUnset", (PyCFunction) _wrap_FileTransfer_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"FileTransfer_eUnset(FileTransfer self, EInt _featureID)"},
	 { (char *)"FileTransfer__eClass", _wrap_FileTransfer__eClass, METH_VARARGS, (char *)"FileTransfer__eClass(FileTransfer self) -> EClass_ptr"},
	 { (char *)"FileTransfer_swigregister", FileTransfer_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_HeadOfFileOptions", _wrap_new_HeadOfFileOptions, METH_VARARGS, (char *)"new_HeadOfFileOptions() -> HeadOfFileOptions"},
	 { (char *)"delete_HeadOfFileOptions", _wrap_delete_HeadOfFileOptions, METH_VARARGS, (char *)"delete_HeadOfFileOptions(HeadOfFileOptions self)"},
	 { (char *)"HeadOfFileOptions__initialize", _wrap_HeadOfFileOptions__initialize, METH_VARARGS, (char *)"HeadOfFileOptions__initialize(HeadOfFileOptions self)"},
	 { (char *)"HeadOfFileOptions_getNline", _wrap_HeadOfFileOptions_getNline, METH_VARARGS, (char *)"HeadOfFileOptions_getNline(HeadOfFileOptions self) -> EInt"},
	 { (char *)"HeadOfFileOptions_setNline", (PyCFunction) _wrap_HeadOfFileOptions_setNline, METH_VARARGS | METH_KEYWORDS, (char *)"HeadOfFileOptions_setNline(HeadOfFileOptions self, EInt _nline)"},
	 { (char *)"HeadOfFileOptions_eGet", (PyCFunction) _wrap_HeadOfFileOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"HeadOfFileOptions_eGet(HeadOfFileOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"HeadOfFileOptions_eSet", (PyCFunction) _wrap_HeadOfFileOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"HeadOfFileOptions_eSet(HeadOfFileOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"HeadOfFileOptions_eIsSet", (PyCFunction) _wrap_HeadOfFileOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"HeadOfFileOptions_eIsSet(HeadOfFileOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"HeadOfFileOptions_eUnset", (PyCFunction) _wrap_HeadOfFileOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"HeadOfFileOptions_eUnset(HeadOfFileOptions self, EInt _featureID)"},
	 { (char *)"HeadOfFileOptions__eClass", _wrap_HeadOfFileOptions__eClass, METH_VARARGS, (char *)"HeadOfFileOptions__eClass(HeadOfFileOptions self) -> EClass_ptr"},
	 { (char *)"HeadOfFileOptions_swigregister", HeadOfFileOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LsDirOptions", _wrap_new_LsDirOptions, METH_VARARGS, (char *)"new_LsDirOptions() -> LsDirOptions"},
	 { (char *)"delete_LsDirOptions", _wrap_delete_LsDirOptions, METH_VARARGS, (char *)"delete_LsDirOptions(LsDirOptions self)"},
	 { (char *)"LsDirOptions__initialize", _wrap_LsDirOptions__initialize, METH_VARARGS, (char *)"LsDirOptions__initialize(LsDirOptions self)"},
	 { (char *)"LsDirOptions_isLongFormat", _wrap_LsDirOptions_isLongFormat, METH_VARARGS, (char *)"LsDirOptions_isLongFormat(LsDirOptions self) -> EBoolean"},
	 { (char *)"LsDirOptions_setLongFormat", (PyCFunction) _wrap_LsDirOptions_setLongFormat, METH_VARARGS | METH_KEYWORDS, (char *)"LsDirOptions_setLongFormat(LsDirOptions self, EBoolean _longFormat)"},
	 { (char *)"LsDirOptions_isAllFiles", _wrap_LsDirOptions_isAllFiles, METH_VARARGS, (char *)"LsDirOptions_isAllFiles(LsDirOptions self) -> EBoolean"},
	 { (char *)"LsDirOptions_setAllFiles", (PyCFunction) _wrap_LsDirOptions_setAllFiles, METH_VARARGS | METH_KEYWORDS, (char *)"LsDirOptions_setAllFiles(LsDirOptions self, EBoolean _allFiles)"},
	 { (char *)"LsDirOptions_eGet", (PyCFunction) _wrap_LsDirOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"LsDirOptions_eGet(LsDirOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"LsDirOptions_eSet", (PyCFunction) _wrap_LsDirOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"LsDirOptions_eSet(LsDirOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"LsDirOptions_eIsSet", (PyCFunction) _wrap_LsDirOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"LsDirOptions_eIsSet(LsDirOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"LsDirOptions_eUnset", (PyCFunction) _wrap_LsDirOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"LsDirOptions_eUnset(LsDirOptions self, EInt _featureID)"},
	 { (char *)"LsDirOptions__eClass", _wrap_LsDirOptions__eClass, METH_VARARGS, (char *)"LsDirOptions__eClass(LsDirOptions self) -> EClass_ptr"},
	 { (char *)"LsDirOptions_swigregister", LsDirOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LsTransferOptions", _wrap_new_LsTransferOptions, METH_VARARGS, (char *)"new_LsTransferOptions() -> LsTransferOptions"},
	 { (char *)"delete_LsTransferOptions", _wrap_delete_LsTransferOptions, METH_VARARGS, (char *)"delete_LsTransferOptions(LsTransferOptions self)"},
	 { (char *)"LsTransferOptions__initialize", _wrap_LsTransferOptions__initialize, METH_VARARGS, (char *)"LsTransferOptions__initialize(LsTransferOptions self)"},
	 { (char *)"LsTransferOptions_getTransferId", _wrap_LsTransferOptions_getTransferId, METH_VARARGS, (char *)"LsTransferOptions_getTransferId(LsTransferOptions self) -> EString"},
	 { (char *)"LsTransferOptions_setTransferId", (PyCFunction) _wrap_LsTransferOptions_setTransferId, METH_VARARGS | METH_KEYWORDS, (char *)"LsTransferOptions_setTransferId(LsTransferOptions self, EString _transferId)"},
	 { (char *)"LsTransferOptions_getFromMachineId", _wrap_LsTransferOptions_getFromMachineId, METH_VARARGS, (char *)"LsTransferOptions_getFromMachineId(LsTransferOptions self) -> EString"},
	 { (char *)"LsTransferOptions_setFromMachineId", (PyCFunction) _wrap_LsTransferOptions_setFromMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"LsTransferOptions_setFromMachineId(LsTransferOptions self, EString _fromMachineId)"},
	 { (char *)"LsTransferOptions_getUserId", _wrap_LsTransferOptions_getUserId, METH_VARARGS, (char *)"LsTransferOptions_getUserId(LsTransferOptions self) -> EString"},
	 { (char *)"LsTransferOptions_setUserId", (PyCFunction) _wrap_LsTransferOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"LsTransferOptions_setUserId(LsTransferOptions self, EString _userId)"},
	 { (char *)"LsTransferOptions_getStatus", _wrap_LsTransferOptions_getStatus, METH_VARARGS, (char *)"LsTransferOptions_getStatus(LsTransferOptions self) -> Status"},
	 { (char *)"LsTransferOptions_setStatus", (PyCFunction) _wrap_LsTransferOptions_setStatus, METH_VARARGS | METH_KEYWORDS, (char *)"LsTransferOptions_setStatus(LsTransferOptions self, Status _status)"},
	 { (char *)"LsTransferOptions_eGet", (PyCFunction) _wrap_LsTransferOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"LsTransferOptions_eGet(LsTransferOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"LsTransferOptions_eSet", (PyCFunction) _wrap_LsTransferOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"LsTransferOptions_eSet(LsTransferOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"LsTransferOptions_eIsSet", (PyCFunction) _wrap_LsTransferOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"LsTransferOptions_eIsSet(LsTransferOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"LsTransferOptions_eUnset", (PyCFunction) _wrap_LsTransferOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"LsTransferOptions_eUnset(LsTransferOptions self, EInt _featureID)"},
	 { (char *)"LsTransferOptions__eClass", _wrap_LsTransferOptions__eClass, METH_VARARGS, (char *)"LsTransferOptions__eClass(LsTransferOptions self) -> EClass_ptr"},
	 { (char *)"LsTransferOptions_swigregister", LsTransferOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_StopTransferOptions", _wrap_new_StopTransferOptions, METH_VARARGS, (char *)"new_StopTransferOptions() -> StopTransferOptions"},
	 { (char *)"delete_StopTransferOptions", _wrap_delete_StopTransferOptions, METH_VARARGS, (char *)"delete_StopTransferOptions(StopTransferOptions self)"},
	 { (char *)"StopTransferOptions__initialize", _wrap_StopTransferOptions__initialize, METH_VARARGS, (char *)"StopTransferOptions__initialize(StopTransferOptions self)"},
	 { (char *)"StopTransferOptions_getTransferId", _wrap_StopTransferOptions_getTransferId, METH_VARARGS, (char *)"StopTransferOptions_getTransferId(StopTransferOptions self) -> EString"},
	 { (char *)"StopTransferOptions_setTransferId", (PyCFunction) _wrap_StopTransferOptions_setTransferId, METH_VARARGS | METH_KEYWORDS, (char *)"StopTransferOptions_setTransferId(StopTransferOptions self, EString _transferId)"},
	 { (char *)"StopTransferOptions_getFromMachineId", _wrap_StopTransferOptions_getFromMachineId, METH_VARARGS, (char *)"StopTransferOptions_getFromMachineId(StopTransferOptions self) -> EString"},
	 { (char *)"StopTransferOptions_setFromMachineId", (PyCFunction) _wrap_StopTransferOptions_setFromMachineId, METH_VARARGS | METH_KEYWORDS, (char *)"StopTransferOptions_setFromMachineId(StopTransferOptions self, EString _fromMachineId)"},
	 { (char *)"StopTransferOptions_getUserId", _wrap_StopTransferOptions_getUserId, METH_VARARGS, (char *)"StopTransferOptions_getUserId(StopTransferOptions self) -> EString"},
	 { (char *)"StopTransferOptions_setUserId", (PyCFunction) _wrap_StopTransferOptions_setUserId, METH_VARARGS | METH_KEYWORDS, (char *)"StopTransferOptions_setUserId(StopTransferOptions self, EString _userId)"},
	 { (char *)"StopTransferOptions_eGet", (PyCFunction) _wrap_StopTransferOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"StopTransferOptions_eGet(StopTransferOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"StopTransferOptions_eSet", (PyCFunction) _wrap_StopTransferOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"StopTransferOptions_eSet(StopTransferOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"StopTransferOptions_eIsSet", (PyCFunction) _wrap_StopTransferOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"StopTransferOptions_eIsSet(StopTransferOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"StopTransferOptions_eUnset", (PyCFunction) _wrap_StopTransferOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"StopTransferOptions_eUnset(StopTransferOptions self, EInt _featureID)"},
	 { (char *)"StopTransferOptions__eClass", _wrap_StopTransferOptions__eClass, METH_VARARGS, (char *)"StopTransferOptions__eClass(StopTransferOptions self) -> EClass_ptr"},
	 { (char *)"StopTransferOptions_swigregister", StopTransferOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TailOfFileOptions", _wrap_new_TailOfFileOptions, METH_VARARGS, (char *)"new_TailOfFileOptions() -> TailOfFileOptions"},
	 { (char *)"delete_TailOfFileOptions", _wrap_delete_TailOfFileOptions, METH_VARARGS, (char *)"delete_TailOfFileOptions(TailOfFileOptions self)"},
	 { (char *)"TailOfFileOptions__initialize", _wrap_TailOfFileOptions__initialize, METH_VARARGS, (char *)"TailOfFileOptions__initialize(TailOfFileOptions self)"},
	 { (char *)"TailOfFileOptions_getNline", _wrap_TailOfFileOptions_getNline, METH_VARARGS, (char *)"TailOfFileOptions_getNline(TailOfFileOptions self) -> EInt"},
	 { (char *)"TailOfFileOptions_setNline", (PyCFunction) _wrap_TailOfFileOptions_setNline, METH_VARARGS | METH_KEYWORDS, (char *)"TailOfFileOptions_setNline(TailOfFileOptions self, EInt _nline)"},
	 { (char *)"TailOfFileOptions_eGet", (PyCFunction) _wrap_TailOfFileOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"TailOfFileOptions_eGet(TailOfFileOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"TailOfFileOptions_eSet", (PyCFunction) _wrap_TailOfFileOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"TailOfFileOptions_eSet(TailOfFileOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"TailOfFileOptions_eIsSet", (PyCFunction) _wrap_TailOfFileOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"TailOfFileOptions_eIsSet(TailOfFileOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"TailOfFileOptions_eUnset", (PyCFunction) _wrap_TailOfFileOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"TailOfFileOptions_eUnset(TailOfFileOptions self, EInt _featureID)"},
	 { (char *)"TailOfFileOptions__eClass", _wrap_TailOfFileOptions__eClass, METH_VARARGS, (char *)"TailOfFileOptions__eClass(TailOfFileOptions self) -> EClass_ptr"},
	 { (char *)"TailOfFileOptions_swigregister", TailOfFileOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_RmFileOptions", _wrap_new_RmFileOptions, METH_VARARGS, (char *)"new_RmFileOptions() -> RmFileOptions"},
	 { (char *)"delete_RmFileOptions", _wrap_delete_RmFileOptions, METH_VARARGS, (char *)"delete_RmFileOptions(RmFileOptions self)"},
	 { (char *)"RmFileOptions__initialize", _wrap_RmFileOptions__initialize, METH_VARARGS, (char *)"RmFileOptions__initialize(RmFileOptions self)"},
	 { (char *)"RmFileOptions_isIsRecursive", _wrap_RmFileOptions_isIsRecursive, METH_VARARGS, (char *)"RmFileOptions_isIsRecursive(RmFileOptions self) -> EBoolean"},
	 { (char *)"RmFileOptions_setIsRecursive", (PyCFunction) _wrap_RmFileOptions_setIsRecursive, METH_VARARGS | METH_KEYWORDS, (char *)"RmFileOptions_setIsRecursive(RmFileOptions self, EBoolean _isRecursive)"},
	 { (char *)"RmFileOptions_eGet", (PyCFunction) _wrap_RmFileOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"RmFileOptions_eGet(RmFileOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"RmFileOptions_eSet", (PyCFunction) _wrap_RmFileOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"RmFileOptions_eSet(RmFileOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"RmFileOptions_eIsSet", (PyCFunction) _wrap_RmFileOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"RmFileOptions_eIsSet(RmFileOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"RmFileOptions_eUnset", (PyCFunction) _wrap_RmFileOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"RmFileOptions_eUnset(RmFileOptions self, EInt _featureID)"},
	 { (char *)"RmFileOptions__eClass", _wrap_RmFileOptions__eClass, METH_VARARGS, (char *)"RmFileOptions__eClass(RmFileOptions self) -> EClass_ptr"},
	 { (char *)"RmFileOptions_swigregister", RmFileOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CreateDirOptions", _wrap_new_CreateDirOptions, METH_VARARGS, (char *)"new_CreateDirOptions() -> CreateDirOptions"},
	 { (char *)"delete_CreateDirOptions", _wrap_delete_CreateDirOptions, METH_VARARGS, (char *)"delete_CreateDirOptions(CreateDirOptions self)"},
	 { (char *)"CreateDirOptions__initialize", _wrap_CreateDirOptions__initialize, METH_VARARGS, (char *)"CreateDirOptions__initialize(CreateDirOptions self)"},
	 { (char *)"CreateDirOptions_isIsRecursive", _wrap_CreateDirOptions_isIsRecursive, METH_VARARGS, (char *)"CreateDirOptions_isIsRecursive(CreateDirOptions self) -> EBoolean"},
	 { (char *)"CreateDirOptions_setIsRecursive", (PyCFunction) _wrap_CreateDirOptions_setIsRecursive, METH_VARARGS | METH_KEYWORDS, (char *)"CreateDirOptions_setIsRecursive(CreateDirOptions self, EBoolean _isRecursive)"},
	 { (char *)"CreateDirOptions_eGet", (PyCFunction) _wrap_CreateDirOptions_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"CreateDirOptions_eGet(CreateDirOptions self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"CreateDirOptions_eSet", (PyCFunction) _wrap_CreateDirOptions_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"CreateDirOptions_eSet(CreateDirOptions self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"CreateDirOptions_eIsSet", (PyCFunction) _wrap_CreateDirOptions_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"CreateDirOptions_eIsSet(CreateDirOptions self, EInt _featureID) -> EBoolean"},
	 { (char *)"CreateDirOptions_eUnset", (PyCFunction) _wrap_CreateDirOptions_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"CreateDirOptions_eUnset(CreateDirOptions self, EInt _featureID)"},
	 { (char *)"CreateDirOptions__eClass", _wrap_CreateDirOptions__eClass, METH_VARARGS, (char *)"CreateDirOptions__eClass(CreateDirOptions self) -> EClass_ptr"},
	 { (char *)"CreateDirOptions_swigregister", CreateDirOptions_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_DirEntry", _wrap_new_DirEntry, METH_VARARGS, (char *)"new_DirEntry() -> DirEntry"},
	 { (char *)"delete_DirEntry", _wrap_delete_DirEntry, METH_VARARGS, (char *)"delete_DirEntry(DirEntry self)"},
	 { (char *)"DirEntry__initialize", _wrap_DirEntry__initialize, METH_VARARGS, (char *)"DirEntry__initialize(DirEntry self)"},
	 { (char *)"DirEntry_getPath", _wrap_DirEntry_getPath, METH_VARARGS, (char *)"DirEntry_getPath(DirEntry self) -> EString"},
	 { (char *)"DirEntry_setPath", (PyCFunction) _wrap_DirEntry_setPath, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_setPath(DirEntry self, EString _path)"},
	 { (char *)"DirEntry_getOwner", _wrap_DirEntry_getOwner, METH_VARARGS, (char *)"DirEntry_getOwner(DirEntry self) -> EString"},
	 { (char *)"DirEntry_setOwner", (PyCFunction) _wrap_DirEntry_setOwner, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_setOwner(DirEntry self, EString _owner)"},
	 { (char *)"DirEntry_getGroup", _wrap_DirEntry_getGroup, METH_VARARGS, (char *)"DirEntry_getGroup(DirEntry self) -> EString"},
	 { (char *)"DirEntry_setGroup", (PyCFunction) _wrap_DirEntry_setGroup, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_setGroup(DirEntry self, EString _group)"},
	 { (char *)"DirEntry_getPerms", _wrap_DirEntry_getPerms, METH_VARARGS, (char *)"DirEntry_getPerms(DirEntry self) -> EInt"},
	 { (char *)"DirEntry_setPerms", (PyCFunction) _wrap_DirEntry_setPerms, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_setPerms(DirEntry self, EInt _perms)"},
	 { (char *)"DirEntry_getSize", _wrap_DirEntry_getSize, METH_VARARGS, (char *)"DirEntry_getSize(DirEntry self) -> EBigInteger"},
	 { (char *)"DirEntry_setSize", (PyCFunction) _wrap_DirEntry_setSize, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_setSize(DirEntry self, EBigInteger _size)"},
	 { (char *)"DirEntry_getCreationTime", _wrap_DirEntry_getCreationTime, METH_VARARGS, (char *)"DirEntry_getCreationTime(DirEntry self) -> EString"},
	 { (char *)"DirEntry_setCreationTime", (PyCFunction) _wrap_DirEntry_setCreationTime, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_setCreationTime(DirEntry self, EString _creationTime)"},
	 { (char *)"DirEntry_getType", _wrap_DirEntry_getType, METH_VARARGS, (char *)"DirEntry_getType(DirEntry self) -> FileType"},
	 { (char *)"DirEntry_setType", (PyCFunction) _wrap_DirEntry_setType, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_setType(DirEntry self, FileType _type)"},
	 { (char *)"DirEntry_eGet", (PyCFunction) _wrap_DirEntry_eGet, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_eGet(DirEntry self, EInt _featureID, EBoolean _resolve) -> EJavaObject"},
	 { (char *)"DirEntry_eSet", (PyCFunction) _wrap_DirEntry_eSet, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_eSet(DirEntry self, EInt _featureID, EJavaObject _newValue)"},
	 { (char *)"DirEntry_eIsSet", (PyCFunction) _wrap_DirEntry_eIsSet, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_eIsSet(DirEntry self, EInt _featureID) -> EBoolean"},
	 { (char *)"DirEntry_eUnset", (PyCFunction) _wrap_DirEntry_eUnset, METH_VARARGS | METH_KEYWORDS, (char *)"DirEntry_eUnset(DirEntry self, EInt _featureID)"},
	 { (char *)"DirEntry__eClass", _wrap_DirEntry__eClass, METH_VARARGS, (char *)"DirEntry__eClass(DirEntry self) -> EClass_ptr"},
	 { (char *)"DirEntry_swigregister", DirEntry_swigregister, METH_VARARGS, NULL},
	 { (char *)"connect", (PyCFunction) _wrap_connect, METH_VARARGS | METH_KEYWORDS, (char *)"connect(string userId, string password, Session session, ConnectOptions connectOpt = UMS_Data::ConnectOptions()) -> int"},
	 { (char *)"connect_m", (PyCFunction) _wrap_connect_m, METH_VARARGS | METH_KEYWORDS, (char *)"connect_m(ListUsers users, Session session, ConnectOptions connectOpt = UMS_Data::ConnectOptions()) -> int"},
	 { (char *)"reconnect", _wrap_reconnect, METH_VARARGS, (char *)"\n"
		"reconnect(string userId, string password, string sessionId, Session session) -> int\n"
		"reconnect(ListUsers users, string sessionId, Session session) -> int\n"
		""},
	 { (char *)"close", (PyCFunction) _wrap_close, METH_VARARGS | METH_KEYWORDS, (char *)"close(string sessionKey) -> int"},
	 { (char *)"addUser", (PyCFunction) _wrap_addUser, METH_VARARGS | METH_KEYWORDS, (char *)"addUser(string sessionKey, User newUser) -> int"},
	 { (char *)"updateUser", (PyCFunction) _wrap_updateUser, METH_VARARGS | METH_KEYWORDS, (char *)"updateUser(string sessionKey, User user) -> int"},
	 { (char *)"deleteUser", (PyCFunction) _wrap_deleteUser, METH_VARARGS | METH_KEYWORDS, (char *)"deleteUser(string sessionKey, string userId) -> int"},
	 { (char *)"changePassword", (PyCFunction) _wrap_changePassword, METH_VARARGS | METH_KEYWORDS, (char *)"changePassword(string userId, string password, string passwordNew) -> int"},
	 { (char *)"resetPassword", (PyCFunction) _wrap_resetPassword, METH_VARARGS | METH_KEYWORDS, (char *)"resetPassword(string sessionKey, string userId, string tmpPassword) -> int"},
	 { (char *)"addMachine", (PyCFunction) _wrap_addMachine, METH_VARARGS | METH_KEYWORDS, (char *)"addMachine(string sessionKey, Machine newMachine) -> int"},
	 { (char *)"updateMachine", (PyCFunction) _wrap_updateMachine, METH_VARARGS | METH_KEYWORDS, (char *)"updateMachine(string sessionKey, Machine machine) -> int"},
	 { (char *)"deleteMachine", (PyCFunction) _wrap_deleteMachine, METH_VARARGS | METH_KEYWORDS, (char *)"deleteMachine(string sessionKey, string machineId) -> int"},
	 { (char *)"addLocalAccount", (PyCFunction) _wrap_addLocalAccount, METH_VARARGS | METH_KEYWORDS, (char *)"addLocalAccount(string sessionKey, LocalAccount newLocalAccount) -> int"},
	 { (char *)"updateLocalAccount", (PyCFunction) _wrap_updateLocalAccount, METH_VARARGS | METH_KEYWORDS, (char *)"updateLocalAccount(string sessionKey, LocalAccount localAccount) -> int"},
	 { (char *)"deleteLocalAccount", (PyCFunction) _wrap_deleteLocalAccount, METH_VARARGS | METH_KEYWORDS, (char *)"deleteLocalAccount(string sessionKey, string userId, string machineId) -> int"},
	 { (char *)"saveConfiguration", (PyCFunction) _wrap_saveConfiguration, METH_VARARGS | METH_KEYWORDS, (char *)"saveConfiguration(string sessionKey, Configuration config) -> int"},
	 { (char *)"restoreConfiguration", (PyCFunction) _wrap_restoreConfiguration, METH_VARARGS | METH_KEYWORDS, (char *)"restoreConfiguration(string sessionKey, string filePath) -> int"},
	 { (char *)"configureOption", (PyCFunction) _wrap_configureOption, METH_VARARGS | METH_KEYWORDS, (char *)"configureOption(string sessionKey, OptionValue optionValue) -> int"},
	 { (char *)"configureDefaultOption", (PyCFunction) _wrap_configureDefaultOption, METH_VARARGS | METH_KEYWORDS, (char *)"configureDefaultOption(string sessionKey, OptionValue optionValue) -> int"},
	 { (char *)"listSessions", (PyCFunction) _wrap_listSessions, METH_VARARGS | METH_KEYWORDS, (char *)"listSessions(string sessionKey, ListSessionOptions options = UMS_Data::ListSessionOptions()) -> int"},
	 { (char *)"listLocalAccounts", (PyCFunction) _wrap_listLocalAccounts, METH_VARARGS | METH_KEYWORDS, (char *)"listLocalAccounts(string sessionKey, ListLocalAccOptions options = UMS_Data::ListLocalAccOptions()) -> int"},
	 { (char *)"listMachines", (PyCFunction) _wrap_listMachines, METH_VARARGS | METH_KEYWORDS, (char *)"listMachines(string sessionKey, ListMachineOptions options = UMS_Data::ListMachineOptions()) -> int"},
	 { (char *)"listHistoryCmd", (PyCFunction) _wrap_listHistoryCmd, METH_VARARGS | METH_KEYWORDS, (char *)"listHistoryCmd(string sessionKey, ListCmdOptions options = UMS_Data::ListCmdOptions()) -> int"},
	 { (char *)"listOptions", (PyCFunction) _wrap_listOptions, METH_VARARGS | METH_KEYWORDS, (char *)"listOptions(string sessionKey, ListOptOptions options = UMS_Data::ListOptOptions()) -> int"},
	 { (char *)"listUsers", (PyCFunction) _wrap_listUsers, METH_VARARGS | METH_KEYWORDS, (char *)"listUsers(string sessionKey, ListUsersOptions listOptions = UMS_Data::ListUsersOptions()) -> int"},
	 { (char *)"addAuthSystem", (PyCFunction) _wrap_addAuthSystem, METH_VARARGS | METH_KEYWORDS, (char *)"addAuthSystem(string sessionKey, AuthSystem newAuthSys) -> int"},
	 { (char *)"updateAuthSystem", (PyCFunction) _wrap_updateAuthSystem, METH_VARARGS | METH_KEYWORDS, (char *)"updateAuthSystem(string sessionKey, AuthSystem AuthSys) -> int"},
	 { (char *)"deleteAuthSystem", (PyCFunction) _wrap_deleteAuthSystem, METH_VARARGS | METH_KEYWORDS, (char *)"deleteAuthSystem(string sessionKey, string authSystemId) -> int"},
	 { (char *)"listAuthSystems", (PyCFunction) _wrap_listAuthSystems, METH_VARARGS | METH_KEYWORDS, (char *)"listAuthSystems(string sessionKey, ListAuthSysOptions options = UMS_Data::ListAuthSysOptions()) -> int"},
	 { (char *)"addAuthAccount", (PyCFunction) _wrap_addAuthAccount, METH_VARARGS | METH_KEYWORDS, (char *)"addAuthAccount(string sessionKey, AuthAccount authAccount) -> int"},
	 { (char *)"updateAuthAccount", (PyCFunction) _wrap_updateAuthAccount, METH_VARARGS | METH_KEYWORDS, (char *)"updateAuthAccount(string sessionKey, AuthAccount authenAccount) -> int"},
	 { (char *)"deleteAuthAccount", (PyCFunction) _wrap_deleteAuthAccount, METH_VARARGS | METH_KEYWORDS, (char *)"deleteAuthAccount(string sessionKey, string authSystemId, string userIdOption = \"\") -> int"},
	 { (char *)"listAuthAccounts", (PyCFunction) _wrap_listAuthAccounts, METH_VARARGS | METH_KEYWORDS, (char *)"listAuthAccounts(string sessionKey, ListAuthAccOptions options = UMS_Data::ListAuthAccOptions()) -> int"},
	 { (char *)"vishnuInitialize", (PyCFunction) _wrap_vishnuInitialize, METH_VARARGS | METH_KEYWORDS, (char *)"vishnuInitialize(char cfg) -> int"},
	 { (char *)"vishnuFinalize", _wrap_vishnuFinalize, METH_VARARGS, (char *)"vishnuFinalize()"},
	 { (char *)"delete_VishnuException", _wrap_delete_VishnuException, METH_VARARGS, (char *)"delete_VishnuException(VishnuException self)"},
	 { (char *)"VishnuException_getTypeI", _wrap_VishnuException_getTypeI, METH_VARARGS, (char *)"VishnuException_getTypeI(VishnuException self) -> ExceptionType"},
	 { (char *)"VishnuException_getTypeS", _wrap_VishnuException_getTypeS, METH_VARARGS, (char *)"VishnuException_getTypeS(VishnuException self) -> string"},
	 { (char *)"VishnuException_what", _wrap_VishnuException_what, METH_VARARGS, (char *)"VishnuException_what(VishnuException self) -> char"},
	 { (char *)"VishnuException_getMsg", _wrap_VishnuException_getMsg, METH_VARARGS, (char *)"VishnuException_getMsg(VishnuException self) -> string"},
	 { (char *)"VishnuException_getMsgComp", _wrap_VishnuException_getMsgComp, METH_VARARGS, (char *)"VishnuException_getMsgComp(VishnuException self) -> string"},
	 { (char *)"VishnuException_setType", (PyCFunction) _wrap_VishnuException_setType, METH_VARARGS | METH_KEYWORDS, (char *)"VishnuException_setType(VishnuException self, ExceptionType t)"},
	 { (char *)"VishnuException_setMsgComp", (PyCFunction) _wrap_VishnuException_setMsgComp, METH_VARARGS | METH_KEYWORDS, (char *)"VishnuException_setMsgComp(VishnuException self, string m)"},
	 { (char *)"VishnuException_setMsg", (PyCFunction) _wrap_VishnuException_setMsg, METH_VARARGS | METH_KEYWORDS, (char *)"VishnuException_setMsg(VishnuException self, int val)"},
	 { (char *)"VishnuException_appendMsgComp", (PyCFunction) _wrap_VishnuException_appendMsgComp, METH_VARARGS | METH_KEYWORDS, (char *)"VishnuException_appendMsgComp(VishnuException self, string s)"},
	 { (char *)"VishnuException_getMsgI", _wrap_VishnuException_getMsgI, METH_VARARGS, (char *)"VishnuException_getMsgI(VishnuException self) -> int"},
	 { (char *)"VishnuException_initMsg", _wrap_VishnuException_initMsg, METH_VARARGS, (char *)"VishnuException_initMsg(VishnuException self)"},
	 { (char *)"VishnuException_buildExceptionString", _wrap_VishnuException_buildExceptionString, METH_VARARGS, (char *)"VishnuException_buildExceptionString(VishnuException self) -> string"},
	 { (char *)"VishnuException_swigregister", VishnuException_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_UserException", _wrap_new_UserException, METH_VARARGS, (char *)"\n"
		"UserException()\n"
		"UserException(UserException e)\n"
		"new_UserException(int msg, string msgComp = \"\") -> UserException\n"
		""},
	 { (char *)"delete_UserException", _wrap_delete_UserException, METH_VARARGS, (char *)"delete_UserException(UserException self)"},
	 { (char *)"UserException_getTypeS", _wrap_UserException_getTypeS, METH_VARARGS, (char *)"UserException_getTypeS(UserException self) -> string"},
	 { (char *)"UserException_getMsg", _wrap_UserException_getMsg, METH_VARARGS, (char *)"UserException_getMsg(UserException self) -> string"},
	 { (char *)"UserException_swigregister", UserException_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SystemException", _wrap_new_SystemException, METH_VARARGS, (char *)"\n"
		"SystemException()\n"
		"SystemException(SystemException e)\n"
		"new_SystemException(int msg, string msgComp = \"\") -> SystemException\n"
		""},
	 { (char *)"delete_SystemException", _wrap_delete_SystemException, METH_VARARGS, (char *)"delete_SystemException(SystemException self)"},
	 { (char *)"SystemException_getMsg", _wrap_SystemException_getMsg, METH_VARARGS, (char *)"SystemException_getMsg(SystemException self) -> string"},
	 { (char *)"SystemException_getTypeS", _wrap_SystemException_getTypeS, METH_VARARGS, (char *)"SystemException_getTypeS(SystemException self) -> string"},
	 { (char *)"SystemException_initMsg", _wrap_SystemException_initMsg, METH_VARARGS, (char *)"SystemException_initMsg(SystemException self)"},
	 { (char *)"SystemException_swigregister", SystemException_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_UMSVishnuException", _wrap_new_UMSVishnuException, METH_VARARGS, (char *)"\n"
		"UMSVishnuException()\n"
		"UMSVishnuException(UMSVishnuException e)\n"
		"new_UMSVishnuException(int msg, string msgComp = \"\") -> UMSVishnuException\n"
		""},
	 { (char *)"delete_UMSVishnuException", _wrap_delete_UMSVishnuException, METH_VARARGS, (char *)"delete_UMSVishnuException(UMSVishnuException self)"},
	 { (char *)"UMSVishnuException_initMsg", _wrap_UMSVishnuException_initMsg, METH_VARARGS, (char *)"UMSVishnuException_initMsg(UMSVishnuException self)"},
	 { (char *)"UMSVishnuException_swigregister", UMSVishnuException_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_TMSVishnuException", _wrap_new_TMSVishnuException, METH_VARARGS, (char *)"\n"
		"TMSVishnuException()\n"
		"TMSVishnuException(TMSVishnuException e)\n"
		"new_TMSVishnuException(int msg, string msgComp = \"\") -> TMSVishnuException\n"
		""},
	 { (char *)"delete_TMSVishnuException", _wrap_delete_TMSVishnuException, METH_VARARGS, (char *)"delete_TMSVishnuException(TMSVishnuException self)"},
	 { (char *)"TMSVishnuException_initMsg", _wrap_TMSVishnuException_initMsg, METH_VARARGS, (char *)"TMSVishnuException_initMsg(TMSVishnuException self)"},
	 { (char *)"TMSVishnuException_swigregister", TMSVishnuException_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_IMSVishnuException", _wrap_new_IMSVishnuException, METH_VARARGS, (char *)"\n"
		"IMSVishnuException()\n"
		"IMSVishnuException(IMSVishnuException e)\n"
		"new_IMSVishnuException(int msg, string msgComp = \"\") -> IMSVishnuException\n"
		""},
	 { (char *)"delete_IMSVishnuException", _wrap_delete_IMSVishnuException, METH_VARARGS, (char *)"delete_IMSVishnuException(IMSVishnuException self)"},
	 { (char *)"IMSVishnuException_initMsg", _wrap_IMSVishnuException_initMsg, METH_VARARGS, (char *)"IMSVishnuException_initMsg(IMSVishnuException self)"},
	 { (char *)"IMSVishnuException_swigregister", IMSVishnuException_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_FMSVishnuException", _wrap_new_FMSVishnuException, METH_VARARGS, (char *)"\n"
		"FMSVishnuException()\n"
		"FMSVishnuException(FMSVishnuException e)\n"
		"new_FMSVishnuException(int msg, string msgComp = \"\") -> FMSVishnuException\n"
		""},
	 { (char *)"delete_FMSVishnuException", _wrap_delete_FMSVishnuException, METH_VARARGS, (char *)"delete_FMSVishnuException(FMSVishnuException self)"},
	 { (char *)"FMSVishnuException_initMsg", _wrap_FMSVishnuException_initMsg, METH_VARARGS, (char *)"FMSVishnuException_initMsg(FMSVishnuException self)"},
	 { (char *)"FMSVishnuException_swigregister", FMSVishnuException_swigregister, METH_VARARGS, NULL},
	 { (char *)"submitJob", (PyCFunction) _wrap_submitJob, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"submitJob(string sessionKey, string machineId, string scriptFilePath, \n"
		"    Job jobInfo, SubmitOptions options = TMS_Data::SubmitOptions()) -> int\n"
		""},
	 { (char *)"addWork", (PyCFunction) _wrap_addWork, METH_VARARGS | METH_KEYWORDS, (char *)"addWork(string sessionKey, Work newWork, AddWorkOptions options = TMS_Data::AddWorkOptions()) -> int"},
	 { (char *)"cancelJob", (PyCFunction) _wrap_cancelJob, METH_VARARGS | METH_KEYWORDS, (char *)"cancelJob(string sessionKey, string machineId, string jobId) -> int"},
	 { (char *)"getJobInfo", (PyCFunction) _wrap_getJobInfo, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"getJobInfo(string sessionKey, string machineId, string jobId, \n"
		"    Job jobInfos) -> int\n"
		""},
	 { (char *)"listJobs", (PyCFunction) _wrap_listJobs, METH_VARARGS | METH_KEYWORDS, (char *)"listJobs(string sessionKey, string machineId, ListJobsOptions options = TMS_Data::ListJobsOptions()) -> int"},
	 { (char *)"getJobProgress", (PyCFunction) _wrap_getJobProgress, METH_VARARGS | METH_KEYWORDS, (char *)"getJobProgress(string sessionKey, string machineId, ProgressOptions options = TMS_Data::ProgressOptions()) -> int"},
	 { (char *)"listQueues", (PyCFunction) _wrap_listQueues, METH_VARARGS | METH_KEYWORDS, (char *)"listQueues(string sessionKey, string machineId, string queueName = std::string()) -> int"},
	 { (char *)"getJobOutput", (PyCFunction) _wrap_getJobOutput, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"getJobOutput(string sessionKey, string machineId, string jobId, \n"
		"    JobResult outputInfo, string outDir = std::string()) -> int\n"
		""},
	 { (char *)"getCompletedJobsOutput", (PyCFunction) _wrap_getCompletedJobsOutput, METH_VARARGS | METH_KEYWORDS, (char *)"getCompletedJobsOutput(string sessionKey, string machineId, string outDir = std::string()) -> int"},
	 { (char *)"exportCommands", (PyCFunction) _wrap_exportCommands, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"exportCommands(string sessionKey, string oldSessionId, string filename, \n"
		"    ExportOp op) -> int\n"
		""},
	 { (char *)"getMetricCurrentValue", (PyCFunction) _wrap_getMetricCurrentValue, METH_VARARGS | METH_KEYWORDS, (char *)"getMetricCurrentValue(string sessionKey, string machineId, CurMetricOp op) -> int"},
	 { (char *)"getMetricHistory", (PyCFunction) _wrap_getMetricHistory, METH_VARARGS | METH_KEYWORDS, (char *)"getMetricHistory(string sessionKey, string machineId, MetricHistOp op) -> int"},
	 { (char *)"getProcesses", (PyCFunction) _wrap_getProcesses, METH_VARARGS | METH_KEYWORDS, (char *)"getProcesses(string sessionKey, ProcessOp op) -> int"},
	 { (char *)"setSystemInfo", (PyCFunction) _wrap_setSystemInfo, METH_VARARGS | METH_KEYWORDS, (char *)"setSystemInfo(string sessionKey, SystemInfo sys) -> int"},
	 { (char *)"setSystemThreshold", (PyCFunction) _wrap_setSystemThreshold, METH_VARARGS | METH_KEYWORDS, (char *)"setSystemThreshold(string sessionKey, Threshold threshold) -> int"},
	 { (char *)"getSystemThreshold", (PyCFunction) _wrap_getSystemThreshold, METH_VARARGS | METH_KEYWORDS, (char *)"getSystemThreshold(string sessionKey, ThresholdOp op) -> int"},
	 { (char *)"defineUserIdentifier", (PyCFunction) _wrap_defineUserIdentifier, METH_VARARGS | METH_KEYWORDS, (char *)"defineUserIdentifier(string sessionKey, string fmt) -> int"},
	 { (char *)"defineMachineIdentifier", (PyCFunction) _wrap_defineMachineIdentifier, METH_VARARGS | METH_KEYWORDS, (char *)"defineMachineIdentifier(string sessionKey, string fmt) -> int"},
	 { (char *)"defineJobIdentifier", (PyCFunction) _wrap_defineJobIdentifier, METH_VARARGS | METH_KEYWORDS, (char *)"defineJobIdentifier(string sessionKey, string fmt) -> int"},
	 { (char *)"defineTransferIdentifier", (PyCFunction) _wrap_defineTransferIdentifier, METH_VARARGS | METH_KEYWORDS, (char *)"defineTransferIdentifier(string sessionKey, string fmt) -> int"},
	 { (char *)"defineAuthIdentifier", (PyCFunction) _wrap_defineAuthIdentifier, METH_VARARGS | METH_KEYWORDS, (char *)"defineAuthIdentifier(string sessionKey, string fmt) -> int"},
	 { (char *)"defineWorkIdentifier", (PyCFunction) _wrap_defineWorkIdentifier, METH_VARARGS | METH_KEYWORDS, (char *)"defineWorkIdentifier(string sessionKey, string fmt) -> int"},
	 { (char *)"loadShed", (PyCFunction) _wrap_loadShed, METH_VARARGS | METH_KEYWORDS, (char *)"loadShed(string sessionKey, string machineId, LoadShedType loadShedType) -> int"},
	 { (char *)"setUpdateFrequency", (PyCFunction) _wrap_setUpdateFrequency, METH_VARARGS | METH_KEYWORDS, (char *)"setUpdateFrequency(string sessionKey, int freq) -> int"},
	 { (char *)"getUpdateFrequency", (PyCFunction) _wrap_getUpdateFrequency, METH_VARARGS | METH_KEYWORDS, (char *)"getUpdateFrequency(string sessionKey) -> int"},
	 { (char *)"stop", (PyCFunction) _wrap_stop, METH_VARARGS | METH_KEYWORDS, (char *)"stop(string sessionKey, Process proc) -> int"},
	 { (char *)"getSystemInfo", (PyCFunction) _wrap_getSystemInfo, METH_VARARGS | METH_KEYWORDS, (char *)"getSystemInfo(string sessionKey, SysInfoOp op) -> int"},
	 { (char *)"restart", (PyCFunction) _wrap_restart, METH_VARARGS | METH_KEYWORDS, (char *)"restart(string sessionKey, string machineId, RestartOp op) -> int"},
	 { (char *)"createFile", (PyCFunction) _wrap_createFile, METH_VARARGS | METH_KEYWORDS, (char *)"createFile(string sessionKey, string path) -> int"},
	 { (char *)"chGrp", (PyCFunction) _wrap_chGrp, METH_VARARGS | METH_KEYWORDS, (char *)"chGrp(string sessionKey, string group, string path) -> int"},
	 { (char *)"chMod", (PyCFunction) _wrap_chMod, METH_VARARGS | METH_KEYWORDS, (char *)"chMod(string sessionKey, mode_t mode, string path) -> int"},
	 { (char *)"copyFile", (PyCFunction) _wrap_copyFile, METH_VARARGS | METH_KEYWORDS, (char *)"copyFile(string sessionKey, string src, string dest, CpFileOptions options = FMS_Data::CpFileOptions()) -> int"},
	 { (char *)"copyAsyncFile", (PyCFunction) _wrap_copyAsyncFile, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"copyAsyncFile(string sessionKey, string src, string dest, FileTransfer transferInfo, \n"
		"    CpFileOptions options = FMS_Data::CpFileOptions()) -> int\n"
		""},
	 { (char *)"headOfFile", (PyCFunction) _wrap_headOfFile, METH_VARARGS | METH_KEYWORDS, (char *)"headOfFile(string sessionKey, string path, HeadOfFileOptions options = FMS_Data::HeadOfFileOptions()) -> int"},
	 { (char *)"contentOfFile", (PyCFunction) _wrap_contentOfFile, METH_VARARGS | METH_KEYWORDS, (char *)"contentOfFile(string sessionKey, string path) -> int"},
	 { (char *)"listDir", (PyCFunction) _wrap_listDir, METH_VARARGS | METH_KEYWORDS, (char *)"listDir(string sessionKey, string path, LsDirOptions options = FMS_Data::LsDirOptions()) -> int"},
	 { (char *)"createDir", (PyCFunction) _wrap_createDir, METH_VARARGS | METH_KEYWORDS, (char *)"createDir(string sessionKey, string path, CreateDirOptions options = FMS_Data::CreateDirOptions()) -> int"},
	 { (char *)"moveFile", (PyCFunction) _wrap_moveFile, METH_VARARGS | METH_KEYWORDS, (char *)"moveFile(string sessionKey, string src, string dest, CpFileOptions options = FMS_Data::CpFileOptions()) -> int"},
	 { (char *)"moveAsyncFile", (PyCFunction) _wrap_moveAsyncFile, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"moveAsyncFile(string sessionKey, string src, string dest, FileTransfer transferInfo, \n"
		"    CpFileOptions options = FMS_Data::CpFileOptions()) -> int\n"
		""},
	 { (char *)"removeFile", (PyCFunction) _wrap_removeFile, METH_VARARGS | METH_KEYWORDS, (char *)"removeFile(string sessionKey, string path, RmFileOptions options = FMS_Data::RmFileOptions()) -> int"},
	 { (char *)"removeDir", (PyCFunction) _wrap_removeDir, METH_VARARGS | METH_KEYWORDS, (char *)"removeDir(string sessionKey, string path) -> int"},
	 { (char *)"tailOfFile", (PyCFunction) _wrap_tailOfFile, METH_VARARGS | METH_KEYWORDS, (char *)"tailOfFile(string sessionKey, string path, TailOfFileOptions options = FMS_Data::TailOfFileOptions()) -> int"},
	 { (char *)"getFileInfo", (PyCFunction) _wrap_getFileInfo, METH_VARARGS | METH_KEYWORDS, (char *)"getFileInfo(string sessionKey, string path, FileStat filesInfo) -> int"},
	 { (char *)"stopFileTransfer", (PyCFunction) _wrap_stopFileTransfer, METH_VARARGS | METH_KEYWORDS, (char *)"stopFileTransfer(string sessionKey, StopTransferOptions options = FMS_Data::StopTransferOptions()) -> int"},
	 { (char *)"listFileTransfers", (PyCFunction) _wrap_listFileTransfers, METH_VARARGS | METH_KEYWORDS, (char *)"listFileTransfers(string sessionKey, LsTransferOptions options = FMS_Data::LsTransferOptions()) -> int"},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_IMS_Data__CurMetricOpTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::CurMetricOp *) x));
}
static void *_p_IMS_Data__SysInfoOpTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::SysInfoOp *) x));
}
static void *_p_IMS_Data__SystemInfoTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::SystemInfo *) x));
}
static void *_p_UMS_Data__AuthAccountTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::AuthAccount *) x));
}
static void *_p_UMS_Data__LocalAccountTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::LocalAccount *) x));
}
static void *_p_IMS_Data__ProcessOpTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::ProcessOp *) x));
}
static void *_p_UMS_Data__ConfigurationTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::Configuration *) x));
}
static void *_p_TMS_Data__JobTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::Job *) x));
}
static void *_p_UMS_Data__MachineTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::Machine *) x));
}
static void *_p_IMS_Data__ThresholdTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::Threshold *) x));
}
static void *_p_UMS_Data__AuthSystemTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::AuthSystem *) x));
}
static void *_p_TMS_Data__WorkTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::Work *) x));
}
static void *_p_IMS_Data__ProcessTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::Process *) x));
}
static void *_p_IMS_Data__ThresholdOpTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::ThresholdOp *) x));
}
static void *_p_UMS_Data__CommandTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::Command *) x));
}
static void *_p_UMS_Data__OptionValueTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::OptionValue *) x));
}
static void *_p_TMS_Data__QueueTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::Queue *) x));
}
static void *_p_IMS_Data__MetricHistOpTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::MetricHistOp *) x));
}
static void *_p_IMS_Data__ExportOpTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::ExportOp *) x));
}
static void *_p_FMS_Data__FileStatTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::FileStat *) x));
}
static void *_p_TMS_Data__AddWorkOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::AddWorkOptions *) x));
}
static void *_p_TMS_Data__SubmitOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::SubmitOptions *) x));
}
static void *_p_TMS_Data__ProgressOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::ProgressOptions *) x));
}
static void *_p_TMS_Data__ListJobsOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::ListJobsOptions *) x));
}
static void *_p_UMS_Data__ListAuthAccOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::ListAuthAccOptions *) x));
}
static void *_p_UMS_Data__ListAuthSysOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::ListAuthSysOptions *) x));
}
static void *_p_UMS_Data__ConnectOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::ConnectOptions *) x));
}
static void *_p_UMS_Data__ListUsersOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::ListUsersOptions *) x));
}
static void *_p_UMS_Data__ListSessionOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::ListSessionOptions *) x));
}
static void *_p_UMS_Data__ListCmdOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::ListCmdOptions *) x));
}
static void *_p_UMS_Data__ListLocalAccOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::ListLocalAccOptions *) x));
}
static void *_p_UMS_Data__ListMachineOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::ListMachineOptions *) x));
}
static void *_p_UMS_Data__ListOptOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::ListOptOptions *) x));
}
static void *_p_FMS_Data__CpFileOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::CpFileOptions *) x));
}
static void *_p_FMS_Data__HeadOfFileOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::HeadOfFileOptions *) x));
}
static void *_p_FMS_Data__LsDirOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::LsDirOptions *) x));
}
static void *_p_FMS_Data__LsTransferOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::LsTransferOptions *) x));
}
static void *_p_FMS_Data__StopTransferOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::StopTransferOptions *) x));
}
static void *_p_FMS_Data__TailOfFileOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::TailOfFileOptions *) x));
}
static void *_p_FMS_Data__RmFileOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::RmFileOptions *) x));
}
static void *_p_FMS_Data__CreateDirOptionsTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::CreateDirOptions *) x));
}
static void *_p_TMS_Data__LoadCriterionTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::LoadCriterion *) x));
}
static void *_p_UMS_Data__SessionTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::Session *) x));
}
static void *_p_IMS_Data__MetricTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::Metric *) x));
}
static void *_p_UMS_Data__UserTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((UMS_Data::User *) x));
}
static void *_p_FMS_Data__FileTransferTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::FileTransfer *) x));
}
static void *_p_TMS_Data__JobResultTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::JobResult *) x));
}
static void *_p_FMS_Data__DirEntryTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((FMS_Data::DirEntry *) x));
}
static void *_p_IMS_Data__RestartOpTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((IMS_Data::RestartOp *) x));
}
static void *_p_TMS_Data__ProgressionTo_p_ecore__EObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ecore::EObject *)  ((TMS_Data::Progression *) x));
}
static void *_p_UMSVishnuExceptionTo_p_UserException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((UserException *)  ((UMSVishnuException *) x));
}
static void *_p_TMSVishnuExceptionTo_p_UserException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((UserException *)  ((TMSVishnuException *) x));
}
static void *_p_IMSVishnuExceptionTo_p_UserException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((UserException *)  ((IMSVishnuException *) x));
}
static void *_p_FMSVishnuExceptionTo_p_UserException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((UserException *)  ((FMSVishnuException *) x));
}
static void *_p_VishnuExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *)  ((VishnuException *) x));
}
static void *_p_UserExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (VishnuException *) ((UserException *) x));
}
static void *_p_SystemExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (VishnuException *) ((SystemException *) x));
}
static void *_p_UMSVishnuExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (VishnuException *)(UserException *) ((UMSVishnuException *) x));
}
static void *_p_TMSVishnuExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (VishnuException *)(UserException *) ((TMSVishnuException *) x));
}
static void *_p_IMSVishnuExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (VishnuException *)(UserException *) ((IMSVishnuException *) x));
}
static void *_p_FMSVishnuExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (VishnuException *)(UserException *) ((FMSVishnuException *) x));
}
static void *_p_UserExceptionTo_p_VishnuException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((VishnuException *)  ((UserException *) x));
}
static void *_p_SystemExceptionTo_p_VishnuException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((VishnuException *)  ((SystemException *) x));
}
static void *_p_UMSVishnuExceptionTo_p_VishnuException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((VishnuException *) (UserException *) ((UMSVishnuException *) x));
}
static void *_p_TMSVishnuExceptionTo_p_VishnuException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((VishnuException *) (UserException *) ((TMSVishnuException *) x));
}
static void *_p_IMSVishnuExceptionTo_p_VishnuException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((VishnuException *) (UserException *) ((IMSVishnuException *) x));
}
static void *_p_FMSVishnuExceptionTo_p_VishnuException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((VishnuException *) (UserException *) ((FMSVishnuException *) x));
}
static swig_type_info _swigt__p_ExceptionType = {"_p_ExceptionType", "ExceptionType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMSVishnuException = {"_p_FMSVishnuException", "FMSVishnuException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__CpFileOptions = {"_p_FMS_Data__CpFileOptions", "FMS_Data::CpFileOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__CreateDirOptions = {"_p_FMS_Data__CreateDirOptions", "FMS_Data::CreateDirOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__DirEntry = {"_p_FMS_Data__DirEntry", "FMS_Data::DirEntry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__DirEntryList = {"_p_FMS_Data__DirEntryList", "FMS_Data::DirEntryList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__FileStat = {"_p_FMS_Data__FileStat", "FMS_Data::FileStat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__FileTransfer = {"_p_FMS_Data__FileTransfer", "FMS_Data::FileTransfer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__FileTransferList = {"_p_FMS_Data__FileTransferList", "FMS_Data::FileTransferList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__HeadOfFileOptions = {"_p_FMS_Data__HeadOfFileOptions", "FMS_Data::HeadOfFileOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__LsDirOptions = {"_p_FMS_Data__LsDirOptions", "FMS_Data::LsDirOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__LsTransferOptions = {"_p_FMS_Data__LsTransferOptions", "FMS_Data::LsTransferOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__RmFileOptions = {"_p_FMS_Data__RmFileOptions", "FMS_Data::RmFileOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__StopTransferOptions = {"_p_FMS_Data__StopTransferOptions", "FMS_Data::StopTransferOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FMS_Data__TailOfFileOptions = {"_p_FMS_Data__TailOfFileOptions", "FMS_Data::TailOfFileOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMSVishnuException = {"_p_IMSVishnuException", "IMSVishnuException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__CurMetricOp = {"_p_IMS_Data__CurMetricOp", "IMS_Data::CurMetricOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__ExportOp = {"_p_IMS_Data__ExportOp", "IMS_Data::ExportOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__ListMetric = {"_p_IMS_Data__ListMetric", "IMS_Data::ListMetric *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__ListProcesses = {"_p_IMS_Data__ListProcesses", "IMS_Data::ListProcesses *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__ListSysInfo = {"_p_IMS_Data__ListSysInfo", "IMS_Data::ListSysInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__ListThreshold = {"_p_IMS_Data__ListThreshold", "IMS_Data::ListThreshold *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__Metric = {"_p_IMS_Data__Metric", "IMS_Data::Metric *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__MetricHistOp = {"_p_IMS_Data__MetricHistOp", "IMS_Data::MetricHistOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__Process = {"_p_IMS_Data__Process", "IMS_Data::Process *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__ProcessOp = {"_p_IMS_Data__ProcessOp", "IMS_Data::ProcessOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__RestartOp = {"_p_IMS_Data__RestartOp", "IMS_Data::RestartOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__SysInfoOp = {"_p_IMS_Data__SysInfoOp", "IMS_Data::SysInfoOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__SystemInfo = {"_p_IMS_Data__SystemInfo", "IMS_Data::SystemInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__Threshold = {"_p_IMS_Data__Threshold", "IMS_Data::Threshold *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IMS_Data__ThresholdOp = {"_p_IMS_Data__ThresholdOp", "IMS_Data::ThresholdOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SystemException = {"_p_SystemException", "SystemException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMSVishnuException = {"_p_TMSVishnuException", "TMSVishnuException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__AddWorkOptions = {"_p_TMS_Data__AddWorkOptions", "TMS_Data::AddWorkOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__Job = {"_p_TMS_Data__Job", "TMS_Data::Job *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__JobResult = {"_p_TMS_Data__JobResult", "TMS_Data::JobResult *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__ListJobResults = {"_p_TMS_Data__ListJobResults", "TMS_Data::ListJobResults *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__ListJobs = {"_p_TMS_Data__ListJobs", "TMS_Data::ListJobs *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__ListJobsOptions = {"_p_TMS_Data__ListJobsOptions", "TMS_Data::ListJobsOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__ListProgression = {"_p_TMS_Data__ListProgression", "TMS_Data::ListProgression *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__ListQueues = {"_p_TMS_Data__ListQueues", "TMS_Data::ListQueues *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__LoadCriterion = {"_p_TMS_Data__LoadCriterion", "::TMS_Data::LoadCriterion_ptr|TMS_Data::LoadCriterion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__ProgressOptions = {"_p_TMS_Data__ProgressOptions", "TMS_Data::ProgressOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__Progression = {"_p_TMS_Data__Progression", "TMS_Data::Progression *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__Queue = {"_p_TMS_Data__Queue", "TMS_Data::Queue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__SubmitOptions = {"_p_TMS_Data__SubmitOptions", "TMS_Data::SubmitOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TMS_Data__Work = {"_p_TMS_Data__Work", "TMS_Data::Work *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMSVishnuException = {"_p_UMSVishnuException", "UMSVishnuException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__AuthAccount = {"_p_UMS_Data__AuthAccount", "UMS_Data::AuthAccount *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__AuthSystem = {"_p_UMS_Data__AuthSystem", "UMS_Data::AuthSystem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__Command = {"_p_UMS_Data__Command", "UMS_Data::Command *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__Configuration = {"_p_UMS_Data__Configuration", "UMS_Data::Configuration *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ConnectOptions = {"_p_UMS_Data__ConnectOptions", "UMS_Data::ConnectOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListAuthAccOptions = {"_p_UMS_Data__ListAuthAccOptions", "UMS_Data::ListAuthAccOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListAuthAccounts = {"_p_UMS_Data__ListAuthAccounts", "UMS_Data::ListAuthAccounts *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListAuthSysOptions = {"_p_UMS_Data__ListAuthSysOptions", "UMS_Data::ListAuthSysOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListAuthSystems = {"_p_UMS_Data__ListAuthSystems", "UMS_Data::ListAuthSystems *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListCmdOptions = {"_p_UMS_Data__ListCmdOptions", "UMS_Data::ListCmdOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListCommands = {"_p_UMS_Data__ListCommands", "UMS_Data::ListCommands *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListLocalAccOptions = {"_p_UMS_Data__ListLocalAccOptions", "UMS_Data::ListLocalAccOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListLocalAccounts = {"_p_UMS_Data__ListLocalAccounts", "UMS_Data::ListLocalAccounts *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListMachineOptions = {"_p_UMS_Data__ListMachineOptions", "UMS_Data::ListMachineOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListMachines = {"_p_UMS_Data__ListMachines", "UMS_Data::ListMachines *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListOptOptions = {"_p_UMS_Data__ListOptOptions", "UMS_Data::ListOptOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListOptionsValues = {"_p_UMS_Data__ListOptionsValues", "UMS_Data::ListOptionsValues *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListSessionOptions = {"_p_UMS_Data__ListSessionOptions", "UMS_Data::ListSessionOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListSessions = {"_p_UMS_Data__ListSessions", "UMS_Data::ListSessions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListUsers = {"_p_UMS_Data__ListUsers", "UMS_Data::ListUsers *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__ListUsersOptions = {"_p_UMS_Data__ListUsersOptions", "UMS_Data::ListUsersOptions *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__LocalAccount = {"_p_UMS_Data__LocalAccount", "UMS_Data::LocalAccount *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__Machine = {"_p_UMS_Data__Machine", "UMS_Data::Machine *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__OptionValue = {"_p_UMS_Data__OptionValue", "UMS_Data::OptionValue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__Session = {"_p_UMS_Data__Session", "UMS_Data::Session *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UMS_Data__User = {"_p_UMS_Data__User", "UMS_Data::User *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_UserException = {"_p_UserException", "UserException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VishnuException = {"_p_VishnuException", "VishnuException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p___ecorecpp__mapping__any = {"_p___ecorecpp__mapping__any", "::ecore::EJavaObject *|ecore::EJavaObject *|::ecorecpp::mapping::any *|ecore::any *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *|ecore::EBooleanObject *|ecore::EBoolean *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *|ecore::EChar *|ecore::ECharacterObject *|ecorecpp::mapping::type_traits::char_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "ecore::EDoubleObject *|double *|ecore::EDouble *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecore__EClass = {"_p_ecore__EClass", "::ecore::EClass_ptr|ecore::EClass *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecore__EObject = {"_p_ecore__EObject", "ecore::EObject *|::ecore::EObject_ptr", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecore__EOperation = {"_p_ecore__EOperation", "ecore::EOperation *|::ecore::EOperation_ptr", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecore__EReference = {"_p_ecore__EReference", "ecore::EReference *|::ecore::EReference_ptr", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecore__EStructuralFeature = {"_p_ecore__EStructuralFeature", "ecore::EStructuralFeature *|::ecore::EStructuralFeature_ptr", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecorecpp__mapping__EListT___UMS_Data__AuthAccount_t = {"_p_ecorecpp__mapping__EListT___UMS_Data__AuthAccount_t", "::ecorecpp::mapping::EList< ::UMS_Data::AuthAccount > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecorecpp__mapping__EListT___UMS_Data__AuthSystem_t = {"_p_ecorecpp__mapping__EListT___UMS_Data__AuthSystem_t", "::ecorecpp::mapping::EList< ::UMS_Data::AuthSystem > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecorecpp__mapping__EListT___UMS_Data__LocalAccount_t = {"_p_ecorecpp__mapping__EListT___UMS_Data__LocalAccount_t", "::ecorecpp::mapping::EList< ::UMS_Data::LocalAccount > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecorecpp__mapping__EListT___UMS_Data__Machine_t = {"_p_ecorecpp__mapping__EListT___UMS_Data__Machine_t", "::ecorecpp::mapping::EList< ::UMS_Data::Machine > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ecorecpp__mapping__EListT___UMS_Data__User_t = {"_p_ecorecpp__mapping__EListT___UMS_Data__User_t", "::ecorecpp::mapping::EList< ::UMS_Data::User > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *|ecore::EFloatObject *|ecore::EFloat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "IMS_Data::LoadShedType *|IMS_Data::ExportType *|IMS_Data::SeDType *|UMS_Data::AuthType *|TMS_Data::LoadType *|int *|ecore::EResourceSet *|ecore::EFeatureMap *|UMS_Data::EncryptionMethod *|ecore::EInvocationTargetException *|FMS_Data::TransferCommand *|ecore::EEnumerator *|ecore::EFeatureMapEntry *|ecore::EIntegerObject *|ecore::EDiagnosticChain *|ecore::EInt *|TMS_Data::JobPriority *|TMS_Data::QueuePriority *|IMS_Data::ProcessState *|ecore::EResource *|FMS_Data::Status *|TMS_Data::JobStatus *|FMS_Data::FileType *|UMS_Data::StatusType *|UMS_Data::CommandStatusType *|UMS_Data::SessionCloseType *|UMS_Data::PrivilegeType *|IMS_Data::MetricType *|TMS_Data::QueueStatus *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_double = {"_p_long_double", "long double *|ecore::EBigDecimal *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "ecore::ELongObject *|long long *|ecore::ELong *|ecore::EBigInteger *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "ecore::EShortObject *|short *|ecore::EShort *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__exception = {"_p_std__exception", "std::exception *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT___ecorecpp__mapping__any_t = {"_p_std__listT___ecorecpp__mapping__any_t", "std::list< ::ecorecpp::mapping::any > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_ecore__EObject_p_t = {"_p_std__listT_ecore__EObject_p_t", "std::list< ::ecore::EObject_ptr > *|std::list< ecore::EObject * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *|ecore::EString *|ecorecpp::mapping::type_traits::string_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__stringstream = {"_p_std__stringstream", "std::stringstream *|ecorecpp::mapping::type_traits::stringstream_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t = {"_p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t", "ecore::EByteArray *|std::vector< unsigned char,std::allocator< unsigned char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_time_t = {"_p_time_t", "time_t *|ecore::EDate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|ecore::EByteObject *|ecore::EByte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *|mode_t *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ExceptionType,
  &_swigt__p_FMSVishnuException,
  &_swigt__p_FMS_Data__CpFileOptions,
  &_swigt__p_FMS_Data__CreateDirOptions,
  &_swigt__p_FMS_Data__DirEntry,
  &_swigt__p_FMS_Data__DirEntryList,
  &_swigt__p_FMS_Data__FileStat,
  &_swigt__p_FMS_Data__FileTransfer,
  &_swigt__p_FMS_Data__FileTransferList,
  &_swigt__p_FMS_Data__HeadOfFileOptions,
  &_swigt__p_FMS_Data__LsDirOptions,
  &_swigt__p_FMS_Data__LsTransferOptions,
  &_swigt__p_FMS_Data__RmFileOptions,
  &_swigt__p_FMS_Data__StopTransferOptions,
  &_swigt__p_FMS_Data__TailOfFileOptions,
  &_swigt__p_IMSVishnuException,
  &_swigt__p_IMS_Data__CurMetricOp,
  &_swigt__p_IMS_Data__ExportOp,
  &_swigt__p_IMS_Data__ListMetric,
  &_swigt__p_IMS_Data__ListProcesses,
  &_swigt__p_IMS_Data__ListSysInfo,
  &_swigt__p_IMS_Data__ListThreshold,
  &_swigt__p_IMS_Data__Metric,
  &_swigt__p_IMS_Data__MetricHistOp,
  &_swigt__p_IMS_Data__Process,
  &_swigt__p_IMS_Data__ProcessOp,
  &_swigt__p_IMS_Data__RestartOp,
  &_swigt__p_IMS_Data__SysInfoOp,
  &_swigt__p_IMS_Data__SystemInfo,
  &_swigt__p_IMS_Data__Threshold,
  &_swigt__p_IMS_Data__ThresholdOp,
  &_swigt__p_SystemException,
  &_swigt__p_TMSVishnuException,
  &_swigt__p_TMS_Data__AddWorkOptions,
  &_swigt__p_TMS_Data__Job,
  &_swigt__p_TMS_Data__JobResult,
  &_swigt__p_TMS_Data__ListJobResults,
  &_swigt__p_TMS_Data__ListJobs,
  &_swigt__p_TMS_Data__ListJobsOptions,
  &_swigt__p_TMS_Data__ListProgression,
  &_swigt__p_TMS_Data__ListQueues,
  &_swigt__p_TMS_Data__LoadCriterion,
  &_swigt__p_TMS_Data__ProgressOptions,
  &_swigt__p_TMS_Data__Progression,
  &_swigt__p_TMS_Data__Queue,
  &_swigt__p_TMS_Data__SubmitOptions,
  &_swigt__p_TMS_Data__Work,
  &_swigt__p_UMSVishnuException,
  &_swigt__p_UMS_Data__AuthAccount,
  &_swigt__p_UMS_Data__AuthSystem,
  &_swigt__p_UMS_Data__Command,
  &_swigt__p_UMS_Data__Configuration,
  &_swigt__p_UMS_Data__ConnectOptions,
  &_swigt__p_UMS_Data__ListAuthAccOptions,
  &_swigt__p_UMS_Data__ListAuthAccounts,
  &_swigt__p_UMS_Data__ListAuthSysOptions,
  &_swigt__p_UMS_Data__ListAuthSystems,
  &_swigt__p_UMS_Data__ListCmdOptions,
  &_swigt__p_UMS_Data__ListCommands,
  &_swigt__p_UMS_Data__ListLocalAccOptions,
  &_swigt__p_UMS_Data__ListLocalAccounts,
  &_swigt__p_UMS_Data__ListMachineOptions,
  &_swigt__p_UMS_Data__ListMachines,
  &_swigt__p_UMS_Data__ListOptOptions,
  &_swigt__p_UMS_Data__ListOptionsValues,
  &_swigt__p_UMS_Data__ListSessionOptions,
  &_swigt__p_UMS_Data__ListSessions,
  &_swigt__p_UMS_Data__ListUsers,
  &_swigt__p_UMS_Data__ListUsersOptions,
  &_swigt__p_UMS_Data__LocalAccount,
  &_swigt__p_UMS_Data__Machine,
  &_swigt__p_UMS_Data__OptionValue,
  &_swigt__p_UMS_Data__Session,
  &_swigt__p_UMS_Data__User,
  &_swigt__p_UserException,
  &_swigt__p_VishnuException,
  &_swigt__p___ecorecpp__mapping__any,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_ecore__EClass,
  &_swigt__p_ecore__EObject,
  &_swigt__p_ecore__EOperation,
  &_swigt__p_ecore__EReference,
  &_swigt__p_ecore__EStructuralFeature,
  &_swigt__p_ecorecpp__mapping__EListT___UMS_Data__AuthAccount_t,
  &_swigt__p_ecorecpp__mapping__EListT___UMS_Data__AuthSystem_t,
  &_swigt__p_ecorecpp__mapping__EListT___UMS_Data__LocalAccount_t,
  &_swigt__p_ecorecpp__mapping__EListT___UMS_Data__Machine_t,
  &_swigt__p_ecorecpp__mapping__EListT___UMS_Data__User_t,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_long_double,
  &_swigt__p_long_long,
  &_swigt__p_p_char,
  &_swigt__p_short,
  &_swigt__p_std__exception,
  &_swigt__p_std__listT___ecorecpp__mapping__any_t,
  &_swigt__p_std__listT_ecore__EObject_p_t,
  &_swigt__p_std__string,
  &_swigt__p_std__stringstream,
  &_swigt__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_time_t,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
};

static swig_cast_info _swigc__p_ExceptionType[] = {  {&_swigt__p_ExceptionType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMSVishnuException[] = {  {&_swigt__p_FMSVishnuException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__CpFileOptions[] = {  {&_swigt__p_FMS_Data__CpFileOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__CreateDirOptions[] = {  {&_swigt__p_FMS_Data__CreateDirOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__DirEntry[] = {  {&_swigt__p_FMS_Data__DirEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__DirEntryList[] = {  {&_swigt__p_FMS_Data__DirEntryList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__FileStat[] = {  {&_swigt__p_FMS_Data__FileStat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__FileTransfer[] = {  {&_swigt__p_FMS_Data__FileTransfer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__FileTransferList[] = {  {&_swigt__p_FMS_Data__FileTransferList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__HeadOfFileOptions[] = {  {&_swigt__p_FMS_Data__HeadOfFileOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__LsDirOptions[] = {  {&_swigt__p_FMS_Data__LsDirOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__LsTransferOptions[] = {  {&_swigt__p_FMS_Data__LsTransferOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__RmFileOptions[] = {  {&_swigt__p_FMS_Data__RmFileOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__StopTransferOptions[] = {  {&_swigt__p_FMS_Data__StopTransferOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FMS_Data__TailOfFileOptions[] = {  {&_swigt__p_FMS_Data__TailOfFileOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMSVishnuException[] = {  {&_swigt__p_IMSVishnuException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__CurMetricOp[] = {  {&_swigt__p_IMS_Data__CurMetricOp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__ExportOp[] = {  {&_swigt__p_IMS_Data__ExportOp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__ListMetric[] = {  {&_swigt__p_IMS_Data__ListMetric, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__ListProcesses[] = {  {&_swigt__p_IMS_Data__ListProcesses, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__ListSysInfo[] = {  {&_swigt__p_IMS_Data__ListSysInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__ListThreshold[] = {  {&_swigt__p_IMS_Data__ListThreshold, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__Metric[] = {  {&_swigt__p_IMS_Data__Metric, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__MetricHistOp[] = {  {&_swigt__p_IMS_Data__MetricHistOp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__Process[] = {  {&_swigt__p_IMS_Data__Process, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__ProcessOp[] = {  {&_swigt__p_IMS_Data__ProcessOp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__RestartOp[] = {  {&_swigt__p_IMS_Data__RestartOp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__SysInfoOp[] = {  {&_swigt__p_IMS_Data__SysInfoOp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__SystemInfo[] = {  {&_swigt__p_IMS_Data__SystemInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__Threshold[] = {  {&_swigt__p_IMS_Data__Threshold, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IMS_Data__ThresholdOp[] = {  {&_swigt__p_IMS_Data__ThresholdOp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SystemException[] = {  {&_swigt__p_SystemException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMSVishnuException[] = {  {&_swigt__p_TMSVishnuException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__AddWorkOptions[] = {  {&_swigt__p_TMS_Data__AddWorkOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__Job[] = {  {&_swigt__p_TMS_Data__Job, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__JobResult[] = {  {&_swigt__p_TMS_Data__JobResult, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__ListJobResults[] = {  {&_swigt__p_TMS_Data__ListJobResults, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__ListJobs[] = {  {&_swigt__p_TMS_Data__ListJobs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__ListJobsOptions[] = {  {&_swigt__p_TMS_Data__ListJobsOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__ListProgression[] = {  {&_swigt__p_TMS_Data__ListProgression, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__ListQueues[] = {  {&_swigt__p_TMS_Data__ListQueues, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__LoadCriterion[] = {  {&_swigt__p_TMS_Data__LoadCriterion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__ProgressOptions[] = {  {&_swigt__p_TMS_Data__ProgressOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__Progression[] = {  {&_swigt__p_TMS_Data__Progression, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__Queue[] = {  {&_swigt__p_TMS_Data__Queue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__SubmitOptions[] = {  {&_swigt__p_TMS_Data__SubmitOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TMS_Data__Work[] = {  {&_swigt__p_TMS_Data__Work, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMSVishnuException[] = {  {&_swigt__p_UMSVishnuException, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__AuthAccount[] = {  {&_swigt__p_UMS_Data__AuthAccount, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__AuthSystem[] = {  {&_swigt__p_UMS_Data__AuthSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__Command[] = {  {&_swigt__p_UMS_Data__Command, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__Configuration[] = {  {&_swigt__p_UMS_Data__Configuration, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ConnectOptions[] = {  {&_swigt__p_UMS_Data__ConnectOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListAuthAccOptions[] = {  {&_swigt__p_UMS_Data__ListAuthAccOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListAuthAccounts[] = {  {&_swigt__p_UMS_Data__ListAuthAccounts, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListAuthSysOptions[] = {  {&_swigt__p_UMS_Data__ListAuthSysOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListAuthSystems[] = {  {&_swigt__p_UMS_Data__ListAuthSystems, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListCmdOptions[] = {  {&_swigt__p_UMS_Data__ListCmdOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListCommands[] = {  {&_swigt__p_UMS_Data__ListCommands, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListLocalAccOptions[] = {  {&_swigt__p_UMS_Data__ListLocalAccOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListLocalAccounts[] = {  {&_swigt__p_UMS_Data__ListLocalAccounts, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListMachineOptions[] = {  {&_swigt__p_UMS_Data__ListMachineOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListMachines[] = {  {&_swigt__p_UMS_Data__ListMachines, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListOptOptions[] = {  {&_swigt__p_UMS_Data__ListOptOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListOptionsValues[] = {  {&_swigt__p_UMS_Data__ListOptionsValues, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListSessionOptions[] = {  {&_swigt__p_UMS_Data__ListSessionOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListSessions[] = {  {&_swigt__p_UMS_Data__ListSessions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListUsers[] = {  {&_swigt__p_UMS_Data__ListUsers, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__ListUsersOptions[] = {  {&_swigt__p_UMS_Data__ListUsersOptions, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__LocalAccount[] = {  {&_swigt__p_UMS_Data__LocalAccount, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__Machine[] = {  {&_swigt__p_UMS_Data__Machine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__OptionValue[] = {  {&_swigt__p_UMS_Data__OptionValue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__Session[] = {  {&_swigt__p_UMS_Data__Session, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UMS_Data__User[] = {  {&_swigt__p_UMS_Data__User, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_UserException[] = {  {&_swigt__p_UserException, 0, 0, 0},  {&_swigt__p_UMSVishnuException, _p_UMSVishnuExceptionTo_p_UserException, 0, 0},  {&_swigt__p_TMSVishnuException, _p_TMSVishnuExceptionTo_p_UserException, 0, 0},  {&_swigt__p_IMSVishnuException, _p_IMSVishnuExceptionTo_p_UserException, 0, 0},  {&_swigt__p_FMSVishnuException, _p_FMSVishnuExceptionTo_p_UserException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VishnuException[] = {  {&_swigt__p_VishnuException, 0, 0, 0},  {&_swigt__p_UserException, _p_UserExceptionTo_p_VishnuException, 0, 0},  {&_swigt__p_UMSVishnuException, _p_UMSVishnuExceptionTo_p_VishnuException, 0, 0},  {&_swigt__p_TMSVishnuException, _p_TMSVishnuExceptionTo_p_VishnuException, 0, 0},  {&_swigt__p_IMSVishnuException, _p_IMSVishnuExceptionTo_p_VishnuException, 0, 0},  {&_swigt__p_FMSVishnuException, _p_FMSVishnuExceptionTo_p_VishnuException, 0, 0},  {&_swigt__p_SystemException, _p_SystemExceptionTo_p_VishnuException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p___ecorecpp__mapping__any[] = {  {&_swigt__p___ecorecpp__mapping__any, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecore__EClass[] = {  {&_swigt__p_ecore__EClass, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecore__EObject[] = {  {&_swigt__p_IMS_Data__CurMetricOp, _p_IMS_Data__CurMetricOpTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__SysInfoOp, _p_IMS_Data__SysInfoOpTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__Metric, _p_IMS_Data__MetricTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__SystemInfo, _p_IMS_Data__SystemInfoTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__User, _p_UMS_Data__UserTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__AuthAccount, _p_UMS_Data__AuthAccountTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__LocalAccount, _p_UMS_Data__LocalAccountTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__ProcessOp, _p_IMS_Data__ProcessOpTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__Configuration, _p_UMS_Data__ConfigurationTo_p_ecore__EObject, 0, 0},  {&_swigt__p_TMS_Data__Job, _p_TMS_Data__JobTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__Machine, _p_UMS_Data__MachineTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__Threshold, _p_IMS_Data__ThresholdTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__AuthSystem, _p_UMS_Data__AuthSystemTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__Process, _p_IMS_Data__ProcessTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__ThresholdOp, _p_IMS_Data__ThresholdOpTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__Command, _p_UMS_Data__CommandTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__OptionValue, _p_UMS_Data__OptionValueTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__MetricHistOp, _p_IMS_Data__MetricHistOpTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__ExportOp, _p_IMS_Data__ExportOpTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__FileStat, _p_FMS_Data__FileStatTo_p_ecore__EObject, 0, 0},  {&_swigt__p_TMS_Data__Queue, _p_TMS_Data__QueueTo_p_ecore__EObject, 0, 0},  {&_swigt__p_TMS_Data__SubmitOptions, _p_TMS_Data__SubmitOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_TMS_Data__ProgressOptions, _p_TMS_Data__ProgressOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_TMS_Data__ListJobsOptions, _p_TMS_Data__ListJobsOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__ListAuthAccOptions, _p_UMS_Data__ListAuthAccOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__ListAuthSysOptions, _p_UMS_Data__ListAuthSysOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__ConnectOptions, _p_UMS_Data__ConnectOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__ListUsersOptions, _p_UMS_Data__ListUsersOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__ListSessionOptions, _p_UMS_Data__ListSessionOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__ListCmdOptions, _p_UMS_Data__ListCmdOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__ListLocalAccOptions, _p_UMS_Data__ListLocalAccOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__ListMachineOptions, _p_UMS_Data__ListMachineOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__ListOptOptions, _p_UMS_Data__ListOptOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_TMS_Data__AddWorkOptions, _p_TMS_Data__AddWorkOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__CpFileOptions, _p_FMS_Data__CpFileOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__HeadOfFileOptions, _p_FMS_Data__HeadOfFileOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__LsDirOptions, _p_FMS_Data__LsDirOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__LsTransferOptions, _p_FMS_Data__LsTransferOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__StopTransferOptions, _p_FMS_Data__StopTransferOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__TailOfFileOptions, _p_FMS_Data__TailOfFileOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__RmFileOptions, _p_FMS_Data__RmFileOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__CreateDirOptions, _p_FMS_Data__CreateDirOptionsTo_p_ecore__EObject, 0, 0},  {&_swigt__p_TMS_Data__LoadCriterion, _p_TMS_Data__LoadCriterionTo_p_ecore__EObject, 0, 0},  {&_swigt__p_UMS_Data__Session, _p_UMS_Data__SessionTo_p_ecore__EObject, 0, 0},  {&_swigt__p_ecore__EObject, 0, 0, 0},  {&_swigt__p_TMS_Data__Work, _p_TMS_Data__WorkTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__FileTransfer, _p_FMS_Data__FileTransferTo_p_ecore__EObject, 0, 0},  {&_swigt__p_TMS_Data__JobResult, _p_TMS_Data__JobResultTo_p_ecore__EObject, 0, 0},  {&_swigt__p_FMS_Data__DirEntry, _p_FMS_Data__DirEntryTo_p_ecore__EObject, 0, 0},  {&_swigt__p_IMS_Data__RestartOp, _p_IMS_Data__RestartOpTo_p_ecore__EObject, 0, 0},  {&_swigt__p_TMS_Data__Progression, _p_TMS_Data__ProgressionTo_p_ecore__EObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecore__EOperation[] = {  {&_swigt__p_ecore__EOperation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecore__EReference[] = {  {&_swigt__p_ecore__EReference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecore__EStructuralFeature[] = {  {&_swigt__p_ecore__EStructuralFeature, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecorecpp__mapping__EListT___UMS_Data__AuthAccount_t[] = {  {&_swigt__p_ecorecpp__mapping__EListT___UMS_Data__AuthAccount_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecorecpp__mapping__EListT___UMS_Data__AuthSystem_t[] = {  {&_swigt__p_ecorecpp__mapping__EListT___UMS_Data__AuthSystem_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecorecpp__mapping__EListT___UMS_Data__LocalAccount_t[] = {  {&_swigt__p_ecorecpp__mapping__EListT___UMS_Data__LocalAccount_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecorecpp__mapping__EListT___UMS_Data__Machine_t[] = {  {&_swigt__p_ecorecpp__mapping__EListT___UMS_Data__Machine_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ecorecpp__mapping__EListT___UMS_Data__User_t[] = {  {&_swigt__p_ecorecpp__mapping__EListT___UMS_Data__User_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_double[] = {  {&_swigt__p_long_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__exception[] = {  {&_swigt__p_std__exception, 0, 0, 0},  {&_swigt__p_VishnuException, _p_VishnuExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_UserException, _p_UserExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_UMSVishnuException, _p_UMSVishnuExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_TMSVishnuException, _p_TMSVishnuExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_IMSVishnuException, _p_IMSVishnuExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_FMSVishnuException, _p_FMSVishnuExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_SystemException, _p_SystemExceptionTo_p_std__exception, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT___ecorecpp__mapping__any_t[] = {  {&_swigt__p_std__listT___ecorecpp__mapping__any_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_ecore__EObject_p_t[] = {  {&_swigt__p_std__listT_ecore__EObject_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__stringstream[] = {  {&_swigt__p_std__stringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t[] = {  {&_swigt__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_time_t[] = {  {&_swigt__p_time_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ExceptionType,
  _swigc__p_FMSVishnuException,
  _swigc__p_FMS_Data__CpFileOptions,
  _swigc__p_FMS_Data__CreateDirOptions,
  _swigc__p_FMS_Data__DirEntry,
  _swigc__p_FMS_Data__DirEntryList,
  _swigc__p_FMS_Data__FileStat,
  _swigc__p_FMS_Data__FileTransfer,
  _swigc__p_FMS_Data__FileTransferList,
  _swigc__p_FMS_Data__HeadOfFileOptions,
  _swigc__p_FMS_Data__LsDirOptions,
  _swigc__p_FMS_Data__LsTransferOptions,
  _swigc__p_FMS_Data__RmFileOptions,
  _swigc__p_FMS_Data__StopTransferOptions,
  _swigc__p_FMS_Data__TailOfFileOptions,
  _swigc__p_IMSVishnuException,
  _swigc__p_IMS_Data__CurMetricOp,
  _swigc__p_IMS_Data__ExportOp,
  _swigc__p_IMS_Data__ListMetric,
  _swigc__p_IMS_Data__ListProcesses,
  _swigc__p_IMS_Data__ListSysInfo,
  _swigc__p_IMS_Data__ListThreshold,
  _swigc__p_IMS_Data__Metric,
  _swigc__p_IMS_Data__MetricHistOp,
  _swigc__p_IMS_Data__Process,
  _swigc__p_IMS_Data__ProcessOp,
  _swigc__p_IMS_Data__RestartOp,
  _swigc__p_IMS_Data__SysInfoOp,
  _swigc__p_IMS_Data__SystemInfo,
  _swigc__p_IMS_Data__Threshold,
  _swigc__p_IMS_Data__ThresholdOp,
  _swigc__p_SystemException,
  _swigc__p_TMSVishnuException,
  _swigc__p_TMS_Data__AddWorkOptions,
  _swigc__p_TMS_Data__Job,
  _swigc__p_TMS_Data__JobResult,
  _swigc__p_TMS_Data__ListJobResults,
  _swigc__p_TMS_Data__ListJobs,
  _swigc__p_TMS_Data__ListJobsOptions,
  _swigc__p_TMS_Data__ListProgression,
  _swigc__p_TMS_Data__ListQueues,
  _swigc__p_TMS_Data__LoadCriterion,
  _swigc__p_TMS_Data__ProgressOptions,
  _swigc__p_TMS_Data__Progression,
  _swigc__p_TMS_Data__Queue,
  _swigc__p_TMS_Data__SubmitOptions,
  _swigc__p_TMS_Data__Work,
  _swigc__p_UMSVishnuException,
  _swigc__p_UMS_Data__AuthAccount,
  _swigc__p_UMS_Data__AuthSystem,
  _swigc__p_UMS_Data__Command,
  _swigc__p_UMS_Data__Configuration,
  _swigc__p_UMS_Data__ConnectOptions,
  _swigc__p_UMS_Data__ListAuthAccOptions,
  _swigc__p_UMS_Data__ListAuthAccounts,
  _swigc__p_UMS_Data__ListAuthSysOptions,
  _swigc__p_UMS_Data__ListAuthSystems,
  _swigc__p_UMS_Data__ListCmdOptions,
  _swigc__p_UMS_Data__ListCommands,
  _swigc__p_UMS_Data__ListLocalAccOptions,
  _swigc__p_UMS_Data__ListLocalAccounts,
  _swigc__p_UMS_Data__ListMachineOptions,
  _swigc__p_UMS_Data__ListMachines,
  _swigc__p_UMS_Data__ListOptOptions,
  _swigc__p_UMS_Data__ListOptionsValues,
  _swigc__p_UMS_Data__ListSessionOptions,
  _swigc__p_UMS_Data__ListSessions,
  _swigc__p_UMS_Data__ListUsers,
  _swigc__p_UMS_Data__ListUsersOptions,
  _swigc__p_UMS_Data__LocalAccount,
  _swigc__p_UMS_Data__Machine,
  _swigc__p_UMS_Data__OptionValue,
  _swigc__p_UMS_Data__Session,
  _swigc__p_UMS_Data__User,
  _swigc__p_UserException,
  _swigc__p_VishnuException,
  _swigc__p___ecorecpp__mapping__any,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_ecore__EClass,
  _swigc__p_ecore__EObject,
  _swigc__p_ecore__EOperation,
  _swigc__p_ecore__EReference,
  _swigc__p_ecore__EStructuralFeature,
  _swigc__p_ecorecpp__mapping__EListT___UMS_Data__AuthAccount_t,
  _swigc__p_ecorecpp__mapping__EListT___UMS_Data__AuthSystem_t,
  _swigc__p_ecorecpp__mapping__EListT___UMS_Data__LocalAccount_t,
  _swigc__p_ecorecpp__mapping__EListT___UMS_Data__Machine_t,
  _swigc__p_ecorecpp__mapping__EListT___UMS_Data__User_t,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_long_double,
  _swigc__p_long_long,
  _swigc__p_p_char,
  _swigc__p_short,
  _swigc__p_std__exception,
  _swigc__p_std__listT___ecorecpp__mapping__any_t,
  _swigc__p_std__listT_ecore__EObject_p_t,
  _swigc__p_std__string,
  _swigc__p_std__stringstream,
  _swigc__p_std__vectorT_unsigned_char_std__allocatorT_unsigned_char_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_time_t,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
#endif
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,  /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      /* for Python 3 we already assigned ob_type in PyVarObject_HEAD_INIT() */
#if PY_VERSION_HEX < 0x03000000
      varlink_type.ob_type = &PyType_Type;
#endif
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d;  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  PyDict_SetItemString(d,(char*)"cvar", SWIG_globals());
  SWIG_addvarlink(SWIG_globals(),(char*)"VISHNU_OK",Swig_var_VISHNU_OK_get, Swig_var_VISHNU_OK_set);
  SWIG_Python_SetConstant(d, "VishnuException_UMS",SWIG_From_int(static_cast< int >(VishnuException::UMS)));
  SWIG_Python_SetConstant(d, "VishnuException_TMS",SWIG_From_int(static_cast< int >(VishnuException::TMS)));
  SWIG_Python_SetConstant(d, "VishnuException_FMS",SWIG_From_int(static_cast< int >(VishnuException::FMS)));
  SWIG_Python_SetConstant(d, "VishnuException_IMS",SWIG_From_int(static_cast< int >(VishnuException::IMS)));
  SWIG_Python_SetConstant(d, "VishnuException_INTERNAL",SWIG_From_int(static_cast< int >(VishnuException::INTERNAL)));
  SWIG_Python_SetConstant(d, "VishnuException_NONE",SWIG_From_int(static_cast< int >(VishnuException::NONE)));
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVALID_PARAM",Swig_var_ERRCODE_INVALID_PARAM_get, Swig_var_ERRCODE_INVALID_PARAM_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_FILENOTFOUND",Swig_var_ERRCODE_FILENOTFOUND_get, Swig_var_ERRCODE_FILENOTFOUND_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_CONFIGNOTFOUND",Swig_var_ERRCODE_CONFIGNOTFOUND_get, Swig_var_ERRCODE_CONFIGNOTFOUND_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_CLI_ERROR_NO_SESSION",Swig_var_ERRCODE_CLI_ERROR_NO_SESSION_get, Swig_var_ERRCODE_CLI_ERROR_NO_SESSION_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_CLI_ERROR_MISSING_PARAMETER",Swig_var_ERRCODE_CLI_ERROR_MISSING_PARAMETER_get, Swig_var_ERRCODE_CLI_ERROR_MISSING_PARAMETER_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_CLI_ERROR_DIET",Swig_var_ERRCODE_CLI_ERROR_DIET_get, Swig_var_ERRCODE_CLI_ERROR_DIET_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_CLI_ERROR_RUNTIME",Swig_var_ERRCODE_CLI_ERROR_RUNTIME_get, Swig_var_ERRCODE_CLI_ERROR_RUNTIME_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_AUTHENTERR",Swig_var_ERRCODE_AUTHENTERR_get, Swig_var_ERRCODE_AUTHENTERR_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_DIET",Swig_var_ERRCODE_DIET_get, Swig_var_ERRCODE_DIET_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_DBERR",Swig_var_ERRCODE_DBERR_get, Swig_var_ERRCODE_DBERR_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_DBCONN",Swig_var_ERRCODE_DBCONN_get, Swig_var_ERRCODE_DBCONN_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_SYSTEM",Swig_var_ERRCODE_SYSTEM_get, Swig_var_ERRCODE_SYSTEM_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVCOMP",Swig_var_ERRCODE_INVCOMP_get, Swig_var_ERRCODE_INVCOMP_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVMAPPER",Swig_var_ERRCODE_INVMAPPER_get, Swig_var_ERRCODE_INVMAPPER_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVEXCEP",Swig_var_ERRCODE_INVEXCEP_get, Swig_var_ERRCODE_INVEXCEP_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVDATA",Swig_var_ERRCODE_INVDATA_get, Swig_var_ERRCODE_INVDATA_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_SSH",Swig_var_ERRCODE_SSH_get, Swig_var_ERRCODE_SSH_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_USER",Swig_var_ERRCODE_UNKNOWN_USER_get, Swig_var_ERRCODE_UNKNOWN_USER_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_USERID",Swig_var_ERRCODE_UNKNOWN_USERID_get, Swig_var_ERRCODE_UNKNOWN_USERID_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_USERID_EXISTING",Swig_var_ERRCODE_USERID_EXISTING_get, Swig_var_ERRCODE_USERID_EXISTING_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_USER_LOCKED",Swig_var_ERRCODE_USER_LOCKED_get, Swig_var_ERRCODE_USER_LOCKED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_USER_ALREADY_LOCKED",Swig_var_ERRCODE_USER_ALREADY_LOCKED_get, Swig_var_ERRCODE_USER_ALREADY_LOCKED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_NO_ADMIN",Swig_var_ERRCODE_NO_ADMIN_get, Swig_var_ERRCODE_NO_ADMIN_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_TEMPORARY_PASSWORD",Swig_var_ERRCODE_TEMPORARY_PASSWORD_get, Swig_var_ERRCODE_TEMPORARY_PASSWORD_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVALID_MAIL_ADRESS",Swig_var_ERRCODE_INVALID_MAIL_ADRESS_get, Swig_var_ERRCODE_INVALID_MAIL_ADRESS_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_SESSIONKEY_NOT_FOUND",Swig_var_ERRCODE_SESSIONKEY_NOT_FOUND_get, Swig_var_ERRCODE_SESSIONKEY_NOT_FOUND_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_SESSIONKEY_EXPIRED",Swig_var_ERRCODE_SESSIONKEY_EXPIRED_get, Swig_var_ERRCODE_SESSIONKEY_EXPIRED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_SESSION_ID",Swig_var_ERRCODE_UNKNOWN_SESSION_ID_get, Swig_var_ERRCODE_UNKNOWN_SESSION_ID_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_COMMAND_RUNNING",Swig_var_ERRCODE_COMMAND_RUNNING_get, Swig_var_ERRCODE_COMMAND_RUNNING_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_MACHINE",Swig_var_ERRCODE_UNKNOWN_MACHINE_get, Swig_var_ERRCODE_UNKNOWN_MACHINE_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_MACHINE_EXISTING",Swig_var_ERRCODE_MACHINE_EXISTING_get, Swig_var_ERRCODE_MACHINE_EXISTING_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_MACHINE_LOCKED",Swig_var_ERRCODE_MACHINE_LOCKED_get, Swig_var_ERRCODE_MACHINE_LOCKED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_MACHINE_ALREADY_LOCKED",Swig_var_ERRCODE_MACHINE_ALREADY_LOCKED_get, Swig_var_ERRCODE_MACHINE_ALREADY_LOCKED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNUSABLE_MACHINE",Swig_var_ERRCODE_UNUSABLE_MACHINE_get, Swig_var_ERRCODE_UNUSABLE_MACHINE_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_LOCAL_ACCOUNT_EXIST",Swig_var_ERRCODE_LOCAL_ACCOUNT_EXIST_get, Swig_var_ERRCODE_LOCAL_ACCOUNT_EXIST_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_LOCAL_ACCOUNT",Swig_var_ERRCODE_UNKNOWN_LOCAL_ACCOUNT_get, Swig_var_ERRCODE_UNKNOWN_LOCAL_ACCOUNT_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_SAVE_CONFIG_ERROR",Swig_var_ERRCODE_SAVE_CONFIG_ERROR_get, Swig_var_ERRCODE_SAVE_CONFIG_ERROR_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_RESTORE_CONFIG_ERROR",Swig_var_ERRCODE_RESTORE_CONFIG_ERROR_get, Swig_var_ERRCODE_RESTORE_CONFIG_ERROR_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_OPTION",Swig_var_ERRCODE_UNKNOWN_OPTION_get, Swig_var_ERRCODE_UNKNOWN_OPTION_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_CLOSURE_MODE",Swig_var_ERRCODE_UNKNOWN_CLOSURE_MODE_get, Swig_var_ERRCODE_UNKNOWN_CLOSURE_MODE_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INCORRECT_TIMEOUT",Swig_var_ERRCODE_INCORRECT_TIMEOUT_get, Swig_var_ERRCODE_INCORRECT_TIMEOUT_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INCORRECT_TRANSFER_CMD",Swig_var_ERRCODE_INCORRECT_TRANSFER_CMD_get, Swig_var_ERRCODE_INCORRECT_TRANSFER_CMD_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_ROOT_USER_ONLY",Swig_var_ERRCODE_ROOT_USER_ONLY_get, Swig_var_ERRCODE_ROOT_USER_ONLY_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_LOGIN_ALREADY_USED",Swig_var_ERRCODE_LOGIN_ALREADY_USED_get, Swig_var_ERRCODE_LOGIN_ALREADY_USED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_AUTH_SYSTEM_TYPE",Swig_var_ERRCODE_UNKNOWN_AUTH_SYSTEM_TYPE_get, Swig_var_ERRCODE_UNKNOWN_AUTH_SYSTEM_TYPE_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_AUTH_SYSTEM",Swig_var_ERRCODE_UNKNOWN_AUTH_SYSTEM_get, Swig_var_ERRCODE_UNKNOWN_AUTH_SYSTEM_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_AUTH_SYSTEM_ALREADY_LOCKED",Swig_var_ERRCODE_AUTH_SYSTEM_ALREADY_LOCKED_get, Swig_var_ERRCODE_AUTH_SYSTEM_ALREADY_LOCKED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_AUTH_SYSTEM_ALREADY_EXIST",Swig_var_ERRCODE_AUTH_SYSTEM_ALREADY_EXIST_get, Swig_var_ERRCODE_AUTH_SYSTEM_ALREADY_EXIST_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_AUTH_ACCOUNT_EXIST",Swig_var_ERRCODE_AUTH_ACCOUNT_EXIST_get, Swig_var_ERRCODE_AUTH_ACCOUNT_EXIST_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_AUTH_ACCOUNT",Swig_var_ERRCODE_UNKNOWN_AUTH_ACCOUNT_get, Swig_var_ERRCODE_UNKNOWN_AUTH_ACCOUNT_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_ENCRYPTION_METHOD",Swig_var_ERRCODE_UNKNOWN_ENCRYPTION_METHOD_get, Swig_var_ERRCODE_UNKNOWN_ENCRYPTION_METHOD_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_READONLY_ACCOUNT",Swig_var_ERRCODE_READONLY_ACCOUNT_get, Swig_var_ERRCODE_READONLY_ACCOUNT_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_BATCH_SCHEDULER",Swig_var_ERRCODE_UNKNOWN_BATCH_SCHEDULER_get, Swig_var_ERRCODE_UNKNOWN_BATCH_SCHEDULER_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_BATCH_SCHEDULER_ERROR",Swig_var_ERRCODE_BATCH_SCHEDULER_ERROR_get, Swig_var_ERRCODE_BATCH_SCHEDULER_ERROR_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_JOBID",Swig_var_ERRCODE_UNKNOWN_JOBID_get, Swig_var_ERRCODE_UNKNOWN_JOBID_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_PERMISSION_DENIED",Swig_var_ERRCODE_PERMISSION_DENIED_get, Swig_var_ERRCODE_PERMISSION_DENIED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_ALREADY_TERMINATED",Swig_var_ERRCODE_ALREADY_TERMINATED_get, Swig_var_ERRCODE_ALREADY_TERMINATED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_ALREADY_CANCELED",Swig_var_ERRCODE_ALREADY_CANCELED_get, Swig_var_ERRCODE_ALREADY_CANCELED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_JOB_IS_NOT_TERMINATED",Swig_var_ERRCODE_JOB_IS_NOT_TERMINATED_get, Swig_var_ERRCODE_JOB_IS_NOT_TERMINATED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_ALREADY_DOWNLOADED",Swig_var_ERRCODE_ALREADY_DOWNLOADED_get, Swig_var_ERRCODE_ALREADY_DOWNLOADED_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_WORKID",Swig_var_ERRCODE_UNKNOWN_WORKID_get, Swig_var_ERRCODE_UNKNOWN_WORKID_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVPROCESS",Swig_var_ERRCODE_INVPROCESS_get, Swig_var_ERRCODE_INVPROCESS_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVVISHNU",Swig_var_ERRCODE_INVVISHNU_get, Swig_var_ERRCODE_INVVISHNU_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVEXPORT",Swig_var_ERRCODE_INVEXPORT_get, Swig_var_ERRCODE_INVEXPORT_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_INVALID_PATH",Swig_var_ERRCODE_INVALID_PATH_get, Swig_var_ERRCODE_INVALID_PATH_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_RUNTIME_ERROR",Swig_var_ERRCODE_RUNTIME_ERROR_get, Swig_var_ERRCODE_RUNTIME_ERROR_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ERRCODE_UNKNOWN_FILETRANSFERID",Swig_var_ERRCODE_UNKNOWN_FILETRANSFERID_get, Swig_var_ERRCODE_UNKNOWN_FILETRANSFERID_set);
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

