/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sysfera.vishnu.api.vishnu.internal;

public class VISHNU {
  public static int connect(String userId, String password, Session session, ConnectOptions connectOpt) throws InternalUMSException {
    return VISHNUJNI.connect__SWIG_0(userId, password, Session.getCPtr(session), session, ConnectOptions.getCPtr(connectOpt), connectOpt);
  }

  public static int connect(ListUsers users, Session session, ConnectOptions connectOpt) throws InternalUMSException {
    return VISHNUJNI.connect__SWIG_1(ListUsers.getCPtr(users), users, Session.getCPtr(session), session, ConnectOptions.getCPtr(connectOpt), connectOpt);
  }

  public static int reconnect(String userId, String password, String sessionId, Session session) throws InternalUMSException {
    return VISHNUJNI.reconnect__SWIG_0(userId, password, sessionId, Session.getCPtr(session), session);
  }

  public static int reconnect(ListUsers users, String sessionId, Session session) throws InternalUMSException {
    return VISHNUJNI.reconnect__SWIG_1(ListUsers.getCPtr(users), users, sessionId, Session.getCPtr(session), session);
  }

  public static int close(String sessionKey) throws InternalUMSException {
    return VISHNUJNI.close(sessionKey);
  }

  public static int addUser(String sessionKey, User newUser) throws InternalUMSException {
    return VISHNUJNI.addUser(sessionKey, User.getCPtr(newUser), newUser);
  }

  public static int updateUser(String sessionKey, User user) throws InternalUMSException {
    return VISHNUJNI.updateUser(sessionKey, User.getCPtr(user), user);
  }

  public static int deleteUser(String sessionKey, String userId) throws InternalUMSException {
    return VISHNUJNI.deleteUser(sessionKey, userId);
  }

  public static int changePassword(String userId, String password, String passwordNew) throws InternalUMSException {
    return VISHNUJNI.changePassword(userId, password, passwordNew);
  }

  public static int resetPassword(String sessionKey, String userId, java.lang.String[] tmpPassword) throws InternalUMSException {
    return VISHNUJNI.resetPassword(sessionKey, userId, tmpPassword);
  }

  public static int addMachine(String sessionKey, Machine newMachine) throws InternalUMSException {
    return VISHNUJNI.addMachine(sessionKey, Machine.getCPtr(newMachine), newMachine);
  }

  public static int updateMachine(String sessionKey, Machine machine) throws InternalUMSException {
    return VISHNUJNI.updateMachine(sessionKey, Machine.getCPtr(machine), machine);
  }

  public static int deleteMachine(String sessionKey, String machineId) throws InternalUMSException {
    return VISHNUJNI.deleteMachine(sessionKey, machineId);
  }

  public static int addLocalAccount(String sessionKey, LocalAccount newLocalAccount, java.lang.String[] sshPublicKey) throws InternalUMSException {
    return VISHNUJNI.addLocalAccount(sessionKey, LocalAccount.getCPtr(newLocalAccount), newLocalAccount, sshPublicKey);
  }

  public static int updateLocalAccount(String sessionKey, LocalAccount localAccount) throws InternalUMSException {
    return VISHNUJNI.updateLocalAccount(sessionKey, LocalAccount.getCPtr(localAccount), localAccount);
  }

  public static int deleteLocalAccount(String sessionKey, String userId, String machineId) throws InternalUMSException {
    return VISHNUJNI.deleteLocalAccount(sessionKey, userId, machineId);
  }

  public static int configureOption(String sessionKey, OptionValue optionValue) throws InternalUMSException {
    return VISHNUJNI.configureOption(sessionKey, OptionValue.getCPtr(optionValue), optionValue);
  }

  public static int configureDefaultOption(String sessionKey, OptionValue optionValue) throws InternalUMSException {
    return VISHNUJNI.configureDefaultOption(sessionKey, OptionValue.getCPtr(optionValue), optionValue);
  }

  public static int listSessions(String sessionKey, ListSessions listSession, ListSessionOptions options) throws InternalUMSException {
    return VISHNUJNI.listSessions(sessionKey, ListSessions.getCPtr(listSession), listSession, ListSessionOptions.getCPtr(options), options);
  }

  public static int listLocalAccounts(String sessionKey, ListLocalAccounts listLocalAcc, ListLocalAccOptions options) throws InternalUMSException {
    return VISHNUJNI.listLocalAccounts(sessionKey, ListLocalAccounts.getCPtr(listLocalAcc), listLocalAcc, ListLocalAccOptions.getCPtr(options), options);
  }

  public static int listMachines(String sessionKey, ListMachines listMachine, ListMachineOptions options) throws InternalUMSException {
    return VISHNUJNI.listMachines(sessionKey, ListMachines.getCPtr(listMachine), listMachine, ListMachineOptions.getCPtr(options), options);
  }

  public static int listHistoryCmd(String sessionKey, ListCommands listCommands, ListCmdOptions options) throws InternalUMSException {
    return VISHNUJNI.listHistoryCmd(sessionKey, ListCommands.getCPtr(listCommands), listCommands, ListCmdOptions.getCPtr(options), options);
  }

  public static int listOptions(String sessionKey, ListOptionsValues listOptValues, ListOptOptions options) throws InternalUMSException {
    return VISHNUJNI.listOptions(sessionKey, ListOptionsValues.getCPtr(listOptValues), listOptValues, ListOptOptions.getCPtr(options), options);
  }

  public static int listUsers(String sessionKey, ListUsers listUsers, ListUsersOptions listOptions) throws InternalUMSException {
    return VISHNUJNI.listUsers(sessionKey, ListUsers.getCPtr(listUsers), listUsers, ListUsersOptions.getCPtr(listOptions), listOptions);
  }

  public static int addAuthSystem(String sessionKey, AuthSystem newAuthSys) throws InternalUMSException {
    return VISHNUJNI.addAuthSystem(sessionKey, AuthSystem.getCPtr(newAuthSys), newAuthSys);
  }

  public static int updateAuthSystem(String sessionKey, AuthSystem AuthSys) throws InternalUMSException {
    return VISHNUJNI.updateAuthSystem(sessionKey, AuthSystem.getCPtr(AuthSys), AuthSys);
  }

  public static int deleteAuthSystem(String sessionKey, String authSystemId) throws InternalUMSException {
    return VISHNUJNI.deleteAuthSystem(sessionKey, authSystemId);
  }

  public static int listAuthSystems(String sessionKey, ListAuthSystems listAuthSys, ListAuthSysOptions options) throws InternalUMSException {
    return VISHNUJNI.listAuthSystems(sessionKey, ListAuthSystems.getCPtr(listAuthSys), listAuthSys, ListAuthSysOptions.getCPtr(options), options);
  }

  public static int addAuthAccount(String sessionKey, AuthAccount authAccount) throws InternalUMSException {
    return VISHNUJNI.addAuthAccount(sessionKey, AuthAccount.getCPtr(authAccount), authAccount);
  }

  public static int updateAuthAccount(String sessionKey, AuthAccount authenAccount) throws InternalUMSException {
    return VISHNUJNI.updateAuthAccount(sessionKey, AuthAccount.getCPtr(authenAccount), authenAccount);
  }

  public static int deleteAuthAccount(String sessionKey, String authSystemId, String userIdOption) throws InternalUMSException {
    return VISHNUJNI.deleteAuthAccount(sessionKey, authSystemId, userIdOption);
  }

  public static int listAuthAccounts(String sessionKey, ListAuthAccounts listAuthAccounts, ListAuthAccOptions options) throws InternalUMSException {
    return VISHNUJNI.listAuthAccounts(sessionKey, ListAuthAccounts.getCPtr(listAuthAccounts), listAuthAccounts, ListAuthAccOptions.getCPtr(options), options);
  }

  public static int vishnuInitialize(String cfg) throws InternalUMSException {
    return VISHNUJNI.vishnuInitialize(cfg);
  }

  public static void vishnuFinalize() throws InternalUMSException {
    VISHNUJNI.vishnuFinalize();
  }

  public static int defineUserIdentifier(String sessionKey, String fmt) throws InternalUMSException {
    return VISHNUJNI.defineUserIdentifier(sessionKey, fmt);
  }

  public static int defineMachineIdentifier(String sessionKey, String fmt) throws InternalUMSException {
    return VISHNUJNI.defineMachineIdentifier(sessionKey, fmt);
  }

  public static int defineJobIdentifier(String sessionKey, String fmt) throws InternalUMSException {
    return VISHNUJNI.defineJobIdentifier(sessionKey, fmt);
  }

  public static int defineTransferIdentifier(String sessionKey, String fmt) throws InternalUMSException {
    return VISHNUJNI.defineTransferIdentifier(sessionKey, fmt);
  }

  public static int defineAuthIdentifier(String sessionKey, String fmt) throws InternalUMSException {
    return VISHNUJNI.defineAuthIdentifier(sessionKey, fmt);
  }

  public static int defineWorkIdentifier(String sessionKey, String fmt) throws InternalUMSException {
    return VISHNUJNI.defineWorkIdentifier(sessionKey, fmt);
  }

  public static int exportCommands(String sessionKey, String oldSessionId, String filename) throws InternalUMSException {
    return VISHNUJNI.exportCommands(sessionKey, oldSessionId, filename);
  }

  public static int ping(SWIGTYPE_p_std__mapT_std__string_std__string_t result, String serverName, String mid) throws InternalUMSException {
    return VISHNUJNI.ping(SWIGTYPE_p_std__mapT_std__string_std__string_t.getCPtr(result), serverName, mid);
  }

  public static int getServerVersion(SWIGTYPE_p_std__mapT_std__string_std__string_t result, String serverName, String mid) throws InternalUMSException {
    return VISHNUJNI.getServerVersion(SWIGTYPE_p_std__mapT_std__string_std__string_t.getCPtr(result), serverName, mid);
  }

  public static int listServers(SWIGTYPE_p_std__mapT_std__string_std__string_t result, String mid) throws InternalUMSException {
    return VISHNUJNI.listServers(SWIGTYPE_p_std__mapT_std__string_std__string_t.getCPtr(result), mid);
  }

}
